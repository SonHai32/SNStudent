{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/web-dev/React/cstudy/src/components/auth/login.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, Icon, Header, Segment, Form, Button, Message, TransitionablePortal } from 'semantic-ui-react';\nimport firebase from '../../firebase';\nimport facebookProvider from './facebookAuth';\nimport gitProvider from './gitAuth';\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      errors: [],\n      isLoading: false,\n      userRef: firebase.database().ref('users')\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      this.setState({\n        errors: []\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (!this.isFormValid(this.state)) {\n        this.setState({\n          isLoading: true\n        });\n        firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then(() => {\n          this.setState({\n            isLoading: false\n          });\n          this.setState({\n            errors: []\n          });\n          console.log('sig in');\n        }).catch(err => {\n          this.setState({\n            errors: this.state.errors.concat(err),\n            isLoading: false\n          });\n        });\n      }\n    };\n\n    this.isFormValid = ({\n      email,\n      password\n    }) => {\n      return !email.length || !password.length;\n    };\n\n    this.displayError = (errors, inputName) => {\n      let haveErrorMessage;\n      errors.some(error => error.message.toLowerCase().includes(inputName) ? haveErrorMessage = {\n        content: error.message,\n        pointing: 'below'\n      } : haveErrorMessage = false);\n      return haveErrorMessage;\n    };\n\n    this.facebookLogin = event => {\n      event.preventDefault();\n      firebase.auth().signInWithPopup(facebookProvider).then(result => {\n        this.saveUserFacebook(result.user);\n      }).catch(err => {\n        console.log(err);\n        this.displayAuthError(err);\n        this.setState({\n          errors: this.state.errors.concat(err)\n        });\n      });\n    };\n\n    this.displayAuthError = error => {\n      if (error.length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.gitLogin = event => {\n      event.preventDefault();\n      firebase.auth().signInWithPopup(gitProvider).then(result => {\n        this.saveUserGit(result.user);\n      }).catch(function (error) {\n        console.log(error);\n        var errorCode = error.code;\n\n        if (errorCode === 'auth/account-exists-with-different-credential') {\n          alert('You have signed up with a different provider for that email.'); // Handle linking here if your app allows it.\n        } else {\n          console.error(error);\n        }\n      });\n    };\n\n    this.saveUserFacebook = user => {\n      let userId = user.uid;\n      let userExisted = '';\n      this.state.userRef.orderByKey().equalTo(userId).on('child_added', snap => {\n        userExisted = snap.key;\n      });\n\n      if (userId !== userExisted) {\n        //if user has existed => Save user to database\n        this.state.userRef.child(userId).set({\n          name: user.displayName,\n          avatar: user.photoURL,\n          gender: 'Male',\n          phoneNumber: user.phoneNumber\n        });\n      } // else Dont save data\n\n    };\n\n    this.saveUserGit = user => {\n      let userId = user.uid;\n      let userExisted = '';\n      this.state.userRef.orderByKey().equalTo(userId).on('child_added', snap => {\n        userExisted = snap.key;\n      });\n\n      if (userId !== userExisted) {\n        //if user has existed => Save user to database\n        this.state.userRef.child(userId).set({\n          name: user.email.split(/[@]/)[0],\n          avatar: user.photoURL,\n          gender: 'Male',\n          phoneNumber: user.phoneNumber\n        });\n      } // else Dont save data\n\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          errors = _this$state.errors,\n          isLoading = _this$state.isLoading;\n    const open = this.displayAuthError(errors);\n    return React.createElement(Grid, {\n      verticalAlign: \"middle\",\n      textAlign: \"center\",\n      className: \"register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(TransitionablePortal, {\n      open: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        position: 'fixed',\n        left: '50%',\n        top: '50%',\n        zindex: '1000',\n        maxWidth: '480px',\n        height: '200px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Login error\"))), React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 480\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Header, {\n      color: \"teal\",\n      textAlign: \"center\",\n      as: \"h1\",\n      style: {\n        padding: '2em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Sign in to CStudy\"), React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      name: \"email\",\n      placeholder: \"Emal Address\",\n      fluid: true,\n      required: true,\n      error: this.displayError(errors, 'email'),\n      size: \"large\",\n      type: \"text\",\n      icon: \"mail\",\n      iconPosition: \"left\",\n      onChange: this.handleChange,\n      value: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      name: \"password\",\n      placeholder: \"Password\",\n      fluid: true,\n      required: true,\n      error: this.displayError(errors, 'password'),\n      size: \"large\",\n      type: \"password\",\n      icon: \"key\",\n      iconPosition: \"left\",\n      onChange: this.handleChange,\n      value: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(Button, {\n      size: \"large\",\n      fluid: true,\n      color: \"teal\",\n      loading: isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"You don't have an account ? \", React.createElement(Link, {\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Register\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"or Sign in with\"), React.createElement(Button.Group, {\n      widths: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"facebook\",\n      size: \"large\",\n      onClick: this.facebookLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"facebook\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), \"Facebook\"), React.createElement(Button, {\n      color: \"black\",\n      size: \"large\",\n      onClick: this.gitLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"github\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), \"Github\"))))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/hari/Desktop/web-dev/React/cstudy/src/components/auth/login.js"],"names":["React","Link","Grid","Icon","Header","Segment","Form","Button","Message","TransitionablePortal","firebase","facebookProvider","gitProvider","Login","Component","state","email","password","errors","isLoading","userRef","database","ref","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","isFormValid","auth","signInWithEmailAndPassword","then","console","log","catch","err","concat","length","displayError","inputName","haveErrorMessage","some","error","message","toLowerCase","includes","content","pointing","facebookLogin","signInWithPopup","result","saveUserFacebook","user","displayAuthError","gitLogin","saveUserGit","errorCode","code","alert","userId","uid","userExisted","orderByKey","equalTo","on","snap","key","child","set","displayName","avatar","photoURL","gender","phoneNumber","split","render","open","position","left","top","zindex","maxWidth","height","padding"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {Grid,Icon,Header,Segment, Form, Button,Message, TransitionablePortal} from 'semantic-ui-react'\nimport firebase from '../../firebase'\nimport facebookProvider from './facebookAuth'\nimport gitProvider from './gitAuth'\n\n\nclass Login extends React.Component{\n\n    state={\n        email: '',\n        password:'',\n        errors: [],\n        isLoading: false, \n        userRef: firebase.database().ref('users')\n\n\n    }\n\n\n\n    handleChange = event =>{\n        this.setState({[event.target.name]: event.target.value})\n        this.setState({errors: []})  \n    }\n\n    handleSubmit = event =>{\n        event.preventDefault();\n       if(!this.isFormValid(this.state)){\n        this.setState({isLoading: true})\n        firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then(() => {\n            this.setState({isLoading: false})\n            this.setState({errors: []})\n            console.log('sig in')\n        \n        })\n        \n        .catch(err =>{\n            this.setState({errors: this.state.errors.concat(err) ,isLoading: false})\n        })\n       }\n    }\n\n\n    isFormValid = ({email,password}) =>{\n        return !email.length || !password.length\n    }\n\n    \n    displayError = (errors, inputName) => {\n        let haveErrorMessage;\n        errors.some(error => error.message.toLowerCase().includes(inputName) ? haveErrorMessage={content: error.message, pointing: 'below'} : haveErrorMessage=false)\n        return haveErrorMessage;\n    }\n\n    facebookLogin = event =>{\n        event.preventDefault();\n        firebase.auth().signInWithPopup(facebookProvider).then( (result) => {\n      \n            this.saveUserFacebook(result.user)\n            \n         \n          })\n          .catch(err =>{\n              console.log(err);\n              this.displayAuthError(err)\n              this.setState({errors: this.state.errors.concat(err)})\n                \n          })\n    }\n\n    // displayAuthError = error =>(\n    //     <TransitionablePortal  \n    //                 open\n    //                 className='display__err'\n    //             >\n    //                 <Segment>\n    //                     <Header as='h3'> Open Portal</Header>\n    //                 </Segment>\n    \n    //             </TransitionablePortal>\n    // )\n    \n\n    displayAuthError = error =>{\n        if(error.length > 0){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    gitLogin = event =>{\n        event.preventDefault();\n        firebase.auth().signInWithPopup(gitProvider).then( (result) => {\n            this.saveUserGit(result.user);\n          }).catch(function(error) {\n            console.log(error)\n            var errorCode = error.code;\n            \n            if (errorCode === 'auth/account-exists-with-different-credential') {\n              alert('You have signed up with a different provider for that email.');\n              // Handle linking here if your app allows it.\n            } else {\n              console.error(error);\n            }\n          });\n    }\n\n    saveUserFacebook = user =>{\n\n        let userId = user.uid;\n        let userExisted = ''\n        this.state.userRef.orderByKey().equalTo(userId).on('child_added', snap  =>{\n            userExisted = snap.key;\n        });\n\n        if(userId !== userExisted){\n            //if user has existed => Save user to database\n\n            this.state.userRef.child(userId).set({\n                name: user.displayName,\n                avatar: user.photoURL,\n                gender: 'Male',\n                phoneNumber: user.phoneNumber,\n            })\n             \n        }\n        // else Dont save data\n\n    }\n\n    saveUserGit = user =>{\n\n        let userId = user.uid;\n        let userExisted = ''\n        this.state.userRef.orderByKey().equalTo(userId).on('child_added', snap  =>{\n            userExisted = snap.key;\n        });\n\n        if(userId !== userExisted){\n            //if user has existed => Save user to database\n\n            this.state.userRef.child(userId).set({\n                name: user.email.split(/[@]/)[0],\n                avatar: user.photoURL,\n                gender: 'Male',\n                phoneNumber: user.phoneNumber,\n            })\n             \n        }\n        // else Dont save data\n\n    }\n\n    render(){\n        const {email, password, errors, isLoading} = this.state;\n        const open = this.displayAuthError(errors);\n        return(\n            \n            <Grid verticalAlign=\"middle\" textAlign=\"center\" className='register'>\n                 <TransitionablePortal  \n                   open\n                >\n                    <Segment style={{position: 'fixed', left:'50%', top: '50%', zindex:'1000' ,maxWidth: '480px',height: '200px'}}>\n                        <Header as='h3' color='red'>Login error</Header>\n                        \n                    </Segment>\n    \n                </TransitionablePortal>\n                <Grid.Column style={{maxWidth: 480}}>\n                    <Header color='teal' textAlign='center' as='h1' style={{padding: '2em'}}>\n                        Sign in to CStudy\n                     \n                    </Header>\n                    \n                    <Form size='large' onSubmit={this.handleSubmit} >\n                        <Segment stacked>\n                            <Form.Input\n                                name='email'\n                                placeholder='Emal Address'\n                                fluid\n                                required\n                                error={this.displayError(errors, 'email')}\n                                size='large'\n                                type='text'\n                                icon='mail'\n                                iconPosition='left'\n                                onChange={this.handleChange}\n                                value={email}\n                            />\n                            <Form.Input \n                                name='password'\n                                placeholder='Password'\n                                fluid\n                                required\n                                error={this.displayError(errors, 'password')}\n                                size='large'\n                                type='password'\n                                icon='key'\n                                iconPosition='left'\n                                onChange={this.handleChange}\n                                value={password}\n                            />\n                            <Button \n                            size='large' \n                            fluid \n                            color='teal'\n                            loading={isLoading}\n                            >\n                                Submit\n                            </Button>\n                            <Message>\n                                You don't have an account ? <Link to='/register'>Register</Link>\n                            </Message>\n                            <p>or Sign in with</p>\n                            <Button.Group widths='2'>\n                                <Button color='facebook' size='large' onClick={this.facebookLogin}>\n                                <Icon name='facebook' />\n                                Facebook\n                                </Button>\n\n                                <Button color='black' size='large' onClick={this.gitLogin}>\n                                    <Icon name='github' />\n                                    Github\n                                </Button>\n                            </Button.Group>\n                        </Segment> \n                    </Form>\n                    \n                </Grid.Column>\n               \n                \n            </Grid>\n        )\n    }\n\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}