{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\n\nclass MultiWatching {\n  constructor(watchings, compiler) {\n    this.watchings = watchings;\n    this.compiler = compiler;\n  }\n\n  invalidate() {\n    for (const watching of this.watchings) {\n      watching.invalidate();\n    }\n  }\n\n  suspend() {\n    for (const watching of this.watchings) {\n      watching.suspend();\n    }\n  }\n\n  resume() {\n    for (const watching of this.watchings) {\n      watching.resume();\n    }\n  }\n\n  close(callback) {\n    asyncLib.forEach(this.watchings, (watching, finishedCallback) => {\n      watching.close(finishedCallback);\n    }, err => {\n      this.compiler.hooks.watchClose.call();\n\n      if (typeof callback === \"function\") {\n        this.compiler.running = false;\n        callback(err);\n      }\n    });\n  }\n\n}\n\nmodule.exports = MultiWatching;","map":null,"metadata":{},"sourceType":"script"}