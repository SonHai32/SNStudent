{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/web-dev/React/SNStudent/src/components/NewsFeeds/CreatePostModal.js\";\nimport React from 'react';\nimport { Modal, Header, Form, Image, Button, Input, TextArea } from 'semantic-ui-react';\nimport { Picker, emojiIndex } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\nimport uuid from 'uuidv4';\nimport firebase from '../../firebase';\nimport FileModal from './FileModal';\nimport pictureIcon from \"../../Images/picture.svg\";\nimport tagFriends from \"../../Images/tagfriends.svg\";\nimport locationIcon from \"../../Images/location.svg\";\nimport editIcon from \"../../Images/edit.svg\";\nimport smileIcon from \"../../Images/smile.svg\";\n\nclass CreatePostModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      postText: '',\n      postImages: [],\n      emojiPicker: false,\n      selectionStart: 0,\n      fileModal: false,\n      uploadTask: null,\n      uploadPercent: 0,\n      storeRef: firebase.storage().ref(),\n      postsRef: firebase.database().ref('posts')\n    };\n\n    this.handleTogglePicker = () => {\n      this.setState({\n        emojiPicker: !this.state.emojiPicker\n      });\n    };\n\n    this.handlePostChange = event => {\n      this.setState({\n        postText: event.target.value\n      });\n    };\n\n    this.handleEmojiSelect = emoji => {\n      const oldPost = this.state.postText;\n      const newPost = this.addEmojiToInputWithSeletionStart(oldPost, this.state.selectionStart, this.colonToUnicode(emoji.colons));\n      this.setState({\n        postText: newPost\n      });\n    };\n\n    this.colonToUnicode = emojiMessage => {\n      let x = emojiMessage.replace(/:/g, \"\");\n      let emoji = emojiIndex.emojis[x];\n\n      if (emoji !== undefined) {\n        let unicode = emoji.native;\n\n        if (unicode !== undefined) {\n          return unicode;\n        } else {\n          return null;\n        }\n      }\n    };\n\n    this.addEmojiToInputWithSeletionStart = (post, selectionStart, emoji) => {\n      if (post) {\n        if (emoji) {\n          return post.substring(0, selectionStart) + emoji + post.substring(selectionStart, post.length);\n        } else {\n          return post;\n        }\n      } else {\n        if (emoji) {\n          return post + emoji;\n        }\n      }\n    };\n\n    this.inputClicked = event => {\n      this.setState({\n        selectionStart: event.target.selectionStart\n      });\n    };\n\n    this.inputKeyPressed = event => {\n      this.setState({\n        selectionStart: event.target.selectionStart\n      });\n    };\n\n    this.openFileModal = () => {\n      this.setState({\n        fileModal: true\n      });\n    };\n\n    this.closeFileModal = () => {\n      this.setState({\n        fileModal: false\n      });\n    };\n\n    this.uploadFile = (file, metadata) => {\n      const filePath = this.props.user.uid + '/media/image/' + uuid() + '.jpg';\n      const uploadTask = this.state.storeRef.child(filePath).put(file, metadata);\n      this.setState({\n        uploadTask\n      }, () => {\n        this.state.uploadTask.on('state_changed', snap => {\n          const uploadPercent = Math.round(snap.bytesTransferred / snap.totalBytes * 100);\n          this.setState({\n            uploadPercent\n          }, () => {\n            if (this.state.uploadPercent == 100) {\n              setTimeout(() => {\n                this.state.uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n                  const image = [];\n                  image.push({\n                    downloadURL: downloadURL,\n                    imagePath: this.state.uploadTask.location_.path\n                  });\n                  this.setState({\n                    postImages: this.state.postImages.concat(image)\n                  }, () => {\n                    console.log(this.state.postImages);\n                  });\n                });\n              }, 800 - this.state.uploadPercent);\n            }\n          });\n        });\n      });\n    };\n\n    this.savePost = event => {\n      event.preventDefault();\n      const postChild = this.props.user.uid + uuid() + '/post';\n      const postCreate = {\n        postChild: postChild,\n        createByUid: this.props.user.uid,\n        createByName: this.props.user.displayName,\n        avatar: this.props.user.photoURL,\n        timestamp: Date.now(),\n        postImages: Array().concat(this.state.postImages),\n        postText: this.state.postText,\n        liked: [{\n          username: 'null',\n          userUID: 'null'\n        }]\n      };\n      this.state.postsRef.child(postChild).set(postCreate).then(() => {\n        this.setState({\n          postText: '',\n          postImages: []\n        });\n        this.props.closeModal();\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          postText = _this$state.postText,\n          emojiPicker = _this$state.emojiPicker;\n    const _this$props = this.props,\n          user = _this$props.user,\n          modal = _this$props.modal,\n          closeModal = _this$props.closeModal;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(FileModal, {\n      fileModal: this.state.fileModal,\n      uploadFile: this.uploadFile,\n      closeModal: this.closeFileModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      centered: true,\n      size: \"small\",\n      open: modal,\n      onClose: closeModal,\n      closeIcon: true,\n      style: {\n        top: '10%',\n        transform: 'translateY(-10%)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Header.Content, {\n      style: {\n        opacity: 0.6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \" \", React.createElement(Image, {\n      spaced: \"right\",\n      style: {\n        width: '30px'\n      },\n      src: editIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), \"T\\u1EA1o B\\xE0i Vi\\u1EBFt  \")), \" \"), \" \", React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Form, {\n      style: {\n        marginTop: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Image, {\n      inline: true,\n      size: \"tiny\",\n      avatar: true,\n      src: user.photoURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      rows: 1,\n      value: postText,\n      type: \"text\",\n      placeholder: \"B\\u1EA1n mu\\u1ED1n chia s\\u1EBB \\u0111i\\u1EC1u g\\xEC ?\",\n      transparent: true,\n      onClick: this.inputClicked,\n      onChange: this.handlePostChange,\n      style: {\n        height: '100%',\n        fontSize: 16,\n        float: 'left',\n        border: 'none',\n        background: 'none',\n        resize: 'none'\n      },\n      onKeyUp: this.inputKeyPressed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }))), React.createElement(Button.Group, {\n      widths: 4,\n      size: \"small\",\n      compact: true,\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.openFileModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(Image, {\n      style: {\n        width: '30px'\n      },\n      spaced: \"right\",\n      centered: true,\n      src: pictureIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \" \\u1EA2nh / Video \")), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Image, {\n      style: {\n        width: '30px'\n      },\n      spaced: \"right\",\n      centered: true,\n      src: tagFriends,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \" G\\u1EAFn th\\u1EBB b\\u1EA1n b\\xE8 \")), React.createElement(Button, {\n      onClick: this.handleTogglePicker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Image, {\n      style: {\n        width: '30px'\n      },\n      spaced: \"right\",\n      centered: true,\n      src: smileIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \" C\\u1EA3m x\\xFAc \")), \" \", emojiPicker ? React.createElement(\"div\", {\n      onMouseLeave: this.handleTogglePicker,\n      className: \"emoji-mart-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(Picker, {\n      i18n: {\n        search: 'Tìm kiếm',\n        categories: {\n          search: 'Tìm kiếm theo mục',\n          recent: 'Đã sử dụng gần đây'\n        }\n      },\n      onSelect: this.handleEmojiSelect,\n      set: \"facebook\",\n      emoji: \"point_up\",\n      style: {\n        position: \"absolute\",\n        left: '55%',\n        top: '65%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), \" \") : ''), React.createElement(Form.Button, {\n      onClick: this.savePost,\n      color: \"green\",\n      fluid: true,\n      style: {\n        marginTop: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \" Chia s\\u1EBB \")), \"  \"), \" \"), \" \");\n  }\n\n}\n\nexport default CreatePostModal;","map":{"version":3,"sources":["/home/hari/Desktop/web-dev/React/SNStudent/src/components/NewsFeeds/CreatePostModal.js"],"names":["React","Modal","Header","Form","Image","Button","Input","TextArea","Picker","emojiIndex","uuid","firebase","FileModal","CreatePostModal","Component","state","postText","postImages","emojiPicker","selectionStart","fileModal","uploadTask","uploadPercent","storeRef","storage","ref","postsRef","database","handleTogglePicker","setState","handlePostChange","event","target","value","handleEmojiSelect","emoji","oldPost","newPost","addEmojiToInputWithSeletionStart","colonToUnicode","colons","emojiMessage","x","replace","emojis","undefined","unicode","native","post","substring","length","inputClicked","inputKeyPressed","openFileModal","closeFileModal","uploadFile","file","metadata","filePath","props","user","uid","child","put","on","snap","Math","round","bytesTransferred","totalBytes","setTimeout","snapshot","getDownloadURL","then","downloadURL","image","push","imagePath","location_","path","concat","console","log","savePost","preventDefault","postChild","postCreate","createByUid","createByName","displayName","avatar","photoURL","timestamp","Date","now","Array","liked","username","userUID","set","closeModal","render","modal","top","transform","opacity","width","editIcon","marginTop","height","fontSize","float","border","background","resize","pictureIcon","marginLeft","tagFriends","smileIcon","search","categories","recent","position","left"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal, Header, Form, Image, Button, Input, TextArea } from 'semantic-ui-react';\nimport { Picker, emojiIndex } from 'emoji-mart'\nimport 'emoji-mart/css/emoji-mart.css'\nimport uuid from 'uuidv4'\n\nimport firebase from '../../firebase'\nimport FileModal from './FileModal'\n\n\nimport pictureIcon from '../../Images/picture.svg'\nimport tagFriends from '../../Images/tagfriends.svg'\nimport locationIcon from '../../Images/location.svg'\nimport editIcon from '../../Images/edit.svg'\nimport smileIcon from '../../Images/smile.svg'\n\nclass CreatePostModal extends React.Component {\n\n    state = {\n        postText: '',\n        postImages: [],\n        emojiPicker: false,\n        selectionStart: 0,\n        fileModal: false,\n        uploadTask: null,\n        uploadPercent: 0,\n        storeRef: firebase.storage().ref(),\n        postsRef: firebase.database().ref('posts'),\n\n\n    }\n\n\n\n    handleTogglePicker = () => {\n        this.setState({ emojiPicker: !this.state.emojiPicker })\n    }\n\n    handlePostChange = event => {\n        this.setState({ postText: event.target.value })\n    }\n\n    handleEmojiSelect = emoji => {\n\n        const oldPost = this.state.postText;\n        const newPost = this.addEmojiToInputWithSeletionStart(oldPost, this.state.selectionStart, this.colonToUnicode(emoji.colons));\n        this.setState({ postText: newPost })\n\n    }\n\n\n\n    colonToUnicode = emojiMessage => {\n        let x = emojiMessage.replace(/:/g, \"\")\n        let emoji = emojiIndex.emojis[x];\n        if (emoji !== undefined) {\n            let unicode = emoji.native\n            if (unicode !== undefined) {\n                return unicode\n            } else {\n                return null\n            }\n        }\n\n\n    }\n\n    addEmojiToInputWithSeletionStart = (post, selectionStart, emoji) => {\n\n        if (post) {\n            if (emoji) {\n\n                return post.substring(0, selectionStart) + emoji + post.substring(selectionStart, post.length)\n            } else {\n                return post\n            }\n        } else {\n            if (emoji) {\n                return post + emoji\n            }\n        }\n    }\n\n    inputClicked = event => {\n\n        this.setState({ selectionStart: event.target.selectionStart });\n\n    }\n\n    inputKeyPressed = event => {\n        this.setState({ selectionStart: event.target.selectionStart });\n\n\n    }\n\n    openFileModal = () => {\n        this.setState({ fileModal: true })\n    }\n\n    closeFileModal = () => {\n        this.setState({ fileModal: false })\n    }\n\n    uploadFile = (file, metadata) => {\n        const filePath = this.props.user.uid + '/media/image/' + uuid() + '.jpg';\n        const uploadTask = this.state.storeRef.child(filePath).put(file, metadata);\n        this.setState({ uploadTask }, () => {\n            this.state.uploadTask.on('state_changed', snap => {\n                const uploadPercent = Math.round((snap.bytesTransferred / snap.totalBytes) * 100)\n                this.setState({ uploadPercent }, () => {\n                    if (this.state.uploadPercent == 100) {\n                        setTimeout(() => {\n                            this.state.uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n                                const image = [];\n                                image.push({ downloadURL: downloadURL, imagePath: this.state.uploadTask.location_.path })\n                                this.setState({ postImages: this.state.postImages.concat(image) }, () => {\n                                    console.log(this.state.postImages)\n                                })\n                            })\n                        }, 800 - this.state.uploadPercent)\n                    }\n                })\n            });\n\n        })\n\n\n    }\n\n    savePost = event => {\n        event.preventDefault();\n        const postChild = this.props.user.uid + uuid() + '/post';\n        const postCreate = {\n            postChild: postChild,\n            createByUid: this.props.user.uid,\n            createByName: this.props.user.displayName,\n            avatar: this.props.user.photoURL,\n            timestamp: Date.now(),\n            postImages: Array().concat(this.state.postImages),\n            postText: this.state.postText,\n            liked: [{ username: 'null', userUID: 'null' }]\n        }\n\n        this.state.postsRef.child(postChild).set(postCreate).then(() => {\n            this.setState({ postText: '', postImages: [] });\n            this.props.closeModal()\n        })\n\n    }\n\n\n    render() {\n\n        const { postText, emojiPicker } = this.state;\n        const { user, modal, closeModal } = this.props;\n\n        return ( <\n            div className = \"wrapper\" >\n            <\n            FileModal fileModal = { this.state.fileModal }\n            uploadFile = { this.uploadFile }\n            closeModal = { this.closeFileModal }\n            />\n\n            <\n            Modal centered size = 'small'\n            open = { modal }\n            onClose = { closeModal }\n            closeIcon style = {\n                { top: '10%', transform: 'translateY(-10%)' } } >\n            <\n            Modal.Header >\n            <\n            Header as = 'h3' >\n\n            <\n            Header.Content style = {\n                { opacity: 0.6 } } > < Image spaced = 'right'\n            style = {\n                { width: '30px' } }\n            src = { editIcon }\n            />Tạo Bài Viết  </Header.Content >\n\n            <\n            /Header> <\n            /Modal.Header> <\n            Modal.Content >\n            <\n            Form style = {\n                { marginTop: '5px' } } >\n            <\n            Form.Group >\n            <\n            Image inline size = 'tiny'\n            avatar src = { user.photoURL }\n            />\n\n\n            <\n            Form.Field style = {\n                { width: '100%' } } >\n\n\n            <\n            TextArea rows = { 1 }\n            value = { postText }\n            type = 'text'\n            placeholder = \"Bạn muốn chia sẻ điều gì ?\"\n            transparent onClick = { this.inputClicked }\n            onChange = { this.handlePostChange }\n            style = {\n                { height: '100%', fontSize: 16, float: 'left', border: 'none', background: 'none', resize: 'none' } }\n            onKeyUp = { this.inputKeyPressed }\n            />\n\n\n\n            <\n            /Form.Field>\n\n            <\n            /Form.Group>\n\n            <\n            Button.Group widths = { 4 }\n            size = 'small'\n            compact fluid >\n            <\n            Button onClick = { this.openFileModal } >\n            <\n            Image style = {\n                { width: '30px' } }\n            spaced = 'right'\n            centered src = { pictureIcon }\n            />\n\n            <\n            span style = {\n                { marginLeft: '10px' } } > Ảnh / Video < /span>\n\n            <\n            /Button>\n\n            <\n            Button >\n            <\n            Image style = {\n                { width: '30px' } }\n            spaced = 'right'\n            centered src = { tagFriends }\n            />\n\n            <\n            span style = {\n                { marginLeft: '10px' } } > Gắn thẻ bạn bè < /span>\n\n            <\n            /Button>\n\n            <\n            Button onClick = { this.handleTogglePicker } >\n            <\n            Image style = {\n                { width: '30px' } }\n            spaced = 'right'\n            centered src = { smileIcon }\n            />\n\n            <\n            span style = {\n                { marginLeft: '10px' } } > Cảm xúc < /span>{\n\n        }\n\n        <\n        /Button> {\n            emojiPicker ? (\n                ( <\n                    div onMouseLeave = { this.handleTogglePicker }\n                    className = \"emoji-mart-select\" >\n                    <\n                    Picker\n\n                    i18n = {\n                        { search: 'Tìm kiếm', categories: { search: 'Tìm kiếm theo mục', recent: 'Đã sử dụng gần đây' } } }\n                    onSelect = { this.handleEmojiSelect }\n                    set = 'facebook'\n                    emoji = 'point_up'\n                    style = {\n                        { position: \"absolute\", left: '55%', top: '65%' } }\n\n                    /> <\n                    /div>\n                )\n            ) : ''\n        }\n\n\n        <\n        /Button.Group>\n\n\n\n        <\n        Form.Button onClick = { this.savePost }\n        color = 'green'\n        fluid style = {\n            { marginTop: '50px' } } > Chia sẻ < /Form.Button>\n\n        <\n        /Form>  <\n        /Modal.Content> <\n        /Modal> <\n        /div>\n    );\n}\n}\n\nexport default CreatePostModal"]},"metadata":{},"sourceType":"module"}