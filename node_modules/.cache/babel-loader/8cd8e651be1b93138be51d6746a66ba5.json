{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/web-dev/React/SNStudent/src/components/NewsFeeds/NewsFeeds.js\";\nimport React from 'react';\nimport { Segment, Header, Icon, Feed, Image, Divider, Form, TextArea, Button, List, Responsive, Dropdown, Container, Loader, Dimmer, Label, Input } from 'semantic-ui-react';\nimport uuid from 'uuidv4';\nimport firebase from '../../firebase';\nimport FileModal from './FileModal';\nimport ImageModal from './ImageModal';\nimport * as moment from 'moment';\nimport hash from 'js-hash-code';\nimport editIcon from \"../../Images/edit.svg\";\nimport CreatePostModal from './CreatePostModal';\n\nclass NewsFeeds extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      like: false,\n      user: this.props.currentUser,\n      post: '',\n      fileModal: false,\n      imageModalStatus: false,\n      imageModalURL: '',\n      postModal: false,\n      imagePost: [],\n      postCreate: [],\n      postModal: false,\n      postFromDatabase: [],\n      databaseRef: firebase.database().ref('posts'),\n      imageLoading: false,\n      postLoading: false,\n      postDrowdownOptions: [{\n        key: 'savePost',\n        text: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          circular: true,\n          size: \"small\",\n          name: \"tag\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }), \"L\\u01B0u b\\xE0i vi\\u1EBFt\")\n      }, {\n        key: 'postReport',\n        text: React.createElement(\"span\", {\n          onClick: this.handleMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          circular: true,\n          size: \"small\",\n          name: \"warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), \"B\\xE1o c\\xE1o b\\xE0i vi\\u1EBFt\")\n      }]\n    };\n\n    this.addPostListener = () => {\n      const ref = firebase.database().ref('posts');\n      const postLoaded = [];\n      ref.on('child_added', snap => {\n        ref.child(snap.key).on('child_added', snap => postLoaded.push(snap.val()));\n        this.setState({\n          postFromDatabase: postLoaded.sort((a, b) => {\n            return b.timestamp - a.timestamp;\n          })\n        });\n      });\n    };\n\n    this.openImageModal = event => {\n      this.setState({\n        imageModalStatus: true,\n        imageModalURL: event.target.name\n      });\n    };\n\n    this.closeImageModal = () => {\n      this.setState({\n        imageModalStatus: false,\n        imageModalURL: ''\n      });\n    };\n\n    this.openPostModal = () => {\n      this.setState({\n        postModal: true\n      });\n    };\n\n    this.closePostModal = () => {\n      this.setState({\n        postModal: false\n      });\n    };\n\n    this.handleLikeClicked = (event, {\n      name\n    }) => {\n      event.preventDefault();\n      const post = this.state.postFromDatabase.filter((val, key, arr) => {\n        return val.postChild === name;\n      });\n      console.log(post[0].avatar);\n      let postLiked = post[0].liked;\n      const currentUserLiked = postLiked.some(val => {\n        return val.userUID === this.state.user.uid;\n      });\n      const imageNotExist = post[0].postImages === undefined;\n\n      if (currentUserLiked) {\n        postLiked = postLiked.filter((val, index, arr) => {\n          return val.userUID !== this.state.user.uid;\n        });\n      } else {\n        postLiked.push({\n          username: this.state.user.displayName,\n          userUID: this.state.user.uid\n        });\n      }\n\n      let postUpdate;\n\n      if (imageNotExist) {\n        post.forEach(val => {\n          postUpdate = {\n            postChild: val.postChild,\n            createByUid: val.createByUid,\n            createByName: val.createByName,\n            avatar: val.avatar,\n            timestamp: val.timestamp,\n            postText: val.postText,\n            liked: postLiked\n          };\n        });\n      } else {\n        post.forEach(val => {\n          postUpdate = {\n            postChild: val.postChild,\n            createByUid: val.createByUid,\n            createByName: val.createByName,\n            avatar: val.avatar,\n            timestamp: val.timestamp,\n            postImages: val.postImages,\n            postText: val.postText,\n            liked: postLiked\n          };\n        });\n      }\n\n      this.state.databaseRef.child(name).set(postUpdate).then(() => this.addPostListener()).catch(err => console.log(err));\n    };\n\n    this.displayImagePost = ({\n      imagePost\n    }) => // this.state.uploadStatus.includes('uploading')  ? \n    // <Segment size='large' loading={this.state.percentUploaded < 100} >\n    //   <List horizontal>\n    //       {imagePost.map((val,key) => (\n    //         <List.Item key={key+uuid} style={{marginRight: '15px'}}> \n    //             <Image  rounded size='small' key={val.downloadURL} src={val.downloadURL} label={{as: 'a' ,name: key, corner:'right', icon:'remove',size: 'mini',color:'red',onClick: this.removeImagePost}} /> \n    //         </List.Item> ) )}\n    //     <List.Item>\n    //       <Icon style={{cursor: 'pointer', boder: 'solid 2px '}} color='black' inverted name='add' size='big' onClick={this.openModal} />\n    //     </List.Item>\n    //   </List>\n    // </Segment> : ''\n    React.createElement(Dimmer.Dimmable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Dimmer, {\n      inverted: true,\n      active: this.state.percentUploaded > 0 && this.state.percentUploaded < 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Loading\")), React.createElement(List, {\n      horizontal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, imagePost.map((val, key) => React.createElement(List.Item, {\n      key: key + uuid,\n      style: {\n        marginRight: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Image, {\n      wrapped: true,\n      rounded: true,\n      size: \"small\",\n      key: val.downloadURL,\n      src: val.downloadURL,\n      label: {\n        as: 'a',\n        name: key,\n        corner: 'right',\n        icon: 'remove',\n        size: 'tiny',\n        color: 'red',\n        onClick: this.removeImagePost\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }))), imagePost.length > 0 ? React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      link: true,\n      color: \"black\",\n      inverted: true,\n      name: \"add\",\n      size: \"big\",\n      onClick: this.openFileModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    })) : ''));\n\n    this.deleteImageFromStorge = imagePath => {\n      if (imagePath) {\n        this.state.storeRef.child(imagePath).delete().then(() => console.log(\"deleted\")).catch(err => console.log(err));\n      }\n    };\n\n    this.removeImagePost = event => {\n      event.preventDefault();\n      let removeIndex = event.target.name;\n      this.deleteImageFromStorge(this.state.imagePost[removeIndex].imagePath);\n      const newImagePost = this.state.imagePost.filter((value, index, arr) => {\n        return index != removeIndex;\n      });\n      this.setState({\n        imagePost: newImagePost\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.addPostListener();\n  }\n\n  render() {\n    const _this$state = this.state,\n          user = _this$state.user,\n          post = _this$state.post,\n          postFromDatabase = _this$state.postFromDatabase;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(FileModal, {\n      fileModal: this.state.fileModal,\n      uploadFile: this.uploadFile,\n      closeModal: this.closeFileModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(CreatePostModal, {\n      modal: this.state.postModal,\n      closeModal: this.closePostModal,\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      block: true,\n      style: {\n        background: '#F9FCFA'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Header.Content, {\n      style: {\n        opacity: 0.6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \" \", React.createElement(Image, {\n      spaced: \"right\",\n      style: {\n        width: '30px'\n      },\n      src: editIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), \"T\\u1EA1o B\\xE0i Vi\\u1EBFt  \")), this.displayImagePost(this.state), React.createElement(Container, {\n      fluid: true,\n      style: {\n        width: '100%',\n        height: '80px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(Header, {\n      textAlign: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(Image, {\n      size: \"large\",\n      avatar: true,\n      src: user.photoURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      onClick: this.openPostModal,\n      style: {\n        opacity: 0.5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"B\\u1EA1n mu\\u1ED1n chia s\\u1EBB \\u0111i\\u1EC1u g\\xEC ?  \"))), React.createElement(Button, {\n      fluid: true,\n      color: \"teal\",\n      onClick: this.openPostModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"T\\u1EA1o b\\xE0i vi\\u1EBFt c\\u1EE7a b\\u1EA1n\"), this.state.post.length > 0 || this.state.imagePost.length > 0 ? React.createElement(Button, {\n      onClick: this.savePost,\n      fluid: true,\n      style: {\n        marginTop: '20px',\n        background: '#ecf7e7'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"Post\") : ''), postFromDatabase.length > 0 ? postFromDatabase.map((val, key) => React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(Feed, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(Feed.Event, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(Feed.Label, {\n      image: val.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }), React.createElement(Feed.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(Feed.Summary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      inline: true,\n      closeOnChange: true,\n      options: this.state.postDrowdownOptions,\n      pointing: \"top right\",\n      icon: null,\n      style: {\n        float: 'right',\n        zIndex: 1000\n      },\n      trigger: React.createElement(\"i\", {\n        style: {\n          opacity: 0.5\n        },\n        className: \"fas fa-ellipsis-h\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }), React.createElement(Feed.User, {\n      content: val.createByName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }), React.createElement(Feed.Date, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, moment(val.timestamp).locale('vi').fromNow())), React.createElement(Feed.Summary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      style: {\n        opacity: 0.5,\n        fontSize: 14\n      },\n      className: \"fas fa-globe-asia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }))))), React.createElement(Feed, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(Feed.Event, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(Feed.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(Container, {\n      fluid: true,\n      text: true,\n      textAlign: \"justified\",\n      content: val.postText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }), val.postImages ? val.postImages.map((value, key) => React.createElement(List, {\n      key: val.createByUid + val.timestamp + uuid() + hash(value.downloadURL),\n      horizontal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(List.Item, {\n      key: 'list' + val.createByUid + val.timestamp + uuid() + hash(value.downloadURL),\n      as: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(Image, {\n      centered: true,\n      fluid: true,\n      key: 'image' + val.createByUid + val.timestamp + uuid() + hash(value.downloadURL),\n      src: value.downloadURL,\n      name: value.downloadURL,\n      onClick: this.openImageModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }), React.createElement(ImageModal, {\n      imageModal: this.state.imageModalStatus,\n      closeModal: this.closeImageModal,\n      imageURL: this.state.imageModalURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    })))) : '')), React.createElement(Container, {\n      style: {\n        marginTop: '15px'\n      },\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: val.liked.length - 1 !== 0 ? 'thumbs up' : '',\n      color: \"blue\",\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        opacity: 0.6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, val.liked.length - 1 === 0 ? '' : val.liked.length - 1 + ' Thích'), React.createElement(\"span\", {\n      style: {\n        float: 'right',\n        opacity: 0.6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, \"20 comnents\")), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }), React.createElement(Button.Group, {\n      fluid: true,\n      size: \"small\",\n      compact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(Button, {\n      name: val.postChild,\n      onClick: this.handleLikeClicked,\n      basic: true,\n      compact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"thumbs up\",\n      color: val.liked.some(val => {\n        return val.userUID === user.uid;\n      }) ? 'blue' : 'grey',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }), \" Like\"), React.createElement(Button, {\n      basic: true,\n      compact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"comment outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }), \" Comment\"), React.createElement(Button, {\n      basic: true,\n      compact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"share\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }), \" Share\")), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    })))) : '');\n  }\n\n}\n\nexport default NewsFeeds;","map":{"version":3,"sources":["/home/hari/Desktop/web-dev/React/SNStudent/src/components/NewsFeeds/NewsFeeds.js"],"names":["React","Segment","Header","Icon","Feed","Image","Divider","Form","TextArea","Button","List","Responsive","Dropdown","Container","Loader","Dimmer","Label","Input","uuid","firebase","FileModal","ImageModal","moment","hash","CreatePostModal","NewsFeeds","Component","state","like","user","props","currentUser","post","fileModal","imageModalStatus","imageModalURL","postModal","imagePost","postCreate","postFromDatabase","databaseRef","database","ref","imageLoading","postLoading","postDrowdownOptions","key","text","handleMessage","addPostListener","postLoaded","on","snap","child","push","val","setState","sort","a","b","timestamp","openImageModal","event","target","name","closeImageModal","openPostModal","closePostModal","handleLikeClicked","preventDefault","filter","arr","postChild","console","log","avatar","postLiked","liked","currentUserLiked","some","userUID","uid","imageNotExist","postImages","undefined","index","username","displayName","postUpdate","forEach","createByUid","createByName","postText","set","then","catch","err","displayImagePost","percentUploaded","map","marginRight","downloadURL","as","corner","icon","size","color","onClick","removeImagePost","length","openFileModal","deleteImageFromStorge","imagePath","storeRef","delete","removeIndex","newImagePost","value","componentDidMount","render","uploadFile","closeFileModal","background","opacity","width","editIcon","height","photoURL","savePost","marginTop","float","zIndex","locale","fromNow","fontSize"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Segment,Header,Icon, Feed,Image, Divider, Form, TextArea, Button, List, Responsive, Dropdown, Container, Loader, Dimmer, Label, Input} from 'semantic-ui-react'\nimport uuid from 'uuidv4'\nimport firebase from '../../firebase'\nimport FileModal from './FileModal'\nimport ImageModal from './ImageModal'\nimport * as moment from 'moment'\nimport hash from 'js-hash-code'\nimport editIcon from '../../Images/edit.svg'\nimport CreatePostModal from './CreatePostModal'\n\n\n\n\n\nclass NewsFeeds extends React.Component{\n\n    state ={\n      like: false,\n      user: this.props.currentUser,\n      post: '',\n      fileModal: false,\n      imageModalStatus: false,\n      imageModalURL: '',\n      postModal: false,\n      imagePost: [],\n      postCreate: [],\n      postModal: false,\n      postFromDatabase: [],\n\n      databaseRef: firebase.database().ref('posts'),\n      imageLoading: false,\n      postLoading: false,\n      postDrowdownOptions: [\n        {\n          key: 'savePost',\n          text: <span><Icon circular size='small' name='tag' />Lưu bài viết</span>,\n\n          \n        },\n        {\n          key: 'postReport',\n          text :  <span onClick={this.handleMessage} ><Icon circular size='small' name='warning' />Báo cáo bài viết</span>,\n          \n        \n      },\n\n      ]\n   \n    }\n\n    componentDidMount(){\n      this.addPostListener()\n    }\n\n    addPostListener = () =>{\n\n      const ref = firebase.database().ref('posts')\n      const postLoaded = []\n      ref.on('child_added',snap =>{\n        ref.child(snap.key).on('child_added',snap => postLoaded.push(snap.val()));\n        this.setState({postFromDatabase: postLoaded.sort((a,b) =>{return b.timestamp-a.timestamp})})\n        \n      })\n    \n  \n    }\n\n\n\n  \n\n    openImageModal = event =>{\n     \n      this.setState({imageModalStatus: true, imageModalURL: event.target.name})\n    }\n\n    closeImageModal = () =>{\n      this.setState({imageModalStatus: false, imageModalURL:''})\n\n    }\n\n    openPostModal = () =>{\n      this.setState({postModal: true})\n    }\n\n    closePostModal = () =>{\n      this.setState({postModal: false})\n    }\n\n   \n\n\n      \n\n      handleLikeClicked = (event, {name}) =>{\n     \n        event.preventDefault();\n        const post = this.state.postFromDatabase.filter((val,key,arr)=>{\n          return val.postChild === name\n        })\n\n        console.log(post[0].avatar);\n\n        \n        \n        let postLiked= post[0].liked;\n\n        const  currentUserLiked = postLiked.some(val=>{\n          \n          return val.userUID === this.state.user.uid;\n         \n        })\n\n\n        const imageNotExist = post[0].postImages === undefined;\n      \n        if(currentUserLiked){\n            postLiked = postLiked.filter((val,index,arr)=>{\n            return val.userUID !== this.state.user.uid\n          })\n        }else{\n          postLiked.push({username: this.state.user.displayName, userUID: this.state.user.uid})\n        }\n  \n        let postUpdate ;\n        if(imageNotExist){\n          post.forEach(val=>{\n            postUpdate ={\n              postChild: val.postChild,\n              createByUid: val.createByUid,\n              createByName: val.createByName,\n              avatar: val.avatar,\n              timestamp: val.timestamp,\n              postText: val.postText,\n              liked: postLiked\n            }\n            \n          \n          })\n         \n        }else{\n          post.forEach(val=>{\n            postUpdate ={\n              postChild: val.postChild,\n              createByUid: val.createByUid,\n              createByName: val.createByName,\n              avatar: val.avatar,\n              timestamp: val.timestamp,\n              postImages: val.postImages ,\n              postText: val.postText,\n              liked: postLiked\n            }\n            \n          \n          })\n        }\n       \n  \n         this.state.databaseRef.child(name).set(postUpdate).then(()=>this.addPostListener()).catch(err=>console.log(err))\n  \n      \n      }\n\n      \n\n      \n      displayImagePost = ({imagePost}) =>(\n        // this.state.uploadStatus.includes('uploading')  ? \n        // <Segment size='large' loading={this.state.percentUploaded < 100} >\n        //   <List horizontal>\n          \n        //       {imagePost.map((val,key) => (\n        //         <List.Item key={key+uuid} style={{marginRight: '15px'}}> \n\n        //             <Image  rounded size='small' key={val.downloadURL} src={val.downloadURL} label={{as: 'a' ,name: key, corner:'right', icon:'remove',size: 'mini',color:'red',onClick: this.removeImagePost}} /> \n                \n        //         </List.Item> ) )}\n                \n        //     <List.Item>\n        //       <Icon style={{cursor: 'pointer', boder: 'solid 2px '}} color='black' inverted name='add' size='big' onClick={this.openModal} />\n        //     </List.Item>\n        //   </List>\n          \n        // </Segment> : ''\n        <Dimmer.Dimmable  > \n          <Dimmer inverted active={this.state.percentUploaded > 0 && this.state.percentUploaded <100}>\n            <Loader>Loading</Loader>\n           \n          </Dimmer>\n\n          <List horizontal>\n          \n              {imagePost.map((val,key) => (\n                  <List.Item key={key+uuid} style={{marginRight: '15px'}}> \n  \n                      <Image wrapped rounded size='small' key={val.downloadURL} src={val.downloadURL} label={{as: 'a' ,name: key, corner:'right', icon:'remove',size: 'tiny',color:'red',onClick: this.removeImagePost}} /> \n                  \n                  </List.Item> ) )}\n                  \n              {imagePost.length > 0 ? \n                <List.Item>\n              <Icon link color='black' inverted name='add' size='big' onClick={this.openFileModal} />\n            </List.Item>\n            : ''  \n          }\n            </List>\n            \n    \n     \n          \n        </Dimmer.Dimmable>\n      )\n      \n      deleteImageFromStorge = imagePath =>{\n          if(imagePath){\n            this.state.storeRef.child(imagePath).delete().then(() => console.log(\"deleted\")).catch(err=> console.log(err))\n          }\n          \n      }\n\n      removeImagePost = event =>{\n        event.preventDefault();\n        let removeIndex = event.target.name;\n        \n        this.deleteImageFromStorge(this.state.imagePost[removeIndex].imagePath)\n\n        const newImagePost = this.state.imagePost.filter((value,index,arr) =>{\n          return index != removeIndex\n        })\n        \n\n        this.setState({imagePost : newImagePost})\n        \n        \n      }\n      \n    \n\n    render(){\n        const {user,post,postFromDatabase} = this.state;\n       \n\n        return(\n      <React.Fragment>\n        \n        <FileModal \n          fileModal={this.state.fileModal}\n          uploadFile = {this.uploadFile}  \n          closeModal = {this.closeFileModal}\n        />\n        <CreatePostModal \n          modal={this.state.postModal} \n          closeModal={this.closePostModal}\n          user={user}\n          />\n        \n    <Segment stacked>\n    \n        <Header as='h3' block style={{background :'#F9FCFA'}}> \n        \n          <Header.Content style={{opacity: 0.6}}> <Image spaced='right' style={{width:'30px'} } src={editIcon} />Tạo Bài Viết  </Header.Content>\n         \n        </Header>\n        \n          {this.displayImagePost(this.state)}\n        \n\n    \n\n        <Container   fluid style={{width: '100%', height: '80px'}}>\n        \n           \n            <Header  textAlign='left'>\n              <Image size='large' avatar src={user.photoURL}/> \n              <span onClick={this.openPostModal} style={{opacity: 0.5}}>Bạn muốn chia sẻ điều gì ?  </span>\n            </Header>\n         \n        \n        </Container>\n        <Button fluid color='teal' onClick={this.openPostModal}>\n          Tạo bài viết của bạn\n        </Button>\n\n      {/* <Button.Group  compact fluid widths={4}  >\n        \n      <Button inverted style={{background: '#6FBE42'}}  onClick={this.openFileModal}  >\n              <Icon name='photo' /> Ảnh/Video\n            </Button>\n            <Button inverted style={{background: '#6FBE42'}}>\n              <Icon name='user plus' /> Tag Friends\n            </Button>\n         \n         \n            <Button inverted style={{background: '#6FBE42'}}>\n              <Icon name='smile outline' /> Cảm Xúc\n            </Button>\n          \n            <Button inverted style={{background: '#6FBE42'}}>\n              <Icon name='list' /> Khác\n             </Button>\n      </Button.Group> */}\n     \n  \n      {this.state.post.length > 0 || this.state.imagePost.length >0 ? <Button onClick={this.savePost} fluid style={{marginTop: '20px',background:'#ecf7e7'}}>\n        Post\n      </Button> : ''}\n        \n    </Segment>\n        \n      \n    \n      {postFromDatabase.length > 0 ? (\n        postFromDatabase.map((val, key) =>(\n          \n          <Segment  >\n      \n          <Feed size='large'>\n              <Feed.Event>\n              <Feed.Label image ={val.avatar} />\n              <Feed.Content>\n                <Feed.Summary> \n                <Dropdown\n                  inline\n                  closeOnChange\n                  options={this.state.postDrowdownOptions}\n                  pointing='top right'\n                  icon={null}\n                  style={{float: 'right', zIndex: 1000}}\n                  trigger={<i style={{opacity: 0.5}} className=\"fas fa-ellipsis-h\"></i>}\n                />\n                <Feed.User content={val.createByName} />\n                <Feed.Date>\n\n                {moment(val.timestamp).locale('vi').fromNow()}\n                {/* {moment(val.timestamp).fromNow()} */}\n               \n                  \n                </Feed.Date>\n                \n                </Feed.Summary>\n                <Feed.Summary>\n                  <i style={{opacity: 0.5, fontSize: 14}} className=\"fas fa-globe-asia\"></i> \n               \n                </Feed.Summary>\n\n                \n                 \n           \n              </Feed.Content>\n              \n              </Feed.Event>\n            \n          </Feed>\n          \n          <Feed size='large'  >\n          \n          <Feed.Event>\n            <Feed.Content >\n              <Container fluid text textAlign='justified' content={val.postText}>\n\n              </Container>\n              {val.postImages ? (\n                val.postImages.map((value,key) =>(        \n                    <List key={val.createByUid+val.timestamp+uuid()+hash(value.downloadURL)} horizontal  >\n                      <List.Item key={'list'+val.createByUid+val.timestamp+uuid()+hash(value.downloadURL)}   as='a'  >\n                       \n                       \n                          <Image centered fluid key={'image'+val.createByUid+val.timestamp+uuid()+hash(value.downloadURL)} src={value.downloadURL} name={value.downloadURL} onClick={this.openImageModal} />\n                          {/* <img style={{padding: '10px 10px'}} src={value.downloadURL} name={value.downloadURL} onClick={this.openImageModal} />\n                     */}\n                        <ImageModal \n                         \n                          imageModal={this.state.imageModalStatus} \n                          closeModal={this.closeImageModal}\n                          imageURL={this.state.imageModalURL} />\n                      </List.Item>\n                    </List>\n                    \n                \n                ))\n              ) : ''}\n               \n             \n            </Feed.Content>\n            \n          </Feed.Event>\n       \n\n          <Container style={{marginTop:'15px'}} fluid> \n          <Icon \n            name={val.liked.length -1 !==0 ? 'thumbs up': ''} \n            color='blue'  size='small' /> \n            <span style={{opacity: 0.6}}>{val.liked.length -1 === 0 ? '': val.liked.length -1 +' Thích' }</span>\n            <span style={{float: 'right',opacity: 0.6}} >20 comnents</span>\n          </Container>\n         \n          <Divider />\n            <Button.Group fluid size='small' compact >\n            <Button  name={val.postChild} onClick={this.handleLikeClicked} basic compact >\n            \n                <Icon name='thumbs up'  color={val.liked.some(val=>{return val.userUID === user.uid}) ? 'blue' :'grey'} /> Like\n              </Button>\n              <Button basic compact >\n                <Icon name='comment outline' /> Comment\n              </Button>\n              <Button  basic compact>\n                <Icon name='share' /> Share \n              </Button>\n            </Button.Group>\n            <Divider />\n                     \n         \n        \n      </Feed>\n      </Segment>\n        ))\n      ) :  ''}\n\n     \n\n \n\n      \n  </React.Fragment>\n \n           \n            \n        )\n    }\n\n}\n\nexport default NewsFeeds"]},"metadata":{},"sourceType":"module"}