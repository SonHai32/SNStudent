{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\n\nclass AMDRequireArrayDependency extends Dependency {\n  constructor(depsArray, range) {\n    super();\n    this.depsArray = depsArray;\n    this.range = range;\n  }\n\n  get type() {\n    return \"amd require array\";\n  }\n\n}\n\nAMDRequireArrayDependency.Template = class AMDRequireArrayDependencyTemplate {\n  apply(dep, source, runtime) {\n    const content = this.getContent(dep, runtime);\n    source.replace(dep.range[0], dep.range[1] - 1, content);\n  }\n\n  getContent(dep, runtime) {\n    const requires = dep.depsArray.map(dependency => {\n      return this.contentForDependency(dependency, runtime);\n    });\n    return \"[\".concat(requires.join(\", \"), \"]\");\n  }\n\n  contentForDependency(dep, runtime) {\n    if (typeof dep === \"string\") {\n      return dep;\n    }\n\n    if (dep.localModule) {\n      return dep.localModule.variableName();\n    } else {\n      return runtime.moduleExports({\n        module: dep.module,\n        request: dep.request\n      });\n    }\n  }\n\n};\nmodule.exports = AMDRequireArrayDependency;","map":null,"metadata":{},"sourceType":"script"}