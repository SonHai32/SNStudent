{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/web-dev/React/SNStudent/src/components/NewsFeeds/FileModal.js\";\nimport React from 'react';\nimport { Modal, Input, Button, Icon, Image } from 'semantic-ui-react';\n\nclass FileModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      authorized: ['image/jpeg', 'image/png', 'image/webp'],\n      currentFiles: {\n        file: null,\n        url: ''\n      }\n    };\n\n    this.addFile = event => {\n      // let loadFile =[]\n      const file = event.target.files[0];\n      const reader = new FileReader();\n\n      if (file) {\n        if (this.isAuthorized(file.type)) {\n          reader.onload = event => {\n            // loadFile.push({file: file, url: event.target.result})\n            this.setState({\n              currentFiles: {\n                file: file,\n                url: event.target.result\n              }\n            });\n          };\n\n          reader.readAsDataURL(file);\n        }\n      }\n    };\n\n    this.sendFileToProp = () => {\n      // const {files} = this.state;\n      // const {uploadFile, closeModal} = this.props\n      // if(files.length > 0){\n      //     files.forEach(val =>{\n      //         if(this.isAuthorized(val.file.type)){\n      //             const metadata = {contentType: val.file.type}\n      //             uploadFile(val.file, metadata);\n      //         }\n      //     })\n      //     closeModal();\n      //     this.clearFile();\n      // }\n      const fileStateToProp = this.props.fileStateToProp;\n      fileStateToProp(this.state.currentFiles); // if(file){\n      //     if(this.isAuthorized(file.type)){\n      //         //send File\n      //         const metadata = {contentType: file.type}\n      //         uploadFile(file, metadata);\n      //         closeModal();\n      //         this.clearFile();\n      //     }\n      // }\n    };\n\n    this.isAuthorized = fileType => this.state.authorized.includes(fileType);\n  }\n\n  render() {\n    const _this$props = this.props,\n          fileModal = _this$props.fileModal,\n          closeModal = _this$props.closeModal;\n    return React.createElement(Modal, {\n      basic: true,\n      open: fileModal,\n      onClose: closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Select an image file\"), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Input, {\n      fluid: true,\n      label: \"File types: jpg, png\",\n      name: \"file\",\n      type: \"file\",\n      onChange: this.addFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Button.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Button, {\n      negative: true,\n      inverted: true,\n      onClick: closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"remove\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), \" Cancel\"), React.createElement(Button.Or, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.sendFileToProp,\n      className: \"submit\",\n      inverted: true,\n      positive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: \"submit\",\n      name: \"checkmark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), \"Upload\"))));\n  }\n\n}\n\nexport default FileModal;","map":{"version":3,"sources":["/home/hari/Desktop/web-dev/React/SNStudent/src/components/NewsFeeds/FileModal.js"],"names":["React","Modal","Input","Button","Icon","Image","FileModal","Component","state","authorized","currentFiles","file","url","addFile","event","target","files","reader","FileReader","isAuthorized","type","onload","setState","result","readAsDataURL","sendFileToProp","fileStateToProp","props","fileType","includes","render","fileModal","closeModal"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal, Input, Button, Icon,Image } from 'semantic-ui-react';\n\nclass FileModal extends React.Component{\n    state = {\n        authorized: ['image/jpeg', 'image/png', 'image/webp'],\n        currentFiles: {\n            file: null,\n            url: ''\n        },\n\n    }\n\n   \n    addFile = event =>{\n    \n       // let loadFile =[]\n        const file = event.target.files[0];\n        const reader = new FileReader();\n      \n        if(file){\n            if(this.isAuthorized(file.type)){\n                reader.onload = event =>{\n                   // loadFile.push({file: file, url: event.target.result})\n                    this.setState({currentFiles: {file: file, url: event.target.result} })\n                }\n                reader.readAsDataURL(file)\n            }\n        }\n    \n    \n        \n       \n    \n    }\n\n  \n\n    sendFileToProp = () =>{\n        // const {files} = this.state;\n        // const {uploadFile, closeModal} = this.props\n\n        // if(files.length > 0){\n        //     files.forEach(val =>{\n        //         if(this.isAuthorized(val.file.type)){\n        //             const metadata = {contentType: val.file.type}\n        //             uploadFile(val.file, metadata);\n        //         }\n        //     })\n        //     closeModal();\n        //     this.clearFile();\n        // }\n    const {fileStateToProp} = this.props\n         fileStateToProp(this.state.currentFiles)\n\n        // if(file){\n        //     if(this.isAuthorized(file.type)){\n        //         //send File\n        //         const metadata = {contentType: file.type}\n        //         uploadFile(file, metadata);\n        //         closeModal();\n        //         this.clearFile();\n        //     }\n        // }\n\n    }\n\n   \n    isAuthorized = fileType => this.state.authorized.includes(fileType);\n\n    render(){\n\n        const {fileModal, closeModal} = this.props;\n     \n\n       return(\n            <Modal basic open={fileModal} onClose={closeModal}>\n                <Modal.Header>\n                    Select an image file\n                </Modal.Header>\n                <Modal.Content>\n                    <Input \n\n                        fluid\n                        label='File types: jpg, png'\n                        name='file'\n                        type='file'\n                        onChange={this.addFile}\n                    />\n                </Modal.Content>\n                <Modal.Actions>\n       \n                    <Button.Group>\n                        <Button negative inverted onClick={closeModal}>\n                            <Icon name='remove' /> Cancel\n                        </Button>\n                        <Button.Or />\n                        <Button onClick={this.sendFileToProp} className='submit' inverted positive>\n                            <Icon className='submit' name='checkmark' />Upload\n                        </Button>\n                    </Button.Group>\n                  \n                    \n                </Modal.Actions>\n            </Modal>\n       );\n    }\n}\n\nexport default FileModal"]},"metadata":{},"sourceType":"module"}