{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\"use strict\";\n\nmodule.exports = class ModuleAppendPlugin {\n  constructor(source, appending, target) {\n    this.source = source;\n    this.appending = appending;\n    this.target = target;\n  }\n\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"ModuleAppendPlugin\", (request, resolveContext, callback) => {\n      const i = request.request.indexOf(\"/\"),\n            j = request.request.indexOf(\"\\\\\");\n      const p = i < 0 ? j : j < 0 ? i : i < j ? i : j;\n      let moduleName, remainingRequest;\n\n      if (p < 0) {\n        moduleName = request.request;\n        remainingRequest = \"\";\n      } else {\n        moduleName = request.request.substr(0, p);\n        remainingRequest = request.request.substr(p);\n      }\n\n      if (moduleName === \".\" || moduleName === \"..\") return callback();\n      const moduleFinalName = moduleName + this.appending;\n      const obj = Object.assign({}, request, {\n        request: moduleFinalName + remainingRequest\n      });\n      resolver.doResolve(target, obj, \"module variation \" + moduleFinalName, resolveContext, callback);\n    });\n  }\n\n};","map":null,"metadata":{},"sourceType":"script"}