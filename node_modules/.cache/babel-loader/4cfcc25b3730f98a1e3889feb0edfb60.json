{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/web-dev/React/cstudy/src/components/auth/register.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, Icon, Header, Segment, Form, Button, Message, Input, Select } from 'semantic-ui-react';\nimport firebase from '../../firebase';\nimport facebookProvider from './facebookAuth';\nimport md5 from 'md5';\n\nclass Register extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      errors: [],\n      isLoading: false,\n      userRef: firebase.database().ref('users') // componentDidMount(){\n      //     firebase.auth().signOut().then(function() {\n      //         // Sign-out successful.\n      //       }).catch(function(error) {\n      //         // An error happened.\n      //       });\n      // }\n\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      this.isFormValid();\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.isFormValid()) {\n        this.setState({\n          isLoading: true\n        });\n        firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then(createUser => {\n          createUser.user.updateProfile({\n            displayName: this.state.email.split(/[@*]/)[0],\n            photoURL: 'https://www.gravatar.com/avatar/' + md5(this.state.email) + '?d=identicon'\n          });\n          this.saveUser(createUser.user);\n          this.setState({\n            isLoading: false\n          });\n        }).catch(err => {\n          console.log(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            isLoading: false\n          });\n        });\n      }\n    };\n\n    this.isPasswordValid = ({\n      password\n    }) => {\n      if (password.length < 5) {\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    this.isFormEmpty = ({\n      email,\n      password\n    }) => {\n      return !email.length || !password.length;\n    };\n\n    this.isFormValid = () => {\n      let error;\n      let errors = [];\n\n      if (this.isFormEmpty(this.state)) {\n        return false;\n      } else if (!this.isPasswordValid(this.state)) {\n        error = {\n          message: 'Password should be at least 6 characters'\n        };\n        this.setState({\n          errors: errors.concat(error)\n        });\n        return false;\n      } else {\n        this.setState({\n          errors: []\n        });\n        return true;\n      }\n    };\n\n    this.displayError = (errors, inputName) => {\n      let haveErrorMessage;\n      errors.some(error => error.message.toLowerCase().includes(inputName) ? haveErrorMessage = {\n        content: error.message,\n        pointing: 'below'\n      } : haveErrorMessage = false);\n      return haveErrorMessage;\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          errors = _this$state.errors,\n          isLoading = _this$state.isLoading,\n          user = _this$state.user;\n    return React.createElement(Grid, {\n      verticalAlign: \"middle\",\n      textAlign: \"center\",\n      className: \"register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 480\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Header, {\n      color: \"teal\",\n      textAlign: \"center\",\n      as: \"h1\",\n      style: {\n        padding: '2em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Register for CStudy\"), React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      name: \"email\",\n      placeholder: \"Emal Address\",\n      fluid: true,\n      required: true,\n      error: this.displayError(errors, 'email'),\n      size: \"large\",\n      type: \"text\",\n      icon: \"mail\",\n      iconPosition: \"left\",\n      onChange: this.handleChange,\n      value: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      name: \"password\",\n      placeholder: \"Password\",\n      fluid: true,\n      required: true,\n      error: this.displayError(errors, 'password'),\n      size: \"large\",\n      type: \"password\",\n      icon: \"key\",\n      iconPosition: \"left\",\n      onChange: this.handleChange,\n      value: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Button, {\n      size: \"large\",\n      fluid: true,\n      color: \"teal\",\n      loading: isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"You have an account ? \", React.createElement(Link, {\n      to: \"/Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Login\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"or Sign up with\"), React.createElement(Button.Group, {\n      widths: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"facebook\",\n      size: \"large\",\n      onClick: this.facebooklogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"facebook\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), \"Facebook\"), React.createElement(Button, {\n      color: \"black\",\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"github\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), \"Github\"))))));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/hari/Desktop/web-dev/React/cstudy/src/components/auth/register.js"],"names":["React","Link","Grid","Icon","Header","Segment","Form","Button","Message","Input","Select","firebase","facebookProvider","md5","Register","Component","state","email","password","errors","isLoading","userRef","database","ref","handleChange","event","setState","target","name","value","isFormValid","handleSubmit","preventDefault","auth","createUserWithEmailAndPassword","then","createUser","user","updateProfile","displayName","split","photoURL","saveUser","catch","err","console","log","concat","isPasswordValid","length","isFormEmpty","error","message","displayError","inputName","haveErrorMessage","some","toLowerCase","includes","content","pointing","render","maxWidth","padding","facebooklogin"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {Grid,Icon,Header,Segment, Form, Button,Message, Input, Select} from 'semantic-ui-react'\nimport firebase from '../../firebase'\nimport facebookProvider from './facebookAuth'\nimport md5 from 'md5'\n\n\nclass Register extends React.Component{\n\n    state={\n        email: '',\n        password:'',\n        errors: [],\n        isLoading: false, \n        userRef: firebase.database().ref('users'),\n        \n        \n\n\n    }\n\n    // componentDidMount(){\n    //     firebase.auth().signOut().then(function() {\n    //         // Sign-out successful.\n    //       }).catch(function(error) {\n    //         // An error happened.\n    //       });\n    // }\n\n    handleChange = event =>{\n        this.setState({[event.target.name]: event.target.value})\n        this.isFormValid();    \n    }\n\n    handleSubmit = event =>{\n        event.preventDefault();\n       if(this.isFormValid()){\n        this.setState({isLoading: true})\n        firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\n        .then((createUser) => {\n            \n            createUser.user.updateProfile({\n                displayName: this.state.email.split(/[@*]/)[0],\n                photoURL: 'https://www.gravatar.com/avatar/'+md5(this.state.email)+'?d=identicon'\n            })\n            this.saveUser(createUser.user)\n\n            this.setState({isLoading: false})\n        })\n        \n        .catch(err =>{\n            console.log(err)\n            this.setState({errors: this.state.errors.concat(err) ,isLoading: false})\n        })\n       }\n    }\n\n    isPasswordValid = ({password}) =>{\n        if(password.length < 5 ){\n            return false;\n        }else{\n            return true;\n        }\n    }\n\n\n    isFormEmpty = ({email,password}) =>{\n        return !email.length || !password.length\n    }\n\n\n    isFormValid = () =>{\n        let error;\n        let errors= [];\n\n        if(this.isFormEmpty(this.state)){\n            return false;\n        }else if(!this.isPasswordValid(this.state)){\n            error = {message: 'Password should be at least 6 characters'};\n            this.setState({errors: errors.concat(error)});\n            return false;\n        }else{\n            this.setState({errors: []});\n            return true;\n        }\n    }\n    \n    displayError = (errors, inputName) => {\n        let haveErrorMessage;\n        errors.some(error => error.message.toLowerCase().includes(inputName) ? haveErrorMessage={content: error.message, pointing: 'below'} : haveErrorMessage=false)\n        return haveErrorMessage;\n    }\n    render(){\n        const {email, password, errors, isLoading,user} = this.state;\n        return(\n        \n            <Grid verticalAlign=\"middle\" textAlign=\"center\" className='register'>\n                <Grid.Column style={{maxWidth: 480}}>\n                    <Header color='teal' textAlign='center' as='h1' style={{padding: '2em'}}>\n                        Register for CStudy\n                    </Header>\n                    <Form size='large' onSubmit={this.handleSubmit} >\n                        <Segment stacked>\n                            <Form.Input\n                                name='email'\n                                placeholder='Emal Address'\n                                fluid\n                                required\n                                error={this.displayError(errors, 'email')}\n                                size='large'\n                                type='text'\n                                icon='mail'\n                                iconPosition='left'\n                                onChange={this.handleChange}\n                                value={email}\n                            />\n                            <Form.Input \n                                name='password'\n                                placeholder='Password'\n                                fluid\n                                required\n                                error={this.displayError(errors, 'password')}\n                                size='large'\n                                type='password'\n                                icon='key'\n                                iconPosition='left'\n                                onChange={this.handleChange}\n                                value={password}\n                            />\n                            <Button \n                            size='large' \n                            fluid \n                            color='teal'\n                            loading={isLoading}\n                            >\n                                Submit\n                            </Button>\n                            <Message>\n                                You have an account ? <Link to='/Login'>Login</Link>\n                            </Message>\n                            <p>or Sign up with</p>\n                            <Button.Group widths='2'>\n                                <Button color='facebook' size='large' onClick={this.facebooklogin}>\n                                <Icon name='facebook' />\n                                Facebook\n                                </Button>\n\n                                <Button color='black' size='large'>\n                                    <Icon name='github' />\n                                    Github\n                                </Button>\n                            </Button.Group>\n                        </Segment> \n                    </Form>\n                    \n                </Grid.Column>\n                \n            </Grid>\n        )\n    }\n\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}