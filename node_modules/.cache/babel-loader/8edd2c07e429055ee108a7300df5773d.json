{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/web-dev/React/cstudy/src/components/NewsFeeds/CreatePostModal.js\";\nimport React from 'react';\nimport { Modal, Header, Icon, Form, Image, Button, Input } from 'semantic-ui-react';\nimport { Picker, emojiIndex } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\nimport pictureIcon from \"../../Images/picture.svg\";\nimport tagFriends from \"../../Images/tagfriends.svg\";\nimport locationIcon from \"../../Images/location.svg\";\nimport editIcon from \"../../Images/edit.svg\";\nimport smileIcon from \"../../Images/iconsmile.svg\";\n\nclass CreatePostModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      postText: '',\n      emojiPicker: false\n    };\n\n    this.handleTogglePicker = () => {\n      this.setState({\n        emojiPicker: !this.state.emojiPicker\n      });\n    };\n\n    this.handlePostChange = event => {\n      this.setState({\n        postText: event.target.value\n      });\n    };\n\n    this.handleEmojiSelect = emoji => {\n      const oldPost = this.state.postText;\n      const newPost = this.colonToUnicode((oldPost + emoji.colons).toString);\n      this.setState({\n        postText: newPost\n      });\n    };\n\n    this.colonToUnicode = message => {\n      return message.replace(/:[A-Za-z0-9_+-]+:/g, x => {\n        x = x.replace(/:/g, \"\");\n        let emoji = emojiIndex.emojis[x];\n\n        if (typeof emoji !== undefined) {\n          let unicode = emoji.native;\n\n          if (typeof unicode !== undefined) {\n            return unicode;\n          }\n        }\n\n        x = \":\" + x + \":\";\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          postText = _this$state.postText,\n          emojiPicker = _this$state.emojiPicker;\n    const _this$props = this.props,\n          user = _this$props.user,\n          modal = _this$props.modal,\n          closeModal = _this$props.closeModal;\n    return React.createElement(Modal, {\n      centered: true,\n      size: \"small\",\n      open: modal,\n      onClose: closeModal,\n      closeIcon: true,\n      style: {\n        top: '10%',\n        transform: 'translateY(-10%)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Header.Content, {\n      style: {\n        opacity: 0.6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \" \", React.createElement(Image, {\n      spaced: \"right\",\n      style: {\n        width: '30px'\n      },\n      src: editIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), \"T\\u1EA1o B\\xE0i Vi\\u1EBFt  \"))), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Form, {\n      style: {\n        marginTop: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Image, {\n      inline: true,\n      size: \"tiny\",\n      avatar: true,\n      src: user.photoURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Input, {\n      value: postText,\n      type: \"text\",\n      placeholder: \"B\\u1EA1n \\u0111ang ngh\\u0129 g\\xEC ?\",\n      transparent: true,\n      onChange: this.handlePostChange,\n      style: {\n        height: '100%',\n        fontSize: 16,\n        float: 'left',\n        width: '90%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))), React.createElement(Button.Group, {\n      size: \"small\",\n      widths: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Image, {\n      style: {\n        width: '30px'\n      },\n      spaced: \"right\",\n      centered: true,\n      src: pictureIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"\\u1EA2nh/Video\")), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Image, {\n      style: {\n        width: '30px'\n      },\n      spaced: \"right\",\n      centered: true,\n      src: tagFriends,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"G\\u1EAFn th\\u1EBB b\\u1EA1n b\\xE8\")), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Image, {\n      style: {\n        width: '30px'\n      },\n      spaced: \"right\",\n      centered: true,\n      src: locationIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Check in\")), React.createElement(Button, {\n      onClick: this.handleTogglePicker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Image, {\n      style: {\n        width: '30px'\n      },\n      spaced: \"right\",\n      centered: true,\n      src: smileIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"C\\u1EA3m x\\xFAc \"), emojiPicker ? React.createElement(Picker, {\n      showPreview: \"true\",\n      onSelect: this.handleEmojiSelect,\n      set: \"facebook\",\n      emoji: \"point_up\",\n      style: {\n        position: \"absolute\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }) : '')), React.createElement(Form.Button, {\n      color: \"teal\",\n      fluid: true,\n      style: {\n        marginTop: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Chia s\\u1EBB\"))));\n  }\n\n}\n\nexport default CreatePostModal;","map":{"version":3,"sources":["/home/hari/Desktop/web-dev/React/cstudy/src/components/NewsFeeds/CreatePostModal.js"],"names":["React","Modal","Header","Icon","Form","Image","Button","Input","Picker","emojiIndex","CreatePostModal","Component","state","postText","emojiPicker","handleTogglePicker","setState","handlePostChange","event","target","value","handleEmojiSelect","emoji","oldPost","newPost","colonToUnicode","colons","toString","message","replace","x","emojis","undefined","unicode","native","render","props","user","modal","closeModal","top","transform","opacity","width","editIcon","marginTop","photoURL","height","fontSize","float","pictureIcon","marginLeft","tagFriends","locationIcon","smileIcon","position"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal, Header, Icon,Form,Image, Button, Input } from 'semantic-ui-react';\nimport {Picker,emojiIndex} from 'emoji-mart'\nimport 'emoji-mart/css/emoji-mart.css'\n\n\nimport pictureIcon from '../../Images/picture.svg'\nimport tagFriends from '../../Images/tagfriends.svg'\nimport locationIcon from '../../Images/location.svg'\nimport editIcon from '../../Images/edit.svg'\nimport smileIcon from '../../Images/iconsmile.svg'\n\nclass CreatePostModal extends React.Component{\n\n    state = {\n        postText: '',\n        emojiPicker: false\n    }\n    \n    handleTogglePicker = () =>{\n        this.setState({emojiPicker: !this.state.emojiPicker})\n    }\n\n    handlePostChange = event =>{\n        this.setState({postText: event.target.value})\n    }\n\n    handleEmojiSelect = emoji =>{\n        const oldPost = this.state.postText;\n        const newPost = this.colonToUnicode((oldPost+emoji.colons).toString)\n        this.setState({postText: newPost})\n        \n    }\n\n    colonToUnicode = message =>{\n        return message.replace(/:[A-Za-z0-9_+-]+:/g, x=>{\n            x = x.replace(/:/g, \"\");\n            let emoji = emojiIndex.emojis[x];\n\n            if(typeof emoji !== undefined){\n                let unicode = emoji.native\n                if(typeof unicode !== undefined){\n                    return unicode\n                }\n            }\n\n            x = \":\" + x + \":\"\n        })\n    }\n\n    render(){\n\n        const {postText,emojiPicker} = this.state;\n        const {user,modal,closeModal} = this.props;\n        \n        return(\n            <Modal centered size='small' open={modal} onClose={closeModal} closeIcon style={{top: '10%', transform: 'translateY(-10%)'}}>\n                <Modal.Header >\n                <Header as='h3'> \n        \n                    <Header.Content style={{opacity: 0.6}}> <Image spaced='right' style={{width:'30px'} } src={editIcon} />Tạo Bài Viết  </Header.Content>\n      \n                </Header>\n                </Modal.Header>\n                <Modal.Content>\n                    <Form style={{marginTop: '5px'}}>\n                        <Form.Group >\n                            <Image inline size='tiny' avatar src={user.photoURL}/>\n\n\n                            <Form.Field  style={{width: '100%'}} >\n                                \n                                <Input \n                                    value={postText} \n                                    type='text' \n                                    placeholder=\"Bạn đang nghĩ gì ?\" \n                                    transparent \n                                    onChange={this.handlePostChange} \n                                    style={{height: '100%',fontSize: 16,float: 'left',width:'90%'}} \n                                />\n                        \n\n                            </Form.Field>\n                            \n                        </Form.Group>\n                        \n                        <Button.Group  size='small' widths={4}>\n                            <Button >\n                            <Image style={{width:'30px'}} spaced='right' centered  src={pictureIcon} />\n                         \n                            <span style={{marginLeft:'10px'}}>Ảnh/Video</span>\n\n                            </Button>\n                            <Button      >\n                            <Image  style={{width:'30px'}} spaced='right' centered  src={tagFriends} />\n                         \n                            <span style={{marginLeft:'10px'}}>Gắn thẻ bạn bè</span>\n\n                            </Button>\n                            <Button      >\n                            <Image  style={{width:'30px'}} spaced='right' centered  src={locationIcon} />\n                         \n                            <span style={{marginLeft:'10px'}}>Check in</span>\n\n                            </Button>\n                            <Button  onClick={this.handleTogglePicker}>\n                            <Image style={{width:'30px'}} spaced='right' centered  src={smileIcon} />\n                         \n                            <span style={{marginLeft:'10px'}}>Cảm xúc </span>\n                            {emojiPicker ? (\n                                (\n                                    <Picker \n                                        showPreview='true'\n                                        onSelect={this.handleEmojiSelect}\n                                        set='facebook'\n                                        emoji='point_up'\n                                        style={{position: \"absolute\"}}\n                                    />\n                                )\n                            ) : ''}\n                            </Button>\n                           \n                        </Button.Group>\n                        \n\n\n                        <Form.Button  color='teal' fluid style={{marginTop: '50px'}}>Chia sẻ</Form.Button>\n\n                    </Form>\n                </Modal.Content>\n            </Modal>\n        );\n    }\n}\n\nexport default CreatePostModal"]},"metadata":{},"sourceType":"module"}