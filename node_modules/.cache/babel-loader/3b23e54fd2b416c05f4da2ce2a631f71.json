{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/web-dev/React/cstudy/src/components/SidePanel/SidePanelLeft.js\";\nimport React from 'react';\nimport { Segment, Sidebar, Divider, Menu, Header, Button, Grid, List, Icon, Popup, Modal, Form } from 'semantic-ui-react';\nimport firebase from '../../firebase';\n\nclass SidePanelLeft extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeItems: 'NewsFeed',\n      channels: null,\n      modalOpen: false,\n      channelName: '',\n      channelDetail: '',\n      channelRef: firebase.database().ref('Channels'),\n      user: this.props.currentUser,\n      errors: []\n    };\n\n    this.addListener = () => {\n      let loadedChannels = [];\n      this.state.channelRef.on('child_added', snap => {\n        loadedChannels.push(snap.val());\n        this.setState({\n          channels: loadedChannels\n        });\n      });\n    };\n\n    this.displayChannels = channels => channels.length > 0 && channels.map(channel => React.createElement(List.Item, {\n      style: {\n        textAlign: 'left',\n        marginLeft: '10px'\n      },\n      onClick: () => console.log(\"object\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(List.Header, {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"#\", channel.name, \" \"))));\n\n    this.handleItemClicked = (e, {\n      name\n    }) => {\n      this.setState({\n        activeItems: name\n      });\n    };\n\n    this.createChannelClicked = e => {\n      e.preventDefault();\n      this.setState({\n        modalOpen: true\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        modalOpen: false\n      });\n    };\n\n    this.handleChannelCreate = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.channelCreateSubmit = () => {\n      if (this.isFormValid(this.state)) {\n        this.createChannel();\n      } else {\n        console.log(this.state.errors);\n      }\n    };\n\n    this.createChannel = () => {\n      const _this$state = this.state,\n            channelRef = _this$state.channelRef,\n            channelName = _this$state.channelName,\n            channelDetail = _this$state.channelDetail,\n            user = _this$state.user;\n      const key = channelRef.push().key;\n      const newChannel = {\n        channelName: channelName,\n        channelDetail: channelDetail,\n        createdBy: {\n          uid: user.uid,\n          name: user.displayName,\n          avatar: user.photoURL\n        }\n      };\n      channelRef.child(key).update(newChannel).then(() => {\n        this.setState({\n          channelName: '',\n          channelDetail: ''\n        });\n        this.closeModal();\n        console.log(\"channel created\");\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.isFormValid = ({\n      channelName,\n      channelDetail\n    }) => {\n      if (channelName === null || channelDetail === null) {\n        this.setState({\n          errors: this.state.errors.concat(\"Channel name or Channel description can't be null\")\n        });\n        return false;\n      } else if (channelName.length > 100) {\n        this.state({\n          errors: this.state.errors.concat(\"Channel name must be under 100 character\")\n        });\n        return false;\n      } else if (channelDetail.length > 300) {\n        this.setState({\n          errors: this.state.errors.concat(\"Channel Detail must be under 300 character\")\n        });\n        return false;\n      } else {\n        this.setState({\n          errors: []\n        });\n        return true;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.addListener();\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          activeItems = _this$state2.activeItems,\n          modalOpen = _this$state2.modalOpen,\n          channels = _this$state2.channels;\n    return React.createElement(Grid, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      fixed: \"left\",\n      vertical: true,\n      style: {\n        background: '#e7e7e7',\n        top: '80px'\n      },\n      color: \"black\",\n      pointing: true,\n      borderless: true,\n      size: \"huge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, console.log(this.state.currentUser), React.createElement(Menu.Item, {\n      name: \"NewsFeed\",\n      active: activeItems === 'NewsFeed',\n      onClick: this.handleItemClicked,\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Menu.Item, {\n      name: \"Channels\",\n      active: activeItems === 'Channels',\n      onClick: this.handleItemClicked,\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Channels\", activeItems === 'Channels' ? React.createElement(List, {\n      animated: true,\n      selection: true,\n      celled: true,\n      size: \"medium\",\n      style: {\n        marginTop: '20px',\n        overflowY: 'scroll',\n        overflowX: 'hidden',\n        overflowY: 'hidden'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      style: {\n        opacity: 0.5\n      },\n      inverted: true,\n      mouseEnterDelay: 700,\n      position: \"top center\",\n      content: \"Create Your Channel\",\n      trigger: React.createElement(Button, {\n        basic: true,\n        fluid: true,\n        animated: \"fade\",\n        onClick: this.createChannelClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Button.Content, {\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(Button.Content, {\n        visible: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Create Channel\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), this.displayChannels(channels)) : '')), React.createElement(Modal, {\n      dimmer: \"inverted\",\n      open: modalOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Create Channel\"), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Form, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      name: \"channelName\",\n      required: true,\n      placeholder: \"Channel Name\",\n      onChange: this.handleChannelCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      name: \"channelDetail\",\n      required: true,\n      placeholder: \"Detail\",\n      onChange: this.handleChannelCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }))), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Button, {\n      inverted: true,\n      color: \"green\",\n      onClick: this.channelCreateSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Create\"), React.createElement(Button, {\n      inverted: true,\n      color: \"red\",\n      onClick: this.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default SidePanelLeft;","map":{"version":3,"sources":["/home/hari/Desktop/web-dev/React/cstudy/src/components/SidePanel/SidePanelLeft.js"],"names":["React","Segment","Sidebar","Divider","Menu","Header","Button","Grid","List","Icon","Popup","Modal","Form","firebase","SidePanelLeft","Component","state","activeItems","channels","modalOpen","channelName","channelDetail","channelRef","database","ref","user","props","currentUser","errors","addListener","loadedChannels","on","snap","push","val","setState","displayChannels","length","map","channel","textAlign","marginLeft","console","log","color","name","handleItemClicked","e","createChannelClicked","preventDefault","closeModal","handleChannelCreate","value","channelCreateSubmit","isFormValid","createChannel","key","newChannel","createdBy","uid","displayName","avatar","photoURL","child","update","then","catch","err","concat","componentDidMount","render","background","top","marginTop","overflowY","overflowX","opacity"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Segment, Sidebar, Divider,Menu, Header, Button, Grid, List, Icon, Popup, Modal, Form } from 'semantic-ui-react'\nimport firebase from '../../firebase'\n\nclass SidePanelLeft extends React.Component{\n\n    state = { activeItems: 'NewsFeed',\n              channels: null,\n              modalOpen : false,\n              channelName: '',\n              channelDetail: '',\n              channelRef: firebase.database().ref('Channels'),\n              user: this.props.currentUser,\n              errors : [],\n              \n                    \n  };\n\n  componentDidMount(){\n    this.addListener();\n  }\n  \n    addListener = () =>{\n      let loadedChannels = [];\n      this.state.channelRef.on('child_added', snap=>{\n        loadedChannels.push(snap.val());\n        this.setState({channels: loadedChannels})\n      })\n    }\n\n    displayChannels = channels => channels.length > 0 && channels.map(channel =>(\n      <List.Item style={{textAlign: 'left' ,marginLeft: '10px'}} onClick={() => console.log(\"object\")} >\n                    <List.Content>\n                      <List.Header style={{color: 'red'}} >#{channel.name} </List.Header>\n                    </List.Content>\n                  </List.Item>\n    ))\n\n    handleItemClicked = (e ,{name}) =>{\n      this.setState({activeItems : name})\n    }\n\n    createChannelClicked = e =>{\n      e.preventDefault();\n      this.setState({modalOpen: true})\n    }\n\n    closeModal = () =>{\n  \n      this.setState({modalOpen: false})\n    }\n\n    handleChannelCreate = (e, {name,value}) =>{\n      this.setState({[name] : value})\n    }\n\n    channelCreateSubmit = () =>{\n      if(this.isFormValid(this.state)){\n        this.createChannel()\n      }else{\n        console.log(this.state.errors)\n      }\n    }\n\n\n    createChannel = () =>{\n      const {channelRef, channelName, channelDetail, user} = this.state;\n      const key = channelRef.push().key\n      const newChannel ={\n        channelName: channelName,\n        channelDetail: channelDetail,\n        createdBy : {\n          uid: user.uid,\n          name: user.displayName,\n          avatar: user.photoURL\n        }\n      }\n\n      channelRef\n        .child(key)\n        .update(newChannel)\n        .then(() =>{\n          this.setState({channelName: '', channelDetail: ''})\n          this.closeModal();\n          console.log(\"channel created\")\n        }).catch(err =>{\n          console.log(err)\n        })\n    }\n\n    isFormValid = ({channelName, channelDetail}) =>{\n\n      \n      if(channelName === null || channelDetail === null){\n\n        this.setState({errors: this.state.errors.concat(\"Channel name or Channel description can't be null\" )});\n        return false\n      }else if(channelName.length > 100){\n\n        this.state({errors: this.state.errors.concat(\"Channel name must be under 100 character\")});\n        return false;\n      }else if(channelDetail.length > 300){\n        \n        this.setState({errors: this.state.errors.concat(\"Channel Detail must be under 300 character\")})\n        return false\n      }else{\n        this.setState({errors: []})\n        return true;\n      }\n    }\n\n    render(){\n        const {activeItems,modalOpen, channels} = this.state;\n        return(\n         \n        <Grid centered>\n          <Grid.Column textAlign='center'> \n            <Menu   \n            fixed='left'\n            vertical\n            style={{ background: '#e7e7e7', top: '80px'}}\n            color='black'\n            pointing\n            borderless\n            size='huge'\n          \n            >\n              {console.log(this.state.currentUser)}\n            \n            <Menu.Item \n              name='NewsFeed'\n            \n              active={activeItems === 'NewsFeed'}\n              onClick={this.handleItemClicked}\n              color='green'\n            />\n            <Menu.Item \n              \n              name='Channels'\n              active={activeItems === 'Channels'}\n              onClick={this.handleItemClicked}\n              color='green'\n            >\n              Channels\n              {activeItems === 'Channels' ? \n                \n                <List  animated selection celled size='medium' style={{marginTop: '20px' , overflowY: 'scroll' ,overflowX: 'hidden', overflowY:'hidden' }}  >\n                  \n                    \n                    <Popup\n                      style={{opacity: 0.5}}\n                      inverted\n                      mouseEnterDelay={700}\n                      position='top center'\n                      content='Create Your Channel'\n                      trigger={\n                      <Button basic fluid animated='fade' onClick={this.createChannelClicked}>\n                      \n                        <Button.Content hidden>\n                        \n                          <Icon name='add' />\n                        </Button.Content>\n                        <Button.Content visible>\n                           Create Channel\n                        </Button.Content>\n                      </Button>}\n                    />\n                  \n                        {this.displayChannels(channels)}\n                </List>\n                 : ''\n                 \n              }\n              </Menu.Item>\n            \n          </Menu>\n          <Modal dimmer='inverted' open={modalOpen}> \n              <Modal.Header>Create Channel</Modal.Header>\n              <Modal.Content>\n                <Form widths='equal' >\n                  <Form.Input \n                    name='channelName'\n                    required \n                    placeholder='Channel Name' \n                    onChange={this.handleChannelCreate}\n                  />\n                  <Form.Input\n                    name='channelDetail'\n                    required \n                    placeholder='Detail'\n                    onChange={this.handleChannelCreate} \n                  />\n              \n                </Form>\n                \n              </Modal.Content>\n              <Modal.Actions>\n                  <Button inverted color='green' onClick={this.channelCreateSubmit} >Create</Button>\n                  <Button inverted color='red' onClick={this.closeModal}>Cancel</Button>\n              </Modal.Actions>\n\n          </Modal>\n          </Grid.Column>\n        </Grid>\n       \n        )\n\n    }\n}\n\nexport default SidePanelLeft;"]},"metadata":{},"sourceType":"module"}