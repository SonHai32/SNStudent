{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/web-dev/React/SNStudent/src/components/NewsFeeds/CreatePostModal.js\";\nimport React from 'react';\nimport { Modal, Header, Form, Image, Button, TextArea, Segment, Grid, Icon } from 'semantic-ui-react';\nimport { Picker, emojiIndex } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\nimport uuid from 'uuidv4';\nimport firebase from '../../firebase';\nimport FileModal from './FileModal';\nimport ImageResizer from '../test'; // import ImageResize from '../ImageResize'\n\nimport pictureIcon from \"../../Images/picture.svg\";\nimport tagFriends from \"../../Images/tagfriends.svg\";\nimport editIcon from \"../../Images/edit.svg\";\nimport smileIcon from \"../../Images/smile.svg\";\n\nclass CreatePostModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      postText: '',\n      postImages: [],\n      emojiPicker: false,\n      selectionStart: 0,\n      fileModal: false,\n      uploadTask: null,\n      uploadPercent: 0,\n      storeRef: firebase.storage().ref(),\n      postsRef: firebase.database().ref('posts'),\n      files: [],\n      fileLoading: false,\n      imageResize: []\n    };\n\n    this.handleTogglePicker = () => {\n      this.setState({\n        emojiPicker: !this.state.emojiPicker\n      });\n    };\n\n    this.handlePostChange = event => {\n      this.setState({\n        postText: event.target.value\n      });\n    };\n\n    this.handleEmojiSelect = emoji => {\n      let oldPost = this.state.postText;\n      const newPost = this.addEmojiToInputWithSeletionStart(oldPost, this.state.selectionStart, this.colonToUnicode(emoji.colons));\n      this.setState({\n        postText: newPost\n      });\n    };\n\n    this.colonToUnicode = emojiMessage => {\n      let x = emojiMessage.replace(/:/g, \"\");\n      let emoji = emojiIndex.emojis[x];\n\n      if (emoji !== undefined) {\n        let unicode = emoji.native;\n\n        if (unicode !== undefined) {\n          return unicode;\n        } else {\n          return null;\n        }\n      }\n    };\n\n    this.addEmojiToInputWithSeletionStart = (post, selectionStart, emoji) => {\n      if (post !== '') {\n        if (emoji) {\n          if (selectionStart === 0) {\n            return post + emoji;\n          } else {\n            let oldSelectionStart = selectionStart;\n            this.setState({\n              selectionStart: selectionStart + emoji.length\n            });\n            return post.substring(0, oldSelectionStart) + emoji + post.substring(oldSelectionStart, post.length);\n          }\n        } else {\n          return post;\n        }\n      } else {\n        if (emoji) {\n          return post + emoji;\n        }\n      }\n    };\n\n    this.inputClicked = event => {\n      this.setState({\n        selectionStart: event.target.selectionStart\n      });\n    };\n\n    this.inputKeyPressed = event => {\n      this.setState({\n        selectionStart: event.target.selectionStart\n      });\n    };\n\n    this.openFileModal = () => {\n      this.setState({\n        fileModal: true\n      });\n    };\n\n    this.closeFileModal = () => {\n      this.setState({\n        fileModal: false\n      });\n    };\n\n    this.fileStateToProp = files => {\n      this.setState({\n        files: this.state.files.concat(files)\n      }, () => {\n        this.getImageCanvas(this.state.files);\n      });\n    };\n\n    this.uploadFile = () => {\n      if (this.state.files.length > 0) {\n        this.state.files.forEach(file => {\n          const filePath = this.props.user.uid + '/media/image/' + uuid() + '.jpg';\n          const uploadTask = this.state.storeRef.child(filePath).put(file.file, file.metadata);\n          this.setState({\n            uploadTask\n          }, () => {\n            this.state.uploadTask.on('state_changed', snap => {\n              const uploadPercent = Math.round(snap.bytesTransferred / snap.totalBytes * 100);\n              this.setState({\n                uploadPercent\n              }, () => {\n                console.log(this.state.uploadPercent);\n              });\n            });\n          });\n        });\n      } // const uploadTask = this.state.storeRef.child(filePath).put(file,metadata);\n      // this.setState({uploadTask},()=>{\n      //     this.state.uploadTask.on('state_changed', snap =>{\n      //         const uploadPercent = Math.round((snap.bytesTransferred / snap.totalBytes)*100) \n      //         this.setState({uploadPercent},()=>{\n      //             if(this.state.uploadPercent == 100){\n      //                 setTimeout(()=>{\n      //                     this.state.uploadTask.snapshot.ref.getDownloadURL().then(downloadURL =>{\n      //                         const image = [];\n      //                         image.push({downloadURL: downloadURL, imagePath: this.state.uploadTask.location_.path})\n      //                         this.setState({postImages: this.state.postImages.concat(image)},()=>{\n      //                             console.log(this.state.postImages)\n      //                         })\n      //                     })\n      //                 },800 - this.state.uploadPercent)\n      //             }\n      //         })\n      //     });\n      // })\n\n    };\n\n    this.savePost = event => {\n      event.preventDefault(); // const postChild = this.props.user.uid+uuid()+'/post';\n      // const postCreate ={\n      //   postChild: postChild,\n      //   createByUid: this.props.user.uid,\n      //   createByName: this.props.user.displayName,\n      //   avatar: this.props.user.photoURL ,\n      //   timestamp: Date.now(),\n      //   postImages: Array().concat(this.state.postImages),\n      //   postText: this.state.postText,\n      //   liked: [{username: 'null', userUID: 'null'}]\n      // }\n      // this.state.postsRef.child(postChild).set(postCreate).then(()=>{\n      //     this.setState({postText: '', postImages: []});\n      //     this.props.closeModal()\n      // })\n\n      this.uploadFile();\n    };\n\n    this.getImageCanvas = files => {\n      //   files.forEach(file =>{\n      //     ImageResizer(file.url,120,result => {\n      //         // let container = document.getElementById('img-container');\n      //         // let img = document.createElement('img');\n      //         // img.setAttribute('src',result)\n      //         // img.style.marginLeft = '10px'\n      //         // container.appendChild(img)\n      //         this.setState({imageResize: this.state.imageResize.concat(result)})\n      //       })\n      //   })\n      //\n      //TODO resize image for display image\n      this.setState({\n        imageResize: []\n      });\n\n      for (let i = 0; i < files.length; i++) {\n        if (i < 4) {\n          ImageResizer(files[i].url, 120, result => {\n            this.setState({\n              imageResize: this.state.imageResize.concat(result)\n            });\n          });\n        }\n      }\n    };\n  }\n\n  //   displayImages = files =>{\n  //     let limitImage=[];\n  //     for (let i = 0 ; i < files.length; i++){\n  //         if(i < 4){\n  //             limitImage.push(files[i])\n  //         }\n  //     }\n  // for(let i = 0 ; i < limitImage.length; i++){\n  //     this.getImageCanvas(files[i].url)\n  // }\n  //   }\n  render() {\n    const _this$state = this.state,\n          postText = _this$state.postText,\n          emojiPicker = _this$state.emojiPicker,\n          files = _this$state.files,\n          imageResize = _this$state.imageResize;\n    const _this$props = this.props,\n          user = _this$props.user,\n          modal = _this$props.modal,\n          closeModal = _this$props.closeModal;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(FileModal, {\n      files: this.state.files,\n      fileStateToProp: this.fileStateToProp,\n      fileModal: this.state.fileModal,\n      uploadFile: this.uploadFile,\n      closeModal: this.closeFileModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      centered: true,\n      open: modal,\n      onClose: closeModal,\n      closeIcon: true,\n      style: {\n        top: '10%',\n        transform: 'translateY(-10%)',\n        maxWidth: '1000px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(Header.Content, {\n      style: {\n        opacity: 0.6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \" \", React.createElement(Image, {\n      spaced: \"right\",\n      style: {\n        width: '30px'\n      },\n      src: editIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), \"T\\u1EA1o B\\xE0i Vi\\u1EBFt  \")), \" \"), \" \", React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(Form, {\n      style: {\n        marginTop: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(Image, {\n      inline: true,\n      size: \"tiny\",\n      avatar: true,\n      src: user.photoURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      rows: 1,\n      value: postText,\n      type: \"text\",\n      placeholder: \"B\\u1EA1n mu\\u1ED1n chia s\\u1EBB \\u0111i\\u1EC1u g\\xEC ?\",\n      transparent: \"true\",\n      onClick: this.inputClicked,\n      onChange: this.handlePostChange,\n      style: {\n        height: '100%',\n        fontSize: 16,\n        float: 'left',\n        border: 'none',\n        background: 'none',\n        resize: 'none'\n      },\n      onKeyUp: this.inputKeyPressed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }))), React.createElement(Button.Group, {\n      widths: 4,\n      size: \"small\",\n      compact: true,\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.openFileModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(Image, {\n      style: {\n        width: '30px'\n      },\n      spaced: \"right\",\n      centered: true,\n      src: pictureIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, \" \\u1EA2nh / Video \")), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(Image, {\n      style: {\n        width: '30px'\n      },\n      spaced: \"right\",\n      centered: true,\n      src: tagFriends,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \" G\\u1EAFn th\\u1EBB b\\u1EA1n b\\xE8 \")), React.createElement(Button, {\n      onClick: this.handleTogglePicker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(Image, {\n      style: {\n        width: '30px'\n      },\n      spaced: \"right\",\n      centered: true,\n      src: smileIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \" C\\u1EA3m x\\xFAc \")), \" \", emojiPicker ? React.createElement(\"div\", {\n      onMouseLeave: this.handleTogglePicker,\n      className: \"emoji-mart-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(Picker, {\n      i18n: {\n        search: 'Tìm kiếm',\n        categories: {\n          search: 'Tìm kiếm theo mục',\n          recent: 'Đã sử dụng gần đây'\n        }\n      },\n      onSelect: this.handleEmojiSelect,\n      set: \"facebook\",\n      emoji: \"point_up\",\n      style: {\n        position: \"absolute\",\n        left: '55%',\n        top: '65%',\n        zIndex: '1000'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }), \" \") : ''), React.createElement(Form.Button, {\n      onClick: this.savePost,\n      color: \"green\",\n      fluid: true,\n      style: {\n        marginTop: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, \" \\u0110\\u0103ng b\\xE0i \")), files.length > 0 ? React.createElement(Segment, {\n      id: \"img-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, \" \", imageResize.length > 0 ? imageResize.map((imageUrl, key) => React.createElement(\"div\", {\n      className: \"image-uploaded-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430\n      },\n      __self: this\n    }, React.createElement(Image, {\n      className: \"image-uploaded-display\",\n      key: key,\n      src: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }), \" \", React.createElement(Icon, {\n      name: \"remove\",\n      className: \"icon-remove-image\",\n      onClick: () => console.log(\"object\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }), \" \")) : '', files.length > 0 ? React.createElement(\"div\", {\n      className: \"add-image-box\",\n      title: \"Th\\xEAm \\u1EA3nh\",\n      onClick: this.openFileModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      size: \"large\",\n      name: \"plus\",\n      color: \"black\",\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%,-50%)',\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }), \" \") : ''), \" \"), \" \") : '', \" \"), \" \"), \" \");\n  }\n\n}\n\nexport default CreatePostModal;","map":{"version":3,"sources":["/home/hari/Desktop/web-dev/React/SNStudent/src/components/NewsFeeds/CreatePostModal.js"],"names":["React","Modal","Header","Form","Image","Button","TextArea","Segment","Grid","Icon","Picker","emojiIndex","uuid","firebase","FileModal","ImageResizer","CreatePostModal","Component","state","postText","postImages","emojiPicker","selectionStart","fileModal","uploadTask","uploadPercent","storeRef","storage","ref","postsRef","database","files","fileLoading","imageResize","handleTogglePicker","setState","handlePostChange","event","target","value","handleEmojiSelect","emoji","oldPost","newPost","addEmojiToInputWithSeletionStart","colonToUnicode","colons","emojiMessage","x","replace","emojis","undefined","unicode","native","post","oldSelectionStart","length","substring","inputClicked","inputKeyPressed","openFileModal","closeFileModal","fileStateToProp","concat","getImageCanvas","uploadFile","forEach","file","filePath","props","user","uid","child","put","metadata","on","snap","Math","round","bytesTransferred","totalBytes","console","log","savePost","preventDefault","i","url","result","render","modal","closeModal","top","transform","maxWidth","opacity","width","editIcon","marginTop","photoURL","height","fontSize","float","border","background","resize","pictureIcon","marginLeft","tagFriends","smileIcon","search","categories","recent","position","left","zIndex","map","imageUrl","key","cursor"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal, Header, Form, Image, Button, TextArea, Segment, Grid, Icon } from 'semantic-ui-react';\nimport { Picker, emojiIndex } from 'emoji-mart'\nimport 'emoji-mart/css/emoji-mart.css'\nimport uuid from 'uuidv4'\n\nimport firebase from '../../firebase'\nimport FileModal from './FileModal'\nimport ImageResizer from '../test'\n// import ImageResize from '../ImageResize'\nimport pictureIcon from '../../Images/picture.svg'\nimport tagFriends from '../../Images/tagfriends.svg'\n\nimport editIcon from '../../Images/edit.svg'\nimport smileIcon from '../../Images/smile.svg'\n\nclass CreatePostModal extends React.Component {\n\n    state = {\n        postText: '',\n        postImages: [],\n        emojiPicker: false,\n        selectionStart: 0,\n        fileModal: false,\n        uploadTask: null,\n        uploadPercent: 0,\n        storeRef: firebase.storage().ref(),\n        postsRef: firebase.database().ref('posts'),\n        files: [],\n        fileLoading: false,\n        imageResize: []\n\n\n    }\n\n\n\n    handleTogglePicker = () => {\n        this.setState({ emojiPicker: !this.state.emojiPicker })\n    }\n\n    handlePostChange = event => {\n        this.setState({ postText: event.target.value })\n    }\n\n    handleEmojiSelect = emoji => {\n\n        let oldPost = this.state.postText;\n        const newPost = this.addEmojiToInputWithSeletionStart(oldPost, this.state.selectionStart, this.colonToUnicode(emoji.colons));\n        this.setState({ postText: newPost })\n\n    }\n\n\n\n    colonToUnicode = emojiMessage => {\n        let x = emojiMessage.replace(/:/g, \"\")\n        let emoji = emojiIndex.emojis[x];\n        if (emoji !== undefined) {\n            let unicode = emoji.native\n            if (unicode !== undefined) {\n                return unicode\n            } else {\n                return null\n            }\n        }\n\n\n    }\n\n    addEmojiToInputWithSeletionStart = (post, selectionStart, emoji) => {\n\n        if (post !== '') {\n            if (emoji) {\n                if (selectionStart === 0) {\n                    return post + emoji\n                } else {\n                    let oldSelectionStart = selectionStart\n                    this.setState({ selectionStart: selectionStart + emoji.length })\n                    return post.substring(0, oldSelectionStart) + emoji + post.substring(oldSelectionStart, post.length)\n                }\n\n\n            } else {\n                return post\n            }\n        } else {\n            if (emoji) {\n                return post + emoji\n            }\n        }\n    }\n\n    inputClicked = event => {\n\n        this.setState({ selectionStart: event.target.selectionStart });\n\n    }\n\n    inputKeyPressed = event => {\n        this.setState({ selectionStart: event.target.selectionStart });\n\n\n    }\n\n    openFileModal = () => {\n        this.setState({ fileModal: true })\n    }\n\n    closeFileModal = () => {\n        this.setState({ fileModal: false })\n    }\n\n    fileStateToProp = files => {\n\n        this.setState({ files: this.state.files.concat(files) }, () => {\n            this.getImageCanvas(this.state.files)\n        })\n\n\n    }\n\n    uploadFile = () => {\n\n        if (this.state.files.length > 0) {\n            this.state.files.forEach(file => {\n                const filePath = this.props.user.uid + '/media/image/' + uuid() + '.jpg';\n                const uploadTask = this.state.storeRef.child(filePath).put(file.file, file.metadata)\n                this.setState({ uploadTask }, () => {\n                    this.state.uploadTask.on('state_changed', snap => {\n                        const uploadPercent = Math.round((snap.bytesTransferred / snap.totalBytes) * 100)\n                        this.setState({ uploadPercent }, () => {\n                            console.log(this.state.uploadPercent)\n                        })\n                    })\n                })\n            })\n        }\n        // const uploadTask = this.state.storeRef.child(filePath).put(file,metadata);\n        // this.setState({uploadTask},()=>{\n        //     this.state.uploadTask.on('state_changed', snap =>{\n        //         const uploadPercent = Math.round((snap.bytesTransferred / snap.totalBytes)*100) \n        //         this.setState({uploadPercent},()=>{\n        //             if(this.state.uploadPercent == 100){\n        //                 setTimeout(()=>{\n        //                     this.state.uploadTask.snapshot.ref.getDownloadURL().then(downloadURL =>{\n        //                         const image = [];\n        //                         image.push({downloadURL: downloadURL, imagePath: this.state.uploadTask.location_.path})\n        //                         this.setState({postImages: this.state.postImages.concat(image)},()=>{\n        //                             console.log(this.state.postImages)\n        //                         })\n        //                     })\n        //                 },800 - this.state.uploadPercent)\n        //             }\n        //         })\n        //     });\n\n        // })\n\n\n    }\n\n\n\n    savePost = event => {\n        event.preventDefault();\n        // const postChild = this.props.user.uid+uuid()+'/post';\n        // const postCreate ={\n        //   postChild: postChild,\n        //   createByUid: this.props.user.uid,\n        //   createByName: this.props.user.displayName,\n        //   avatar: this.props.user.photoURL ,\n        //   timestamp: Date.now(),\n        //   postImages: Array().concat(this.state.postImages),\n        //   postText: this.state.postText,\n        //   liked: [{username: 'null', userUID: 'null'}]\n        // }\n\n        // this.state.postsRef.child(postChild).set(postCreate).then(()=>{\n        //     this.setState({postText: '', postImages: []});\n        //     this.props.closeModal()\n        // })\n        this.uploadFile()\n\n    }\n\n    //   test =() =>{\n    //       console.log('aaa')\n    //   }\n\n\n    //   getLimitImage = key =>{\n\n    //       return key < 4 ? true : false;\n\n    //   }\n\n\n    getImageCanvas = files => {\n\n        //   files.forEach(file =>{\n        //     ImageResizer(file.url,120,result => {\n        //         // let container = document.getElementById('img-container');\n        //         // let img = document.createElement('img');\n        //         // img.setAttribute('src',result)\n        //         // img.style.marginLeft = '10px'\n        //         // container.appendChild(img)\n        //         this.setState({imageResize: this.state.imageResize.concat(result)})\n\n        //       })\n        //   })\n        //\n\n        //TODO resize image for display image\n        this.setState({ imageResize: [] })\n        for (let i = 0; i < files.length; i++) {\n            if (i < 4) {\n                ImageResizer(files[i].url, 120, result => {\n                    this.setState({ imageResize: this.state.imageResize.concat(result) })\n                })\n            }\n        }\n\n    }\n\n    //   displayImages = files =>{\n\n    //     let limitImage=[];\n    //     for (let i = 0 ; i < files.length; i++){\n    //         if(i < 4){\n    //             limitImage.push(files[i])\n    //         }\n    //     }\n\n    // for(let i = 0 ; i < limitImage.length; i++){\n    //     this.getImageCanvas(files[i].url)\n    // }\n\n    //   }\n\n    render() {\n\n        const { postText, emojiPicker, files, imageResize } = this.state;\n        const { user, modal, closeModal } = this.props;\n\n        return ( <\n            div className = \"wrapper\" >\n            <\n            FileModal files = { this.state.files }\n            fileStateToProp = { this.fileStateToProp }\n            fileModal = { this.state.fileModal }\n            uploadFile = { this.uploadFile }\n            closeModal = { this.closeFileModal }\n            />\n\n            <\n            Modal centered open = { modal }\n            onClose = { closeModal }\n            closeIcon style = {\n                { top: '10%', transform: 'translateY(-10%)', maxWidth: '1000px' }\n            } >\n            <\n            Modal.Header >\n            <\n            Header as = 'h3' >\n\n            <\n            Header.Content style = {\n                { opacity: 0.6 }\n            } > < Image spaced = 'right'\n            style = {\n                { width: '30px' }\n            }\n            src = { editIcon }\n            />Tạo Bài Viết  </Header.Content >\n\n            <\n            /Header> < /\n            Modal.Header > <\n            Modal.Content >\n            <\n            Form style = {\n                { marginTop: '5px' }\n            } >\n            <\n            Form.Group >\n            <\n            Image inline size = 'tiny'\n            avatar src = { user.photoURL }\n            />\n\n\n            <\n            Form.Field style = {\n                { width: '100%' }\n            } >\n\n\n            <\n            TextArea rows = { 1 }\n            value = { postText }\n            type = 'text'\n            placeholder = \"Bạn muốn chia sẻ điều gì ?\"\n            transparent = 'true'\n            onClick = { this.inputClicked }\n            onChange = { this.handlePostChange }\n            style = {\n                { height: '100%', fontSize: 16, float: 'left', border: 'none', background: 'none', resize: 'none' }\n            }\n            onKeyUp = { this.inputKeyPressed }\n            />\n\n\n\n            <\n            /Form.Field>\n\n            <\n            /Form.Group>\n\n            <\n            Button.Group widths = { 4 }\n            size = 'small'\n            compact fluid >\n            <\n            Button onClick = { this.openFileModal } >\n            <\n            Image style = {\n                { width: '30px' }\n            }\n            spaced = 'right'\n            centered src = { pictureIcon }\n            />\n\n            <\n            span style = {\n                { marginLeft: '10px' }\n            } > Ảnh / Video < /span>\n\n            <\n            /Button>\n\n            <\n            Button >\n            <\n            Image style = {\n                { width: '30px' }\n            }\n            spaced = 'right'\n            centered src = { tagFriends }\n            />\n\n            <\n            span style = {\n                { marginLeft: '10px' }\n            } > Gắn thẻ bạn bè < /span>\n\n            <\n            /Button>\n\n            <\n            Button onClick = { this.handleTogglePicker } >\n            <\n            Image style = {\n                { width: '30px' }\n            }\n            spaced = 'right'\n            centered src = { smileIcon }\n            />\n\n            <\n            span style = {\n                { marginLeft: '10px' }\n            } > Cảm xúc < /span>{\n\n        }\n\n        <\n        /Button> {\n        emojiPicker ? (\n            ( <\n                div onMouseLeave = { this.handleTogglePicker }\n                className = \"emoji-mart-select\" >\n                <\n                Picker\n\n                i18n = {\n                    { search: 'Tìm kiếm', categories: { search: 'Tìm kiếm theo mục', recent: 'Đã sử dụng gần đây' } }\n                }\n                onSelect = { this.handleEmojiSelect }\n                set = 'facebook'\n                emoji = 'point_up'\n                style = {\n                    { position: \"absolute\", left: '55%', top: '65%', zIndex: '1000' }\n                }\n\n                /> < /\n                div >\n            )\n        ) : ''\n    }\n\n\n    <\n    /Button.Group>\n\n\n\n    <\n    Form.Button onClick = { this.savePost }\n    color = 'green'\n    fluid style = {\n        { marginTop: '50px' }\n    } > Đăng bài < /Form.Button>\n\n    <\n    /Form> \n\n    {\n        files.length > 0 ? ( <\n            Segment id = 'img-container' >\n\n            <\n            Grid >\n            <\n            Grid.Row > {\n                imageResize.length > 0 ?\n                imageResize.map((imageUrl, key) => (\n\n                    <\n                    div className = \"image-uploaded-container\" >\n                    <\n                    Image className = 'image-uploaded-display'\n                    key = { key }\n                    src = { imageUrl }\n                    /> <\n                    Icon name = 'remove'\n                    className = \"icon-remove-image\"\n                    onClick = {\n                        () => console.log(\"object\")\n                    }\n                    /> < /\n                    div >\n\n\n\n\n\n\n                )) : ''\n            }\n\n            {\n                files.length > 0 ? ( <\n                    div className = 'add-image-box'\n                    title = 'Thêm ảnh'\n                    onClick = { this.openFileModal } >\n                    <\n                    Icon size = 'large'\n                    name = 'plus'\n                    color = 'black'\n                    style = {\n                        { position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%,-50%)', cursor: 'pointer' }\n                    }\n                    /> < /\n                    div >\n                ) : ''\n            }\n\n\n\n\n            <\n            /Grid.Row> < /\n            Grid > <\n            /Segment>\n        ) : ''\n    } <\n    /Modal.Content> < /\n    Modal > <\n        /div>\n);\n}\n}\n\nexport default CreatePostModal"]},"metadata":{},"sourceType":"module"}