{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/web-dev/React/SNStudent/src/components/NewsFeeds/FileModal.js\";\nimport React from 'react';\nimport { Modal, Input, Button, Icon } from 'semantic-ui-react';\n\nclass FileModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      file: null,\n      authorized: ['image/jpeg', 'image/png', 'image/webp'],\n      files: []\n    };\n\n    this.addFile = event => {\n      let loadFile = [];\n      const file = event.target.files[0];\n      const reader = new FileReader();\n\n      reader.onload = event => {\n        console.log(event.target.result);\n      };\n\n      reader.readAsDataURL(file);\n      loadFile.push({\n        file: file,\n        url: reader.result\n      });\n      this.setState({\n        files: this.state.files.concat(loadFile)\n      }); // if(file){\n      //     this.setState({file})\n      // }\n    };\n\n    this.sendFile = () => {\n      const file = this.state.file;\n      const _this$props = this.props,\n            uploadFile = _this$props.uploadFile,\n            closeModal = _this$props.closeModal;\n\n      if (file) {\n        if (this.isAuthorized(file.type)) {\n          //send File\n          const metadata = {\n            contentType: file.type\n          };\n          uploadFile(file, metadata);\n          closeModal();\n          this.clearFile();\n        }\n      }\n    };\n\n    this.clearFile = () => {\n      this.setState({\n        file: null\n      });\n    };\n\n    this.isAuthorized = fileType => this.state.authorized.includes(fileType);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          fileModal = _this$props2.fileModal,\n          closeModal = _this$props2.closeModal;\n    return React.createElement(Modal, {\n      basic: true,\n      open: fileModal,\n      onClose: closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Select an image file\"), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Input, {\n      fluid: true,\n      label: \"File types: jpg, png\",\n      name: \"file\",\n      type: \"file\",\n      onChange: this.addFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Button.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Button, {\n      negative: true,\n      inverted: true,\n      onClick: closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"remove\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), \" Cancel\"), React.createElement(Button.Or, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.sendFile,\n      inverted: true,\n      positive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"checkmark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), \"Upload\"))));\n  }\n\n}\n\nexport default FileModal;","map":{"version":3,"sources":["/home/hari/Desktop/web-dev/React/SNStudent/src/components/NewsFeeds/FileModal.js"],"names":["React","Modal","Input","Button","Icon","FileModal","Component","state","file","authorized","files","addFile","event","loadFile","target","reader","FileReader","onload","console","log","result","readAsDataURL","push","url","setState","concat","sendFile","props","uploadFile","closeModal","isAuthorized","type","metadata","contentType","clearFile","fileType","includes","render","fileModal"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal, Input, Button, Icon } from 'semantic-ui-react';\n\nclass FileModal extends React.Component{\n    state = {\n        file: null,\n        authorized: ['image/jpeg', 'image/png', 'image/webp'],\n        files: [],\n    }\n\n    addFile = event =>{\n        let loadFile =[]\n        const file = event.target.files[0];\n        const reader = new FileReader();\n        reader.onload = event =>{\n            console.log(event.target.result)\n        }\n        reader.readAsDataURL(file)\n    \n        loadFile.push({file: file, url: reader.result})\n        this.setState({files: this.state.files.concat(loadFile)})\n        \n        // if(file){\n        //     this.setState({file})\n        // }\n    }\n\n    sendFile = () =>{\n        const {file} = this.state;\n        const {uploadFile, closeModal} = this.props\n\n        if(file){\n            if(this.isAuthorized(file.type)){\n                //send File\n                const metadata = {contentType: file.type}\n                uploadFile(file, metadata);\n                closeModal();\n                this.clearFile();\n            }\n        }\n\n    }\n\n    clearFile = () => {\n        this.setState({file: null})\n    }\n\n    isAuthorized = fileType => this.state.authorized.includes(fileType);\n\n    render(){\n\n        const {fileModal, closeModal} = this.props;\n\n       return(\n            <Modal basic open={fileModal} onClose={closeModal}>\n                <Modal.Header>\n                    Select an image file\n                </Modal.Header>\n                <Modal.Content>\n                    <Input \n\n                        fluid\n                        label='File types: jpg, png'\n                        name='file'\n                        type='file'\n                        onChange={this.addFile}\n                    />\n                </Modal.Content>\n                <Modal.Actions>\n       \n                    <Button.Group>\n                        <Button negative inverted onClick={closeModal}>\n                            <Icon name='remove' /> Cancel\n                        </Button>\n                        <Button.Or />\n                        <Button onClick={this.sendFile} inverted positive>\n                            <Icon name='checkmark' />Upload\n                        </Button>\n                    </Button.Group>\n                    \n                </Modal.Actions>\n            </Modal>\n       );\n    }\n}\n\nexport default FileModal"]},"metadata":{},"sourceType":"module"}