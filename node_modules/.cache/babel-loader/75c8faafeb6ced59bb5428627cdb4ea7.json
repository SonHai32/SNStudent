{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\n\nclass NormalModuleReplacementPlugin {\n  constructor(resourceRegExp, newResource) {\n    this.resourceRegExp = resourceRegExp;\n    this.newResource = newResource;\n  }\n\n  apply(compiler) {\n    const resourceRegExp = this.resourceRegExp;\n    const newResource = this.newResource;\n    compiler.hooks.normalModuleFactory.tap(\"NormalModuleReplacementPlugin\", nmf => {\n      nmf.hooks.beforeResolve.tap(\"NormalModuleReplacementPlugin\", result => {\n        if (!result) return;\n\n        if (resourceRegExp.test(result.request)) {\n          if (typeof newResource === \"function\") {\n            newResource(result);\n          } else {\n            result.request = newResource;\n          }\n        }\n\n        return result;\n      });\n      nmf.hooks.afterResolve.tap(\"NormalModuleReplacementPlugin\", result => {\n        if (!result) return;\n\n        if (resourceRegExp.test(result.resource)) {\n          if (typeof newResource === \"function\") {\n            newResource(result);\n          } else {\n            result.resource = path.resolve(path.dirname(result.resource), newResource);\n          }\n        }\n\n        return result;\n      });\n    });\n  }\n\n}\n\nmodule.exports = NormalModuleReplacementPlugin;","map":null,"metadata":{},"sourceType":"script"}