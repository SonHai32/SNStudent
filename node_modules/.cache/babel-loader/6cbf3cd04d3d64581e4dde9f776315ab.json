{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Source = require(\"./Source\");\n\nclass CachedSource extends Source {\n  constructor(source) {\n    super();\n    this._source = source;\n    this._cachedSource = undefined;\n    this._cachedSize = undefined;\n    this._cachedMaps = {};\n    if (source.node) this.node = function (options) {\n      return this._source.node(options);\n    };\n    if (source.listMap) this.listMap = function (options) {\n      return this._source.listMap(options);\n    };\n  }\n\n  source() {\n    if (typeof this._cachedSource !== \"undefined\") return this._cachedSource;\n    return this._cachedSource = this._source.source();\n  }\n\n  size() {\n    if (typeof this._cachedSize !== \"undefined\") return this._cachedSize;\n\n    if (typeof this._cachedSource !== \"undefined\") {\n      if (Buffer.from.length === 1) return new Buffer(this._cachedSource).length;\n      return this._cachedSize = Buffer.byteLength(this._cachedSource);\n    }\n\n    return this._cachedSize = this._source.size();\n  }\n\n  sourceAndMap(options) {\n    const key = JSON.stringify(options);\n    if (typeof this._cachedSource !== \"undefined\" && key in this._cachedMaps) return {\n      source: this._cachedSource,\n      map: this._cachedMaps[key]\n    };else if (typeof this._cachedSource !== \"undefined\") {\n      return {\n        source: this._cachedSource,\n        map: this._cachedMaps[key] = this._source.map(options)\n      };\n    } else if (key in this._cachedMaps) {\n      return {\n        source: this._cachedSource = this._source.source(),\n        map: this._cachedMaps[key]\n      };\n    }\n\n    const result = this._source.sourceAndMap(options);\n\n    this._cachedSource = result.source;\n    this._cachedMaps[key] = result.map;\n    return {\n      source: this._cachedSource,\n      map: this._cachedMaps[key]\n    };\n  }\n\n  map(options) {\n    if (!options) options = {};\n    const key = JSON.stringify(options);\n    if (key in this._cachedMaps) return this._cachedMaps[key];\n    return this._cachedMaps[key] = this._source.map();\n  }\n\n  updateHash(hash) {\n    this._source.updateHash(hash);\n  }\n\n}\n\nmodule.exports = CachedSource;","map":null,"metadata":{},"sourceType":"script"}