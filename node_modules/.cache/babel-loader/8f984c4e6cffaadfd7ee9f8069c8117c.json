{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DependencyReference = require(\"./DependencyReference\");\n\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\n\nconst HarmonyLinkingError = require(\"../HarmonyLinkingError\");\n\nclass HarmonyImportSpecifierDependency extends HarmonyImportDependency {\n  constructor(request, originModule, sourceOrder, parserScope, id, name, range, strictExportPresence) {\n    super(request, originModule, sourceOrder, parserScope);\n    this.id = id === null ? null : \"\".concat(id);\n    this.redirectedId = undefined;\n    this.name = name;\n    this.range = range;\n    this.strictExportPresence = strictExportPresence;\n    this.namespaceObjectAsContext = false;\n    this.callArgs = undefined;\n    this.call = undefined;\n    this.directImport = undefined;\n    this.shorthand = undefined;\n  }\n\n  get type() {\n    return \"harmony import specifier\";\n  }\n\n  get _id() {\n    return this.redirectedId || this.id;\n  }\n\n  getReference() {\n    if (!this._module) return null;\n    return new DependencyReference(this._module, this._id && !this.namespaceObjectAsContext ? [this._id] : true, false, this.sourceOrder);\n  }\n\n  getWarnings() {\n    if (this.strictExportPresence || this.originModule.buildMeta.strictHarmonyModule) {\n      return [];\n    }\n\n    return this._getErrors();\n  }\n\n  getErrors() {\n    if (this.strictExportPresence || this.originModule.buildMeta.strictHarmonyModule) {\n      return this._getErrors();\n    }\n\n    return [];\n  }\n\n  _getErrors() {\n    const importedModule = this._module;\n\n    if (!importedModule) {\n      return;\n    }\n\n    if (!importedModule.buildMeta || !importedModule.buildMeta.exportsType) {\n      // It's not an harmony module\n      if (this.originModule.buildMeta.strictHarmonyModule && this._id && this._id !== \"default\") {\n        // In strict harmony modules we only support the default export\n        return [new HarmonyLinkingError(\"Can't import the named export '\".concat(this._id, \"' from non EcmaScript module (only default export is available)\"))];\n      }\n\n      return;\n    }\n\n    if (!this._id) {\n      return;\n    }\n\n    if (importedModule.isProvided(this._id) !== false) {\n      // It's provided or we are not sure\n      return;\n    } // We are sure that it's not provided\n\n\n    const idIsNotNameMessage = this._id !== this.name ? \" (imported as '\".concat(this.name, \"')\") : \"\";\n    const errorMessage = \"\\\"export '\".concat(this._id, \"'\").concat(idIsNotNameMessage, \" was not found in '\").concat(this.userRequest, \"'\");\n    return [new HarmonyLinkingError(errorMessage)];\n  } // implement this method to allow the occurrence order plugin to count correctly\n\n\n  getNumberOfIdOccurrences() {\n    return 0;\n  }\n\n  updateHash(hash) {\n    super.updateHash(hash);\n    const importedModule = this._module;\n    hash.update((importedModule && this._id) + \"\");\n    hash.update((importedModule && this._id && importedModule.isUsed(this._id)) + \"\");\n    hash.update((importedModule && (!importedModule.buildMeta || importedModule.buildMeta.exportsType)) + \"\");\n    hash.update((importedModule && importedModule.used + JSON.stringify(importedModule.usedExports)) + \"\");\n  }\n\n  disconnect() {\n    super.disconnect();\n    this.redirectedId = undefined;\n  }\n\n}\n\nHarmonyImportSpecifierDependency.Template = class HarmonyImportSpecifierDependencyTemplate extends HarmonyImportDependency.Template {\n  apply(dep, source, runtime) {\n    super.apply(dep, source, runtime);\n    const content = this.getContent(dep, runtime);\n    source.replace(dep.range[0], dep.range[1] - 1, content);\n  }\n\n  getContent(dep, runtime) {\n    const exportExpr = runtime.exportFromImport({\n      module: dep._module,\n      request: dep.request,\n      exportName: dep._id,\n      originModule: dep.originModule,\n      asiSafe: dep.shorthand,\n      isCall: dep.call,\n      callContext: !dep.directImport,\n      importVar: dep.getImportVar()\n    });\n    return dep.shorthand ? \"\".concat(dep.name, \": \").concat(exportExpr) : exportExpr;\n  }\n\n};\nmodule.exports = HarmonyImportSpecifierDependency;","map":null,"metadata":{},"sourceType":"script"}