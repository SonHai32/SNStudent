{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/web-dev/React/cstudy/src/components/NewsFeeds/NewsFeeds.js\";\nimport React from 'react';\nimport { Segment, Header, Icon, Feed, Image, Divider, Form, Input, Button, List, Responsive, Dropdown, Container, Loader, Dimmer, Label } from 'semantic-ui-react';\nimport uuid from 'uuidv4';\nimport firebase from '../../firebase';\nimport FileModal from './FileModal';\nimport ImageModal from './ImageModal';\nimport * as moment from 'moment';\nimport hash from 'js-hash-code';\nimport CreatePostModal from './CreatePostModal';\n\nclass NewsFeeds extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      like: false,\n      user: this.props.currentUser,\n      post: '',\n      fileModal: false,\n      imageModalStatus: false,\n      imageModalURL: '',\n      postModal: false,\n      uploadTask: null,\n      uploadStatus: '',\n      percentUploaded: 0,\n      imagePost: [],\n      postCreate: [],\n      posts: this.props.posts,\n      storeRef: firebase.storage().ref(),\n      databaseRef: firebase.database().ref('posts'),\n      imageLoading: false,\n      postLoading: false,\n      postDrowdownOptions: [{\n        key: 'savePost',\n        text: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          circular: true,\n          size: \"small\",\n          name: \"tag\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }), \"L\\u01B0u b\\xE0i vi\\u1EBFt\")\n      }, {\n        key: 'postReport',\n        text: React.createElement(\"span\", {\n          onClick: this.handleMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          circular: true,\n          size: \"small\",\n          name: \"warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), \"B\\xE1o c\\xE1o b\\xE0i vi\\u1EBFt\")\n      }]\n    };\n\n    this.handlePostChange = (e, {\n      value\n    }) => {\n      this.setState({\n        post: value\n      });\n    };\n\n    this.openModal = () => {\n      this.setState({\n        fileModal: true\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        fileModal: false\n      });\n    };\n\n    this.openImageModal = event => {\n      this.setState({\n        imageModalStatus: true,\n        imageModalURL: event.target.name\n      });\n    };\n\n    this.closeImageModal = () => {\n      this.setState({\n        imageModalStatus: false,\n        imageModalURL: ''\n      });\n    };\n\n    this.openPostModal = () => {\n      this.setState({\n        postModal: true\n      });\n    };\n\n    this.closePostModal = () => {\n      this.setState({\n        postModal: false\n      });\n    };\n\n    this.uploadFile = (file, metadata) => {\n      const filePath = this.state.user.uid + '/media/image/' + uuid() + '.jpg';\n      this.setState({\n        imageLoading: true,\n        uploadTask: this.state.storeRef.child(filePath).put(file, metadata)\n      }, () => {\n        this.state.uploadTask.on('state_changed', snap => {\n          const percentUploaded = Math.round(snap.bytesTransferred / snap.totalBytes * 100);\n          console.log(percentUploaded);\n          this.setState({\n            percentUploaded\n          });\n\n          if (percentUploaded === 100) {\n            this.setState({\n              percentUploaded: 0\n            });\n            setTimeout(() => {\n              this.state.uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n                const image = {\n                  downloadURL: downloadURL,\n                  imagePath: this.state.uploadTask.location_.path\n                };\n                this.setState({\n                  imagePost: this.state.imagePost.concat(image),\n                  imageLoading: false\n                });\n              }).catch(err => console.log(err));\n            }, 1000);\n          }\n        });\n      }, err => {\n        console.log(err);\n      });\n    };\n\n    this.savePost = event => {\n      event.preventDefault();\n      const postChild = this.state.user.uid + uuid() + '/post';\n      const postCreate = {\n        postChild: postChild,\n        createByUid: this.state.user.uid,\n        createByName: this.state.user.displayName,\n        avatar: this.state.user.photoURL,\n        timestamp: Date.now(),\n        postImages: Array().concat(this.state.imagePost),\n        postText: this.state.post,\n        liked: [{\n          username: 'null',\n          userUID: 'null'\n        }]\n      };\n      this.state.databaseRef.child(postChild).set(postCreate).then(() => this.setState({\n        post: '',\n        imagePost: []\n      }));\n    };\n\n    this.handleLikeClicked = (event, {\n      name\n    }) => {\n      event.preventDefault();\n      const post = this.state.post.filter((val, key, arr) => {\n        return val.postChild === name;\n      });\n      console.log(post[0].avatar);\n      let postLiked = post[0].liked;\n      const currentUserLiked = postLiked.some(val => {\n        return val.userUID === this.state.user.uid;\n      });\n      const imageNotExist = post[0].postImages === undefined;\n\n      if (currentUserLiked) {\n        postLiked = postLiked.filter((val, index, arr) => {\n          return val.userUID !== this.state.user.uid;\n        });\n      } else {\n        postLiked.push({\n          username: this.state.user.displayName,\n          userUID: this.state.user.uid\n        });\n      }\n\n      let postUpdate;\n\n      if (imageNotExist) {\n        post.forEach(val => {\n          postUpdate = {\n            postChild: val.postChild,\n            createByUid: val.createByUid,\n            createByName: val.createByName,\n            avatar: val.avatar,\n            timestamp: val.timestamp,\n            postText: val.postText,\n            liked: postLiked\n          };\n        });\n      } else {\n        post.forEach(val => {\n          postUpdate = {\n            postChild: val.postChild,\n            createByUid: val.createByUid,\n            createByName: val.createByName,\n            avatar: val.avatar,\n            timestamp: val.timestamp,\n            postImages: val.postImages,\n            postText: val.postText,\n            liked: postLiked\n          };\n        });\n      }\n\n      this.state.databaseRef.child(name).set(postUpdate).then(() => this.addPostListener()).catch(err => console.log(err));\n    };\n\n    this.displayImagePost = ({\n      imagePost\n    }) => // this.state.uploadStatus.includes('uploading')  ? \n    // <Segment size='large' loading={this.state.percentUploaded < 100} >\n    //   <List horizontal>\n    //       {imagePost.map((val,key) => (\n    //         <List.Item key={key+uuid} style={{marginRight: '15px'}}> \n    //             <Image  rounded size='small' key={val.downloadURL} src={val.downloadURL} label={{as: 'a' ,name: key, corner:'right', icon:'remove',size: 'mini',color:'red',onClick: this.removeImagePost}} /> \n    //         </List.Item> ) )}\n    //     <List.Item>\n    //       <Icon style={{cursor: 'pointer', boder: 'solid 2px '}} color='black' inverted name='add' size='big' onClick={this.openModal} />\n    //     </List.Item>\n    //   </List>\n    // </Segment> : ''\n    React.createElement(Dimmer.Dimmable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Dimmer, {\n      inverted: true,\n      active: this.state.percentUploaded > 0 && this.state.percentUploaded < 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Loading\")), React.createElement(List, {\n      horizontal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, imagePost.map((val, key) => React.createElement(List.Item, {\n      key: key + uuid,\n      style: {\n        marginRight: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Image, {\n      wrapped: true,\n      rounded: true,\n      size: \"small\",\n      key: val.downloadURL,\n      src: val.downloadURL,\n      label: {\n        as: 'a',\n        name: key,\n        corner: 'right',\n        icon: 'remove',\n        size: 'tiny',\n        color: 'red',\n        onClick: this.removeImagePost\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }))), imagePost.length > 0 ? React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      link: true,\n      color: \"black\",\n      inverted: true,\n      name: \"add\",\n      size: \"big\",\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    })) : ''));\n\n    this.deleteImageFromStorge = imagePath => {\n      if (imagePath) {\n        this.state.storeRef.child(imagePath).delete().then(() => console.log(\"deleted\")).catch(err => console.log(err));\n      }\n    };\n\n    this.removeImagePost = event => {\n      event.preventDefault();\n      let removeIndex = event.target.name;\n      this.deleteImageFromStorge(this.state.imagePost[removeIndex].imagePath);\n      const newImagePost = this.state.imagePost.filter((value, index, arr) => {\n        return index != removeIndex;\n      });\n      this.setState({\n        imagePost: newImagePost\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          user = _this$state.user,\n          posts = _this$state.posts;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(CreatePostModal, {\n      user: user,\n      postModal: this.state.postModal,\n      closeModal: this.closePostModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }), React.createElement(FileModal, {\n      fileModal: this.state.fileModal,\n      uploadFile: this.uploadFile,\n      closeModal: this.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(Header.Content, {\n      style: {\n        opacity: 0.6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"T\\u1EA1o B\\xE0i Vi\\u1EBFt \", React.createElement(Icon, {\n      name: \"edit outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }))), this.displayImagePost(this.state), React.createElement(Form, {\n      style: {\n        marginTop: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(Image, {\n      size: \"tiny\",\n      avatar: true,\n      src: user.photoURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(Input, {\n      transparent: true,\n      placeholder: \"B\\u1EA1n \\u0111ang ngh\\u0129 g\\xEC ?\",\n      style: {\n        height: '70px',\n        fontSize: 16\n      },\n      value: \"\",\n      onClick: this.openPostModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    })))), React.createElement(Button.Group, {\n      compact: true,\n      fluid: true,\n      widths: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(Button, {\n      inverted: true,\n      style: {\n        background: '#6FBE42'\n      },\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"photo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }), \" \\u1EA2nh/Video\"), React.createElement(Button, {\n      inverted: true,\n      style: {\n        background: '#6FBE42'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"user plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }), \" Tag Friends\"), React.createElement(Button, {\n      inverted: true,\n      style: {\n        background: '#6FBE42'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"smile outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }), \" C\\u1EA3m X\\xFAc\"), React.createElement(Button, {\n      inverted: true,\n      style: {\n        background: '#6FBE42'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }), \" Kh\\xE1c\"))), console.log(posts[0]), posts.map((val, key) => React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(Feed, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(Feed.Event, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(Feed.Label, {\n      image: val.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }), React.createElement(Feed.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(Feed.Summary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      inline: true,\n      closeOnChange: true,\n      options: this.state.postDrowdownOptions,\n      pointing: \"top right\",\n      icon: null,\n      style: {\n        float: 'right',\n        zIndex: 1000\n      },\n      trigger: React.createElement(Icon, {\n        name: \"angle down\",\n        style: {\n          opacity: 0.5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }), React.createElement(Feed.User, {\n      content: val.createByName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }), React.createElement(Feed.Date, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, moment(val.timestamp).locale('vi').fromNow())), React.createElement(Feed.Summary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      style: {\n        opacity: 0.5,\n        fontSize: 14\n      },\n      className: \"fas fa-globe-asia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }))))), React.createElement(Feed, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(Feed.Event, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(Feed.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, React.createElement(Container, {\n      fluid: true,\n      text: true,\n      textAlign: \"justified\",\n      content: val.postText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }), val.postImages ? val.postImages.map((value, key) => React.createElement(List, {\n      key: val.createByUid + val.timestamp + uuid() + hash(value.downloadURL),\n      horizontal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, React.createElement(List.Item, {\n      key: 'list' + val.createByUid + val.timestamp + uuid() + hash(value.downloadURL),\n      as: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(Image, {\n      centered: true,\n      fluid: true,\n      key: 'image' + val.createByUid + val.timestamp + uuid() + hash(value.downloadURL),\n      src: value.downloadURL,\n      name: value.downloadURL,\n      onClick: this.openImageModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }), React.createElement(ImageModal, {\n      imageModal: this.state.imageModalStatus,\n      closeModal: this.closeImageModal,\n      imageURL: this.state.imageModalURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    })))) : '')), React.createElement(Container, {\n      style: {\n        marginTop: '15px'\n      },\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: val.liked.length - 1 !== 0 ? 'thumbs up' : '',\n      color: \"blue\",\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        opacity: 0.6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, val.liked.length - 1 === 0 ? '' : val.liked.length - 1 + ' Thích'), React.createElement(\"span\", {\n      style: {\n        float: 'right',\n        opacity: 0.6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, \"20 comnents\")), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }), React.createElement(Button.Group, {\n      fluid: true,\n      size: \"small\",\n      compact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }, React.createElement(Button, {\n      name: val.postChild,\n      onClick: this.handleLikeClicked,\n      basic: true,\n      compact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"thumbs up\",\n      color: val.liked.some(val => {\n        return val.userUID === user.uid;\n      }) ? 'blue' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }), \" Like\"), React.createElement(Button, {\n      basic: true,\n      compact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"comment outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }), \" Comment\"), React.createElement(Button, {\n      basic: true,\n      compact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"share\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }), \" Share\")), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default NewsFeeds;","map":{"version":3,"sources":["/home/hari/Desktop/web-dev/React/cstudy/src/components/NewsFeeds/NewsFeeds.js"],"names":["React","Segment","Header","Icon","Feed","Image","Divider","Form","Input","Button","List","Responsive","Dropdown","Container","Loader","Dimmer","Label","uuid","firebase","FileModal","ImageModal","moment","hash","CreatePostModal","NewsFeeds","Component","state","like","user","props","currentUser","post","fileModal","imageModalStatus","imageModalURL","postModal","uploadTask","uploadStatus","percentUploaded","imagePost","postCreate","posts","storeRef","storage","ref","databaseRef","database","imageLoading","postLoading","postDrowdownOptions","key","text","handleMessage","handlePostChange","e","value","setState","openModal","closeModal","openImageModal","event","target","name","closeImageModal","openPostModal","closePostModal","uploadFile","file","metadata","filePath","uid","child","put","on","snap","Math","round","bytesTransferred","totalBytes","console","log","setTimeout","snapshot","getDownloadURL","then","downloadURL","image","imagePath","location_","path","concat","catch","err","savePost","preventDefault","postChild","createByUid","createByName","displayName","avatar","photoURL","timestamp","Date","now","postImages","Array","postText","liked","username","userUID","set","handleLikeClicked","filter","val","arr","postLiked","currentUserLiked","some","imageNotExist","undefined","index","push","postUpdate","forEach","addPostListener","displayImagePost","map","marginRight","as","corner","icon","size","color","onClick","removeImagePost","length","deleteImageFromStorge","delete","removeIndex","newImagePost","render","opacity","marginTop","width","height","fontSize","background","float","zIndex","locale","fromNow"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAgBC,MAAhB,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAkCC,KAAlC,EAAyCC,OAAzC,EAAkDC,IAAlD,EAAwDC,KAAxD,EAA+DC,MAA/D,EAAuEC,IAAvE,EAA6EC,UAA7E,EAAyFC,QAAzF,EAAmGC,SAAnG,EAA8GC,MAA9G,EAAsHC,MAAtH,EAA8HC,KAA9H,QAA0I,mBAA1I;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAMA,MAAMC,SAAN,SAAwBxB,KAAK,CAACyB,SAA9B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE5B;AACLC,MAAAA,IAAI,EAAE,KADD;AAELC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,WAFZ;AAGLC,MAAAA,IAAI,EAAE,EAHD;AAILC,MAAAA,SAAS,EAAE,KAJN;AAKLC,MAAAA,gBAAgB,EAAE,KALb;AAMLC,MAAAA,aAAa,EAAE,EANV;AAOLC,MAAAA,SAAS,EAAE,KAPN;AAQLC,MAAAA,UAAU,EAAE,IARP;AASLC,MAAAA,YAAY,EAAG,EATV;AAULC,MAAAA,eAAe,EAAG,CAVb;AAWLC,MAAAA,SAAS,EAAE,EAXN;AAYLC,MAAAA,UAAU,EAAE,EAZP;AAaLC,MAAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWY,KAbb;AAcLC,MAAAA,QAAQ,EAAExB,QAAQ,CAACyB,OAAT,GAAmBC,GAAnB,EAdL;AAeLC,MAAAA,WAAW,EAAE3B,QAAQ,CAAC4B,QAAT,GAAoBF,GAApB,CAAwB,OAAxB,CAfR;AAgBLG,MAAAA,YAAY,EAAE,KAhBT;AAiBLC,MAAAA,WAAW,EAAE,KAjBR;AAkBLC,MAAAA,mBAAmB,EAAE,CACnB;AACEC,QAAAA,GAAG,EAAE,UADP;AAEEC,QAAAA,IAAI,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAM,oBAAC,IAAD;AAAM,UAAA,QAAQ,MAAd;AAAe,UAAA,IAAI,EAAC,OAApB;AAA4B,UAAA,IAAI,EAAC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AAFR,OADmB,EAOnB;AACED,QAAAA,GAAG,EAAE,YADP;AAEEC,QAAAA,IAAI,EAAI;AAAM,UAAA,OAAO,EAAE,KAAKC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoC,oBAAC,IAAD;AAAM,UAAA,QAAQ,MAAd;AAAe,UAAA,IAAI,EAAC,OAApB;AAA4B,UAAA,IAAI,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAApC;AAFV,OAPmB;AAlBhB,KAF4B;;AAAA,SAyCnCC,gBAzCmC,GAyChB,CAACC,CAAD,EAAI;AAAEC,MAAAA;AAAF,KAAJ,KAAgB;AAEjC,WAAKC,QAAL,CAAc;AAACzB,QAAAA,IAAI,EAAEwB;AAAP,OAAd;AACD,KA5CkC;;AAAA,SA8CnCE,SA9CmC,GA8CvB,MAAK;AACf,WAAKD,QAAL,CAAc;AAACxB,QAAAA,SAAS,EAAE;AAAZ,OAAd;AACD,KAhDkC;;AAAA,SAkDnC0B,UAlDmC,GAkDtB,MAAK;AAEhB,WAAKF,QAAL,CAAc;AAACxB,QAAAA,SAAS,EAAE;AAAZ,OAAd;AACD,KArDkC;;AAAA,SAuDnC2B,cAvDmC,GAuDlBC,KAAK,IAAG;AAEvB,WAAKJ,QAAL,CAAc;AAACvB,QAAAA,gBAAgB,EAAE,IAAnB;AAAyBC,QAAAA,aAAa,EAAE0B,KAAK,CAACC,MAAN,CAAaC;AAArD,OAAd;AACD,KA1DkC;;AAAA,SA4DnCC,eA5DmC,GA4DjB,MAAK;AACrB,WAAKP,QAAL,CAAc;AAACvB,QAAAA,gBAAgB,EAAE,KAAnB;AAA0BC,QAAAA,aAAa,EAAC;AAAxC,OAAd;AAED,KA/DkC;;AAAA,SAiEnC8B,aAjEmC,GAiEnB,MAAK;AACnB,WAAKR,QAAL,CAAc;AAACrB,QAAAA,SAAS,EAAE;AAAZ,OAAd;AACD,KAnEkC;;AAAA,SAqEnC8B,cArEmC,GAqElB,MAAK;AACpB,WAAKT,QAAL,CAAc;AAACrB,QAAAA,SAAS,EAAE;AAAZ,OAAd;AACD,KAvEkC;;AAAA,SAyEnC+B,UAzEmC,GAyEtB,CAACC,IAAD,EAAOC,QAAP,KAAmB;AAC9B,YAAMC,QAAQ,GAAG,KAAK3C,KAAL,CAAWE,IAAX,CAAgB0C,GAAhB,GAAoB,eAApB,GAAoCrD,IAAI,EAAxC,GAA2C,MAA5D;AAEA,WAAKuC,QAAL,CAAc;AAEZT,QAAAA,YAAY,EAAE,IAFF;AAGZX,QAAAA,UAAU,EAAE,KAAKV,KAAL,CAAWgB,QAAX,CAAoB6B,KAApB,CAA0BF,QAA1B,EAAoCG,GAApC,CAAwCL,IAAxC,EAA6CC,QAA7C;AAHA,OAAd,EAMI,MAAM;AACJ,aAAK1C,KAAL,CAAWU,UAAX,CAAsBqC,EAAtB,CAAyB,eAAzB,EAA0CC,IAAI,IAAG;AAC/C,gBAAMpC,eAAe,GAAGqC,IAAI,CAACC,KAAL,CAAYF,IAAI,CAACG,gBAAL,GAAwBH,IAAI,CAACI,UAA9B,GAA0C,GAArD,CAAxB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY1C,eAAZ;AACA,eAAKkB,QAAL,CAAc;AAAClB,YAAAA;AAAD,WAAd;;AAEF,cAAGA,eAAe,KAAK,GAAvB,EAA2B;AACzB,iBAAKkB,QAAL,CAAc;AAAClB,cAAAA,eAAe,EAAE;AAAlB,aAAd;AACA2C,YAAAA,UAAU,CAAC,MAAI;AACb,mBAAKvD,KAAL,CAAWU,UAAX,CAAsB8C,QAAtB,CAA+BtC,GAA/B,CACDuC,cADC,GAEDC,IAFC,CAEIC,WAAW,IAAI;AACnB,sBAAMC,KAAK,GAAG;AAACD,kBAAAA,WAAW,EAAEA,WAAd;AAA2BE,kBAAAA,SAAS,EAAE,KAAK7D,KAAL,CAAWU,UAAX,CAAsBoD,SAAtB,CAAgCC;AAAtE,iBAAd;AACA,qBAAKjC,QAAL,CAAc;AAACjB,kBAAAA,SAAS,EAAE,KAAKb,KAAL,CAAWa,SAAX,CAAqBmD,MAArB,CAA4BJ,KAA5B,CAAZ;AAA+CvC,kBAAAA,YAAY,EAAE;AAA7D,iBAAd;AAEE,eANF,EAOC4C,KAPD,CAOOC,GAAG,IAAEb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CAPZ;AAQD,aATS,EASR,IATQ,CAAV;AAWD;AAEA,SApBD;AAqBD,OA5BL,EA4BMA,GAAG,IAAE;AAACb,QAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AAAiB,OA5B7B;AA8BC,KA1GgC;;AAAA,SA4GjCC,QA5GiC,GA4GtBjC,KAAK,IAAG;AACjBA,MAAAA,KAAK,CAACkC,cAAN;AACA,YAAMC,SAAS,GAAG,KAAKrE,KAAL,CAAWE,IAAX,CAAgB0C,GAAhB,GAAoBrD,IAAI,EAAxB,GAA2B,OAA7C;AACA,YAAMuB,UAAU,GAAE;AAChBuD,QAAAA,SAAS,EAAEA,SADK;AAEhBC,QAAAA,WAAW,EAAE,KAAKtE,KAAL,CAAWE,IAAX,CAAgB0C,GAFb;AAGhB2B,QAAAA,YAAY,EAAE,KAAKvE,KAAL,CAAWE,IAAX,CAAgBsE,WAHd;AAIhBC,QAAAA,MAAM,EAAE,KAAKzE,KAAL,CAAWE,IAAX,CAAgBwE,QAJR;AAKhBC,QAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EALK;AAMhBC,QAAAA,UAAU,EAAEC,KAAK,GAAGf,MAAR,CAAe,KAAKhE,KAAL,CAAWa,SAA1B,CANI;AAOhBmE,QAAAA,QAAQ,EAAE,KAAKhF,KAAL,CAAWK,IAPL;AAQhB4E,QAAAA,KAAK,EAAE,CAAC;AAACC,UAAAA,QAAQ,EAAE,MAAX;AAAmBC,UAAAA,OAAO,EAAE;AAA5B,SAAD;AARS,OAAlB;AAWA,WAAKnF,KAAL,CAAWmB,WAAX,CAAuB0B,KAAvB,CAA6BwB,SAA7B,EAAwCe,GAAxC,CAA4CtE,UAA5C,EAAwD4C,IAAxD,CAA6D,MAAI,KAAK5B,QAAL,CAAc;AAACzB,QAAAA,IAAI,EAAE,EAAP;AAAWQ,QAAAA,SAAS,EAAE;AAAtB,OAAd,CAAjE;AAED,KA5HgC;;AAAA,SAiIjCwE,iBAjIiC,GAiIb,CAACnD,KAAD,EAAQ;AAACE,MAAAA;AAAD,KAAR,KAAkB;AAEpCF,MAAAA,KAAK,CAACkC,cAAN;AACA,YAAM/D,IAAI,GAAG,KAAKL,KAAL,CAAWK,IAAX,CAAgBiF,MAAhB,CAAuB,CAACC,GAAD,EAAK/D,GAAL,EAASgE,GAAT,KAAe;AACjD,eAAOD,GAAG,CAAClB,SAAJ,KAAkBjC,IAAzB;AACD,OAFY,CAAb;AAIAiB,MAAAA,OAAO,CAACC,GAAR,CAAYjD,IAAI,CAAC,CAAD,CAAJ,CAAQoE,MAApB;AAIA,UAAIgB,SAAS,GAAEpF,IAAI,CAAC,CAAD,CAAJ,CAAQ4E,KAAvB;AAEA,YAAOS,gBAAgB,GAAGD,SAAS,CAACE,IAAV,CAAeJ,GAAG,IAAE;AAE5C,eAAOA,GAAG,CAACJ,OAAJ,KAAgB,KAAKnF,KAAL,CAAWE,IAAX,CAAgB0C,GAAvC;AAED,OAJyB,CAA1B;AAOA,YAAMgD,aAAa,GAAGvF,IAAI,CAAC,CAAD,CAAJ,CAAQyE,UAAR,KAAuBe,SAA7C;;AAEA,UAAGH,gBAAH,EAAoB;AAChBD,QAAAA,SAAS,GAAGA,SAAS,CAACH,MAAV,CAAiB,CAACC,GAAD,EAAKO,KAAL,EAAWN,GAAX,KAAiB;AAC9C,iBAAOD,GAAG,CAACJ,OAAJ,KAAgB,KAAKnF,KAAL,CAAWE,IAAX,CAAgB0C,GAAvC;AACD,SAFa,CAAZ;AAGH,OAJD,MAIK;AACH6C,QAAAA,SAAS,CAACM,IAAV,CAAe;AAACb,UAAAA,QAAQ,EAAE,KAAKlF,KAAL,CAAWE,IAAX,CAAgBsE,WAA3B;AAAwCW,UAAAA,OAAO,EAAE,KAAKnF,KAAL,CAAWE,IAAX,CAAgB0C;AAAjE,SAAf;AACD;;AAED,UAAIoD,UAAJ;;AACA,UAAGJ,aAAH,EAAiB;AACfvF,QAAAA,IAAI,CAAC4F,OAAL,CAAaV,GAAG,IAAE;AAChBS,UAAAA,UAAU,GAAE;AACV3B,YAAAA,SAAS,EAAEkB,GAAG,CAAClB,SADL;AAEVC,YAAAA,WAAW,EAAEiB,GAAG,CAACjB,WAFP;AAGVC,YAAAA,YAAY,EAAEgB,GAAG,CAAChB,YAHR;AAIVE,YAAAA,MAAM,EAAEc,GAAG,CAACd,MAJF;AAKVE,YAAAA,SAAS,EAAEY,GAAG,CAACZ,SALL;AAMVK,YAAAA,QAAQ,EAAEO,GAAG,CAACP,QANJ;AAOVC,YAAAA,KAAK,EAAEQ;AAPG,WAAZ;AAWD,SAZD;AAcD,OAfD,MAeK;AACHpF,QAAAA,IAAI,CAAC4F,OAAL,CAAaV,GAAG,IAAE;AAChBS,UAAAA,UAAU,GAAE;AACV3B,YAAAA,SAAS,EAAEkB,GAAG,CAAClB,SADL;AAEVC,YAAAA,WAAW,EAAEiB,GAAG,CAACjB,WAFP;AAGVC,YAAAA,YAAY,EAAEgB,GAAG,CAAChB,YAHR;AAIVE,YAAAA,MAAM,EAAEc,GAAG,CAACd,MAJF;AAKVE,YAAAA,SAAS,EAAEY,GAAG,CAACZ,SALL;AAMVG,YAAAA,UAAU,EAAES,GAAG,CAACT,UANN;AAOVE,YAAAA,QAAQ,EAAEO,GAAG,CAACP,QAPJ;AAQVC,YAAAA,KAAK,EAAEQ;AARG,WAAZ;AAYD,SAbD;AAcD;;AAGA,WAAKzF,KAAL,CAAWmB,WAAX,CAAuB0B,KAAvB,CAA6BT,IAA7B,EAAmCgD,GAAnC,CAAuCY,UAAvC,EAAmDtC,IAAnD,CAAwD,MAAI,KAAKwC,eAAL,EAA5D,EAAoFjC,KAApF,CAA0FC,GAAG,IAAEb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CAA/F;AAGF,KApMgC;;AAAA,SAyMjCiC,gBAzMiC,GAyMd,CAAC;AAACtF,MAAAA;AAAD,KAAD,KACjB;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA,wBAAC,MAAD,CAAQ,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,MAAM,EAAE,KAAKb,KAAL,CAAWY,eAAX,GAA6B,CAA7B,IAAkC,KAAKZ,KAAL,CAAWY,eAAX,GAA4B,GAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAME,oBAAC,IAAD;AAAM,MAAA,UAAU,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKC,SAAS,CAACuF,GAAV,CAAc,CAACb,GAAD,EAAK/D,GAAL,KACX,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,GAAG,EAAEA,GAAG,GAACjC,IAApB;AAA0B,MAAA,KAAK,EAAE;AAAC8G,QAAAA,WAAW,EAAE;AAAd,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,OAAO,MAAtB;AAAuB,MAAA,IAAI,EAAC,OAA5B;AAAoC,MAAA,GAAG,EAAEd,GAAG,CAAC5B,WAA7C;AAA0D,MAAA,GAAG,EAAE4B,GAAG,CAAC5B,WAAnE;AAAgF,MAAA,KAAK,EAAE;AAAC2C,QAAAA,EAAE,EAAE,GAAL;AAAUlE,QAAAA,IAAI,EAAEZ,GAAhB;AAAqB+E,QAAAA,MAAM,EAAC,OAA5B;AAAqCC,QAAAA,IAAI,EAAC,QAA1C;AAAmDC,QAAAA,IAAI,EAAE,MAAzD;AAAgEC,QAAAA,KAAK,EAAC,KAAtE;AAA4EC,QAAAA,OAAO,EAAE,KAAKC;AAA1F,OAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADH,CAFL,EASK/F,SAAS,CAACgG,MAAV,GAAmB,CAAnB,GACC,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,KAAK,EAAC,OAAjB;AAAyB,MAAA,QAAQ,MAAjC;AAAkC,MAAA,IAAI,EAAC,KAAvC;AAA6C,MAAA,IAAI,EAAC,KAAlD;AAAwD,MAAA,OAAO,EAAE,KAAK9E,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,CADD,GAID,EAbJ,CANF,CA5N+B;;AAAA,SAyPjC+E,qBAzPiC,GAyPTjD,SAAS,IAAG;AAChC,UAAGA,SAAH,EAAa;AACX,aAAK7D,KAAL,CAAWgB,QAAX,CAAoB6B,KAApB,CAA0BgB,SAA1B,EAAqCkD,MAArC,GAA8CrD,IAA9C,CAAmD,MAAML,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAzD,EAAiFW,KAAjF,CAAuFC,GAAG,IAAGb,OAAO,CAACC,GAAR,CAAYY,GAAZ,CAA7F;AACD;AAEJ,KA9PgC;;AAAA,SAgQjC0C,eAhQiC,GAgQf1E,KAAK,IAAG;AACxBA,MAAAA,KAAK,CAACkC,cAAN;AACA,UAAI4C,WAAW,GAAG9E,KAAK,CAACC,MAAN,CAAaC,IAA/B;AAEA,WAAK0E,qBAAL,CAA2B,KAAK9G,KAAL,CAAWa,SAAX,CAAqBmG,WAArB,EAAkCnD,SAA7D;AAEA,YAAMoD,YAAY,GAAG,KAAKjH,KAAL,CAAWa,SAAX,CAAqByE,MAArB,CAA4B,CAACzD,KAAD,EAAOiE,KAAP,EAAaN,GAAb,KAAoB;AACnE,eAAOM,KAAK,IAAIkB,WAAhB;AACD,OAFoB,CAArB;AAKA,WAAKlF,QAAL,CAAc;AAACjB,QAAAA,SAAS,EAAGoG;AAAb,OAAd;AAGD,KA9QgC;AAAA;;AAkRnCC,EAAAA,MAAM,GAAE;AAAA,wBACiB,KAAKlH,KADtB;AAAA,UACGE,IADH,eACGA,IADH;AAAA,UACQa,KADR,eACQA,KADR;AAIJ,WACF,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEb,IAAvB;AAA6B,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWS,SAAnD;AAA8D,MAAA,UAAU,EAAE,KAAK8B,cAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAE,KAAKvC,KAAL,CAAWM,SAAjC;AACW,MAAA,UAAU,EAAI,KAAKkC,UAD9B;AAEW,MAAA,UAAU,EAAI,KAAKR,UAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAQF,oBAAC,OAAD;AAAS,MAAA,OAAO,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,MAAA,KAAK,EAAE;AAACmF,QAAAA,OAAO,EAAE;AAAV,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAoD,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApD,CAFF,CAFJ,EAQO,KAAKhB,gBAAL,CAAsB,KAAKnG,KAA3B,CARP,EAaI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACoH,QAAAA,SAAS,EAAE;AAAZ,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,MAAM,MAAzB;AAA0B,MAAA,GAAG,EAAElH,IAAI,CAACwE,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAIG,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAC2C,QAAAA,KAAK,EAAE;AAAR,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,WAAW,MAAlB;AAAoB,MAAA,WAAW,EAAC,sCAAhC;AAAqD,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,MAAT;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OAA5D;AAA2F,MAAA,KAAK,EAAE,EAAlG;AAAsG,MAAA,OAAO,EAAE,KAAKjF,aAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAJH,CADD,CAbJ,EA6BE,oBAAC,MAAD,CAAQ,KAAR;AAAe,MAAA,OAAO,MAAtB;AAAuB,MAAA,KAAK,MAA5B;AAA6B,MAAA,MAAM,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,KAAK,EAAE;AAACkF,QAAAA,UAAU,EAAE;AAAb,OAAxB;AAAkD,MAAA,OAAO,EAAE,KAAKzF,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,oBAFA,EAKM,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,KAAK,EAAE;AAACyF,QAAAA,UAAU,EAAE;AAAb,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,iBALN,EAUM,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,KAAK,EAAE;AAACA,QAAAA,UAAU,EAAE;AAAb,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,qBAVN,EAcM,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,KAAK,EAAE;AAACA,QAAAA,UAAU,EAAE;AAAb,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,aAdN,CA7BF,CARE,EA2DGnE,OAAO,CAACC,GAAR,CAAYvC,KAAK,CAAC,CAAD,CAAjB,CA3DH,EA+DEA,KAAK,CAACqF,GAAN,CAAU,CAACb,GAAD,EAAM/D,GAAN,KAER,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAG+D,GAAG,CAACd,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AACE,MAAA,MAAM,MADR;AAEE,MAAA,aAAa,MAFf;AAGE,MAAA,OAAO,EAAE,KAAKzE,KAAL,CAAWuB,mBAHtB;AAIE,MAAA,QAAQ,EAAC,WAJX;AAKE,MAAA,IAAI,EAAE,IALR;AAME,MAAA,KAAK,EAAE;AAACkG,QAAAA,KAAK,EAAE,OAAR;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OANT;AAOE,MAAA,OAAO,EAAE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,YAAX;AAAwB,QAAA,KAAK,EAAE;AAACP,UAAAA,OAAO,EAAE;AAAV,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAUA,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,OAAO,EAAE5B,GAAG,CAAChB,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVA,EAWA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC5E,MAAM,CAAC4F,GAAG,CAACZ,SAAL,CAAN,CAAsBgD,MAAtB,CAA6B,IAA7B,EAAmCC,OAAnC,EAFD,CAXA,CADF,EAqBE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,KAAK,EAAE;AAACT,QAAAA,OAAO,EAAE,GAAV;AAAeI,QAAAA,QAAQ,EAAE;AAAzB,OAAV;AAAwC,MAAA,SAAS,EAAC,mBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CArBF,CAFA,CADJ,CAFA,EAwCA,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,IAAI,MAArB;AAAsB,MAAA,SAAS,EAAC,WAAhC;AAA4C,MAAA,OAAO,EAAEhC,GAAG,CAACP,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAIGO,GAAG,CAACT,UAAJ,GACCS,GAAG,CAACT,UAAJ,CAAesB,GAAf,CAAmB,CAACvE,KAAD,EAAOL,GAAP,KACf,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAE+D,GAAG,CAACjB,WAAJ,GAAgBiB,GAAG,CAACZ,SAApB,GAA8BpF,IAAI,EAAlC,GAAqCK,IAAI,CAACiC,KAAK,CAAC8B,WAAP,CAApD;AAAyE,MAAA,UAAU,MAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,GAAG,EAAE,SAAO4B,GAAG,CAACjB,WAAX,GAAuBiB,GAAG,CAACZ,SAA3B,GAAqCpF,IAAI,EAAzC,GAA4CK,IAAI,CAACiC,KAAK,CAAC8B,WAAP,CAAhE;AAAuF,MAAA,EAAE,EAAC,GAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,oBAAC,KAAD;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,GAAG,EAAE,UAAQ4B,GAAG,CAACjB,WAAZ,GAAwBiB,GAAG,CAACZ,SAA5B,GAAsCpF,IAAI,EAA1C,GAA6CK,IAAI,CAACiC,KAAK,CAAC8B,WAAP,CAA5E;AAAiG,MAAA,GAAG,EAAE9B,KAAK,CAAC8B,WAA5G;AAAyH,MAAA,IAAI,EAAE9B,KAAK,CAAC8B,WAArI;AAAkJ,MAAA,OAAO,EAAE,KAAK1B,cAAhK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAME,oBAAC,UAAD;AAEE,MAAA,UAAU,EAAE,KAAKjC,KAAL,CAAWO,gBAFzB;AAGE,MAAA,UAAU,EAAE,KAAK8B,eAHnB;AAIE,MAAA,QAAQ,EAAE,KAAKrC,KAAL,CAAWQ,aAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CADJ,CADD,GAmBG,EAvBN,CADF,CAFA,EAkCA,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAC4G,QAAAA,SAAS,EAAC;AAAX,OAAlB;AAAsC,MAAA,KAAK,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AACE,MAAA,IAAI,EAAE7B,GAAG,CAACN,KAAJ,CAAU4B,MAAV,GAAkB,CAAlB,KAAuB,CAAvB,GAA2B,WAA3B,GAAwC,EADhD;AAEE,MAAA,KAAK,EAAC,MAFR;AAEgB,MAAA,IAAI,EAAC,OAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAIE;AAAM,MAAA,KAAK,EAAE;AAACM,QAAAA,OAAO,EAAE;AAAV,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B5B,GAAG,CAACN,KAAJ,CAAU4B,MAAV,GAAkB,CAAlB,KAAwB,CAAxB,GAA4B,EAA5B,GAAgCtB,GAAG,CAACN,KAAJ,CAAU4B,MAAV,GAAkB,CAAlB,GAAqB,QAAnF,CAJF,EAKE;AAAM,MAAA,KAAK,EAAE;AAACY,QAAAA,KAAK,EAAE,OAAR;AAAgBN,QAAAA,OAAO,EAAE;AAAzB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF,CAlCA,EA0CA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1CA,EA2CE,oBAAC,MAAD,CAAQ,KAAR;AAAc,MAAA,KAAK,MAAnB;AAAoB,MAAA,IAAI,EAAC,OAAzB;AAAiC,MAAA,OAAO,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAS,MAAA,IAAI,EAAE5B,GAAG,CAAClB,SAAnB;AAA8B,MAAA,OAAO,EAAE,KAAKgB,iBAA5C;AAA+D,MAAA,KAAK,MAApE;AAAqE,MAAA,OAAO,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,WAAX;AAAwB,MAAA,KAAK,EAAEE,GAAG,CAACN,KAAJ,CAAUU,IAAV,CAAeJ,GAAG,IAAE;AAAC,eAAOA,GAAG,CAACJ,OAAJ,KAAgBjF,IAAI,CAAC0C,GAA5B;AAAgC,OAArD,IAAyD,MAAzD,GAAiE,EAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,UADA,EAKE,oBAAC,MAAD;AAAQ,MAAA,KAAK,MAAb;AAAc,MAAA,OAAO,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,aALF,EAQE,oBAAC,MAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,OAAO,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,WARF,CA3CF,EAuDE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvDF,CAxCA,CAFF,CA/DF,CADE;AAoLH;;AA1ckC;;AA8cvC,eAAe9C,SAAf","sourcesContent":["import React from 'react'\nimport {Segment,Header,Icon, Feed,Image, Divider, Form, Input, Button, List, Responsive, Dropdown, Container, Loader, Dimmer, Label} from 'semantic-ui-react'\nimport uuid from 'uuidv4'\nimport firebase from '../../firebase'\nimport FileModal from './FileModal'\nimport ImageModal from './ImageModal'\nimport * as moment from 'moment'\nimport hash from 'js-hash-code'\nimport CreatePostModal from './CreatePostModal'\n\n\n\n\n\nclass NewsFeeds extends React.Component{\n\n    state ={\n      like: false,\n      user: this.props.currentUser,\n      post: '',\n      fileModal: false,\n      imageModalStatus: false,\n      imageModalURL: '',\n      postModal: false,\n      uploadTask: null,\n      uploadStatus : '',\n      percentUploaded : 0,\n      imagePost: [],\n      postCreate: [],\n      posts: this.props.posts,\n      storeRef: firebase.storage().ref(),\n      databaseRef: firebase.database().ref('posts'),\n      imageLoading: false,\n      postLoading: false,\n      postDrowdownOptions: [\n        {\n          key: 'savePost',\n          text: <span><Icon circular size='small' name='tag' />Lưu bài viết</span>,\n\n          \n        },\n        {\n          key: 'postReport',\n          text :  <span onClick={this.handleMessage} ><Icon circular size='small' name='warning' />Báo cáo bài viết</span>,\n          \n        \n      },\n\n      ]\n   \n    }\n\n   \n\n    \n    handlePostChange = (e, { value}) =>{\n    \n      this.setState({post: value})\n    }\n    \n    openModal = () =>{\n      this.setState({fileModal: true})\n    }\n\n    closeModal = () =>{\n\n      this.setState({fileModal: false})\n    }\n\n    openImageModal = event =>{\n     \n      this.setState({imageModalStatus: true, imageModalURL: event.target.name})\n    }\n\n    closeImageModal = () =>{\n      this.setState({imageModalStatus: false, imageModalURL:''})\n\n    }\n\n    openPostModal = () =>{\n      this.setState({postModal: true})\n    }\n\n    closePostModal = () =>{\n      this.setState({postModal: false})\n    }\n\n    uploadFile = (file, metadata) =>{\n      const filePath = this.state.user.uid+'/media/image/'+uuid()+'.jpg'\n     \n      this.setState({\n  \n        imageLoading: true,\n        uploadTask: this.state.storeRef.child(filePath).put(file,metadata)\n      \n        },\n          () => {\n            this.state.uploadTask.on('state_changed', snap =>{\n              const percentUploaded = Math.round((snap.bytesTransferred / snap.totalBytes)*100);\n              console.log(percentUploaded)\n              this.setState({percentUploaded});\n            \n            if(percentUploaded === 100){\n              this.setState({percentUploaded: 0})\n              setTimeout(()=>{\n                this.state.uploadTask.snapshot.ref\n              .getDownloadURL()\n              .then(downloadURL => {\n                const image = {downloadURL: downloadURL, imagePath: this.state.uploadTask.location_.path}\n                this.setState({imagePost: this.state.imagePost.concat(image),imageLoading: false})\n              \n                 })\n                .catch(err=>console.log(err))\n              },1000)  \n            \n            }\n            \n            })\n          },err=>{console.log(err)}\n        )\n      }\n\n      savePost = event =>{\n        event.preventDefault();\n        const postChild = this.state.user.uid+uuid()+'/post';\n        const postCreate ={\n          postChild: postChild,\n          createByUid: this.state.user.uid,\n          createByName: this.state.user.displayName,\n          avatar: this.state.user.photoURL ,\n          timestamp: Date.now(),\n          postImages: Array().concat(this.state.imagePost),\n          postText: this.state.post,\n          liked: [{username: 'null', userUID: 'null'}]\n        }\n        \n        this.state.databaseRef.child(postChild).set(postCreate).then(()=>this.setState({post: '', imagePost: []}))\n        \n      }\n\n\n      \n\n      handleLikeClicked = (event, {name}) =>{\n     \n        event.preventDefault();\n        const post = this.state.post.filter((val,key,arr)=>{\n          return val.postChild === name\n        })\n\n        console.log(post[0].avatar);\n\n        \n        \n        let postLiked= post[0].liked;\n\n        const  currentUserLiked = postLiked.some(val=>{\n          \n          return val.userUID === this.state.user.uid;\n         \n        })\n\n\n        const imageNotExist = post[0].postImages === undefined;\n      \n        if(currentUserLiked){\n            postLiked = postLiked.filter((val,index,arr)=>{\n            return val.userUID !== this.state.user.uid\n          })\n        }else{\n          postLiked.push({username: this.state.user.displayName, userUID: this.state.user.uid})\n        }\n  \n        let postUpdate ;\n        if(imageNotExist){\n          post.forEach(val=>{\n            postUpdate ={\n              postChild: val.postChild,\n              createByUid: val.createByUid,\n              createByName: val.createByName,\n              avatar: val.avatar,\n              timestamp: val.timestamp,\n              postText: val.postText,\n              liked: postLiked\n            }\n            \n          \n          })\n         \n        }else{\n          post.forEach(val=>{\n            postUpdate ={\n              postChild: val.postChild,\n              createByUid: val.createByUid,\n              createByName: val.createByName,\n              avatar: val.avatar,\n              timestamp: val.timestamp,\n              postImages: val.postImages ,\n              postText: val.postText,\n              liked: postLiked\n            }\n            \n          \n          })\n        }\n       \n  \n         this.state.databaseRef.child(name).set(postUpdate).then(()=>this.addPostListener()).catch(err=>console.log(err))\n  \n      \n      }\n\n      \n\n      \n      displayImagePost = ({imagePost}) =>(\n        // this.state.uploadStatus.includes('uploading')  ? \n        // <Segment size='large' loading={this.state.percentUploaded < 100} >\n        //   <List horizontal>\n          \n        //       {imagePost.map((val,key) => (\n        //         <List.Item key={key+uuid} style={{marginRight: '15px'}}> \n\n        //             <Image  rounded size='small' key={val.downloadURL} src={val.downloadURL} label={{as: 'a' ,name: key, corner:'right', icon:'remove',size: 'mini',color:'red',onClick: this.removeImagePost}} /> \n                \n        //         </List.Item> ) )}\n                \n        //     <List.Item>\n        //       <Icon style={{cursor: 'pointer', boder: 'solid 2px '}} color='black' inverted name='add' size='big' onClick={this.openModal} />\n        //     </List.Item>\n        //   </List>\n          \n        // </Segment> : ''\n      \n        <Dimmer.Dimmable  > \n          <Dimmer inverted active={this.state.percentUploaded > 0 && this.state.percentUploaded <100}>\n            <Loader>Loading</Loader>\n           \n          </Dimmer>\n\n          <List horizontal>\n          \n              {imagePost.map((val,key) => (\n                  <List.Item key={key+uuid} style={{marginRight: '15px'}}> \n  \n                      <Image wrapped rounded size='small' key={val.downloadURL} src={val.downloadURL} label={{as: 'a' ,name: key, corner:'right', icon:'remove',size: 'tiny',color:'red',onClick: this.removeImagePost}} /> \n                  \n                  </List.Item> ) )}\n                  \n              {imagePost.length > 0 ? \n                <List.Item>\n              <Icon link color='black' inverted name='add' size='big' onClick={this.openModal} />\n            </List.Item>\n            : ''  \n          }\n            </List>\n            \n    \n     \n          \n        </Dimmer.Dimmable>\n      )\n      \n      deleteImageFromStorge = imagePath =>{\n          if(imagePath){\n            this.state.storeRef.child(imagePath).delete().then(() => console.log(\"deleted\")).catch(err=> console.log(err))\n          }\n          \n      }\n\n      removeImagePost = event =>{\n        event.preventDefault();\n        let removeIndex = event.target.name;\n        \n        this.deleteImageFromStorge(this.state.imagePost[removeIndex].imagePath)\n\n        const newImagePost = this.state.imagePost.filter((value,index,arr) =>{\n          return index != removeIndex\n        })\n        \n\n        this.setState({imagePost : newImagePost})\n        \n        \n      }\n      \n    \n\n    render(){\n        const {user,posts} = this.state;\n       \n\n        return(\n      <React.Fragment>\n        \n        <CreatePostModal user={user} postModal={this.state.postModal} closeModal={this.closePostModal} />\n        <FileModal fileModal={this.state.fileModal}\n                   uploadFile = {this.uploadFile}\n                   closeModal = {this.closeModal}\n        />\n       \n    <Segment stacked>\n    \n        <Header as='h3' block>\n        \n          <Header.Content style={{opacity: 0.6}}>Tạo Bài Viết <Icon name='edit outline' /></Header.Content>\n        \n        </Header>\n        \n          {this.displayImagePost(this.state)}\n        \n\n    \n\n        <Form style={{marginTop: '5px'}}>\n         <Form.Group >\n           <Image size='tiny' avatar src={user.photoURL}/>\n          \n          \n            <Form.Field style={{width: '100%'}}>\n            <Input transparent  placeholder=\"Bạn đang nghĩ gì ?\" style={{height: '70px',fontSize: 16}} value={\"\"} onClick={this.openPostModal} />\n            </Form.Field>\n\n       \n\n          \n         </Form.Group>\n        \n        </Form>\n\n      <Button.Group  compact fluid widths={4}  >\n        \n      <Button inverted style={{background: '#6FBE42'}}  onClick={this.openModal}  >\n              <Icon name='photo' /> Ảnh/Video\n            </Button>\n            <Button inverted style={{background: '#6FBE42'}}>\n              <Icon name='user plus' /> Tag Friends\n            </Button>\n         \n         \n            <Button inverted style={{background: '#6FBE42'}}>\n              <Icon name='smile outline' /> Cảm Xúc\n            </Button>\n          \n            <Button inverted style={{background: '#6FBE42'}}>\n              <Icon name='list' /> Khác\n             </Button>\n      </Button.Group>\n     \n  \n  \n    </Segment>\n        {console.log(posts[0])}\n      \n          \n      {\n        posts.map((val, key) =>(\n          \n          <Segment  >\n    \n          <Feed size='large'>\n              <Feed.Event>\n              <Feed.Label image ={val.avatar} />\n              <Feed.Content>\n                <Feed.Summary> \n                <Dropdown\n                  inline\n                  closeOnChange\n                  options={this.state.postDrowdownOptions}\n                  pointing='top right'\n                  icon={null}\n                  style={{float: 'right', zIndex: 1000}}\n                  trigger={<Icon name='angle down' style={{opacity: 0.5 }} />}\n                />\n                <Feed.User content={val.createByName} />\n                <Feed.Date>\n\n                {moment(val.timestamp).locale('vi').fromNow()}\n                {/* {moment(val.timestamp).fromNow()} */}\n               \n                  \n                </Feed.Date>\n                \n                </Feed.Summary>\n                <Feed.Summary>\n                  <i style={{opacity: 0.5, fontSize: 14}} className=\"fas fa-globe-asia\"></i> \n               \n                </Feed.Summary>\n\n                \n                 \n           \n              </Feed.Content>\n              \n              </Feed.Event>\n            \n          </Feed>\n          \n          <Feed size='large'  >\n          \n          <Feed.Event>\n            <Feed.Content >\n              <Container fluid text textAlign='justified' content={val.postText}>\n\n              </Container>\n              {val.postImages ? (\n                val.postImages.map((value,key) =>(        \n                    <List key={val.createByUid+val.timestamp+uuid()+hash(value.downloadURL)} horizontal  >\n                      <List.Item key={'list'+val.createByUid+val.timestamp+uuid()+hash(value.downloadURL)}   as='a'  >\n                       \n                       \n                          <Image centered fluid key={'image'+val.createByUid+val.timestamp+uuid()+hash(value.downloadURL)} src={value.downloadURL} name={value.downloadURL} onClick={this.openImageModal} />\n                          {/* <img style={{padding: '10px 10px'}} src={value.downloadURL} name={value.downloadURL} onClick={this.openImageModal} />\n                     */}\n                        <ImageModal \n                         \n                          imageModal={this.state.imageModalStatus} \n                          closeModal={this.closeImageModal}\n                          imageURL={this.state.imageModalURL} />\n                      </List.Item>\n                    </List>\n                    \n                \n                ))\n              ) : ''}\n               \n             \n            </Feed.Content>\n            \n          </Feed.Event>\n       \n\n          <Container style={{marginTop:'15px'}} fluid> \n          <Icon \n            name={val.liked.length -1 !==0 ? 'thumbs up': ''} \n            color='blue'  size='small' /> \n            <span style={{opacity: 0.6}}>{val.liked.length -1 === 0 ? '': val.liked.length -1 +' Thích' }</span>\n            <span style={{float: 'right',opacity: 0.6}} >20 comnents</span>\n          </Container>\n         \n          <Divider />\n            <Button.Group fluid size='small' compact >\n            <Button  name={val.postChild} onClick={this.handleLikeClicked} basic compact >\n            \n                <Icon name='thumbs up'  color={val.liked.some(val=>{return val.userUID === user.uid}) ? 'blue' :''} /> Like\n              </Button>\n              <Button basic compact >\n                <Icon name='comment outline' /> Comment\n              </Button>\n              <Button  basic compact>\n                <Icon name='share' /> Share \n              </Button>\n            </Button.Group>\n            <Divider />\n      \n         \n        \n      </Feed>\n      </Segment>\n        ))\n     }\n\n     \n\n \n\n      \n  </React.Fragment>\n \n           \n            \n        )\n    }\n\n}\n\nexport default NewsFeeds"]},"metadata":{},"sourceType":"module"}