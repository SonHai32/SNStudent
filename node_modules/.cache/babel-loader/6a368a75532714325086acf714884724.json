{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n\t*/\n\"use strict\";\n\nconst _require = require(\"webpack-sources\"),\n      RawSource = _require.RawSource;\n\nconst Module = require(\"./Module\");\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\n\nclass DllModule extends Module {\n  constructor(context, dependencies, name, type) {\n    super(\"javascript/dynamic\", context); // Info from Factory\n\n    this.dependencies = dependencies;\n    this.name = name;\n    this.type = type;\n  }\n\n  identifier() {\n    return \"dll \".concat(this.name);\n  }\n\n  readableIdentifier() {\n    return \"dll \".concat(this.name);\n  }\n\n  build(options, compilation, resolver, fs, callback) {\n    this.built = true;\n    this.buildMeta = {};\n    this.buildInfo = {};\n    return callback();\n  }\n\n  source() {\n    return new RawSource(\"module.exports = __webpack_require__;\");\n  }\n\n  needRebuild() {\n    return false;\n  }\n\n  size() {\n    return 12;\n  }\n  /**\n   * @param {Hash} hash the hash used to track dependencies\n   * @returns {void}\n   */\n\n\n  updateHash(hash) {\n    hash.update(\"dll module\");\n    hash.update(this.name || \"\");\n    super.updateHash(hash);\n  }\n\n}\n\nmodule.exports = DllModule;","map":null,"metadata":{},"sourceType":"script"}