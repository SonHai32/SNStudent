{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n\nclass SingleEntryPlugin {\n  /**\n   * An entry plugin which will handle\n   * creation of the SingleEntryDependency\n   *\n   * @param {string} context context path\n   * @param {string} entry entry path\n   * @param {string} name entry key name\n   */\n  constructor(context, entry, name) {\n    this.context = context;\n    this.entry = entry;\n    this.name = name;\n  }\n  /**\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"SingleEntryPlugin\", (compilation, {\n      normalModuleFactory\n    }) => {\n      compilation.dependencyFactories.set(SingleEntryDependency, normalModuleFactory);\n    });\n    compiler.hooks.make.tapAsync(\"SingleEntryPlugin\", (compilation, callback) => {\n      const entry = this.entry,\n            name = this.name,\n            context = this.context;\n      const dep = SingleEntryPlugin.createDependency(entry, name);\n      compilation.addEntry(context, dep, name, callback);\n    });\n  }\n  /**\n   * @param {string} entry entry request\n   * @param {string} name entry name\n   * @returns {SingleEntryDependency} the dependency\n   */\n\n\n  static createDependency(entry, name) {\n    const dep = new SingleEntryDependency(entry);\n    dep.loc = {\n      name\n    };\n    return dep;\n  }\n\n}\n\nmodule.exports = SingleEntryPlugin;","map":null,"metadata":{},"sourceType":"script"}