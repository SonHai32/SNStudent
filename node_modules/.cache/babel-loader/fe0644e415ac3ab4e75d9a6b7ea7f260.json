{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/web-dev/React/SNStudent/src/components/NewsFeeds/FileModal.js\";\nimport React from 'react';\nimport { Modal, Input, Button, Icon, Image } from 'semantic-ui-react';\n\nclass FileModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      file: null,\n      authorized: ['image/jpeg', 'image/png', 'image/webp'],\n      files: []\n    };\n\n    this.addFile = event => {\n      let loadFile = [];\n      const file = event.target.files[0];\n      const reader = new FileReader();\n      const fileStateToProp = this.props;\n\n      reader.onload = event => {\n        loadFile.push({\n          file: file,\n          url: event.target.result\n        });\n        console.log(loadFile);\n      };\n\n      reader.readAsDataURL(file); // if(file){\n      //     this.setState({file})\n      // }\n    };\n\n    this.sendFile = () => {\n      const files = this.state.files;\n      const _this$props = this.props,\n            uploadFile = _this$props.uploadFile,\n            closeModal = _this$props.closeModal;\n\n      if (files.length > 0) {\n        files.forEach(val => {\n          if (this.isAuthorized(val.file.type)) {\n            const metadata = {\n              contentType: val.file.type\n            };\n            uploadFile(val.file, metadata);\n          }\n        });\n        closeModal();\n        this.clearFile();\n      } // if(file){\n      //     if(this.isAuthorized(file.type)){\n      //         //send File\n      //         const metadata = {contentType: file.type}\n      //         uploadFile(file, metadata);\n      //         closeModal();\n      //         this.clearFile();\n      //     }\n      // }\n\n    };\n\n    this.clearFile = () => {\n      this.setState({\n        files: []\n      });\n    };\n\n    this.isAuthorized = fileType => this.state.authorized.includes(fileType);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          fileModal = _this$props2.fileModal,\n          closeModal = _this$props2.closeModal;\n    return React.createElement(Modal, {\n      basic: true,\n      open: fileModal,\n      onClose: closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Select an image file\"), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Input, {\n      fluid: true,\n      label: \"File types: jpg, png\",\n      name: \"file\",\n      type: \"file\",\n      onChange: this.addFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Button.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Button, {\n      negative: true,\n      inverted: true,\n      onClick: closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"remove\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), \" Cancel\"), React.createElement(Button.Or, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.sendFile,\n      inverted: true,\n      positive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"checkmark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), \"Upload\"))));\n  }\n\n}\n\nexport default FileModal;","map":{"version":3,"sources":["/home/hari/Desktop/web-dev/React/SNStudent/src/components/NewsFeeds/FileModal.js"],"names":["React","Modal","Input","Button","Icon","Image","FileModal","Component","state","file","authorized","files","addFile","event","loadFile","target","reader","FileReader","fileStateToProp","props","onload","push","url","result","console","log","readAsDataURL","sendFile","uploadFile","closeModal","length","forEach","val","isAuthorized","type","metadata","contentType","clearFile","setState","fileType","includes","render","fileModal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAoCC,KAApC,QAAiD,mBAAjD;;AAEA,MAAMC,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,IAAI,EAAE,IADF;AAEJC,MAAAA,UAAU,EAAE,CAAC,YAAD,EAAe,WAAf,EAA4B,YAA5B,CAFR;AAGJC,MAAAA,KAAK,EAAE;AAHH,KAD2B;;AAAA,SASnCC,OATmC,GASzBC,KAAK,IAAG;AAEd,UAAIC,QAAQ,GAAE,EAAd;AACA,YAAML,IAAI,GAAGI,KAAK,CAACE,MAAN,CAAaJ,KAAb,CAAmB,CAAnB,CAAb;AACA,YAAMK,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACA,YAAMC,eAAe,GAAG,KAAKC,KAA7B;;AACAH,MAAAA,MAAM,CAACI,MAAP,GAAgBP,KAAK,IAAG;AACpBC,QAAAA,QAAQ,CAACO,IAAT,CAAc;AAACZ,UAAAA,IAAI,EAAEA,IAAP;AAAaa,UAAAA,GAAG,EAAET,KAAK,CAACE,MAAN,CAAaQ;AAA/B,SAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AAEH,OAJD;;AAKAE,MAAAA,MAAM,CAACU,aAAP,CAAqBjB,IAArB,EAXc,CAiBd;AACA;AACA;AACH,KA7BkC;;AAAA,SA+BnCkB,QA/BmC,GA+BxB,MAAK;AAAA,YACLhB,KADK,GACI,KAAKH,KADT,CACLG,KADK;AAAA,0BAEqB,KAAKQ,KAF1B;AAAA,YAELS,UAFK,eAELA,UAFK;AAAA,YAEOC,UAFP,eAEOA,UAFP;;AAIZ,UAAGlB,KAAK,CAACmB,MAAN,GAAe,CAAlB,EAAoB;AAChBnB,QAAAA,KAAK,CAACoB,OAAN,CAAcC,GAAG,IAAG;AAChB,cAAG,KAAKC,YAAL,CAAkBD,GAAG,CAACvB,IAAJ,CAASyB,IAA3B,CAAH,EAAoC;AAChC,kBAAMC,QAAQ,GAAG;AAACC,cAAAA,WAAW,EAAEJ,GAAG,CAACvB,IAAJ,CAASyB;AAAvB,aAAjB;AACAN,YAAAA,UAAU,CAACI,GAAG,CAACvB,IAAL,EAAW0B,QAAX,CAAV;AACH;AACJ,SALD;AAMAN,QAAAA,UAAU;AACV,aAAKQ,SAAL;AACH,OAbW,CAeZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEH,KAxDkC;;AAAA,SA0DnCA,SA1DmC,GA0DvB,MAAM;AACd,WAAKC,QAAL,CAAc;AAAC3B,QAAAA,KAAK,EAAE;AAAR,OAAd;AACH,KA5DkC;;AAAA,SA8DnCsB,YA9DmC,GA8DpBM,QAAQ,IAAI,KAAK/B,KAAL,CAAWE,UAAX,CAAsB8B,QAAtB,CAA+BD,QAA/B,CA9DQ;AAAA;;AAgEnCE,EAAAA,MAAM,GAAE;AAAA,yBAE4B,KAAKtB,KAFjC;AAAA,UAEGuB,SAFH,gBAEGA,SAFH;AAAA,UAEcb,UAFd,gBAEcA,UAFd;AAKL,WACK,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAEa,SAAnB;AAA8B,MAAA,OAAO,EAAEb,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAII,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAEI,MAAA,KAAK,MAFT;AAGI,MAAA,KAAK,EAAC,sBAHV;AAII,MAAA,IAAI,EAAC,MAJT;AAKI,MAAA,IAAI,EAAC,MALT;AAMI,MAAA,QAAQ,EAAE,KAAKjB,OANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAcI,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,QAAQ,MAAzB;AAA0B,MAAA,OAAO,EAAEiB,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,YADJ,EAII,oBAAC,MAAD,CAAQ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKF,QAAtB;AAAgC,MAAA,QAAQ,MAAxC;AAAyC,MAAA,QAAQ,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,WALJ,CAFJ,CAdJ,CADL;AA+BF;;AApGkC;;AAuGvC,eAAerB,SAAf","sourcesContent":["import React from 'react'\nimport { Modal, Input, Button, Icon,Image } from 'semantic-ui-react';\n\nclass FileModal extends React.Component{\n    state = {\n        file: null,\n        authorized: ['image/jpeg', 'image/png', 'image/webp'],\n        files: [],\n        \n    }\n\n   \n    addFile = event =>{\n\n        let loadFile =[]\n        const file = event.target.files[0];\n        const reader = new FileReader();\n        const fileStateToProp = this.props\n        reader.onload = event =>{\n            loadFile.push({file: file, url: event.target.result})\n            console.log(loadFile)\n            \n        }\n        reader.readAsDataURL(file)\n    \n        \n       \n       \n        \n        // if(file){\n        //     this.setState({file})\n        // }\n    }\n\n    sendFile = () =>{\n        const {files} = this.state;\n        const {uploadFile, closeModal} = this.props\n\n        if(files.length > 0){\n            files.forEach(val =>{\n                if(this.isAuthorized(val.file.type)){\n                    const metadata = {contentType: val.file.type}\n                    uploadFile(val.file, metadata);\n                }\n            })\n            closeModal();\n            this.clearFile();\n        }\n\n        // if(file){\n        //     if(this.isAuthorized(file.type)){\n        //         //send File\n        //         const metadata = {contentType: file.type}\n        //         uploadFile(file, metadata);\n        //         closeModal();\n        //         this.clearFile();\n        //     }\n        // }\n\n    }\n\n    clearFile = () => {\n        this.setState({files: []})\n    }\n\n    isAuthorized = fileType => this.state.authorized.includes(fileType);\n\n    render(){\n\n        const {fileModal, closeModal} = this.props;\n     \n\n       return(\n            <Modal basic open={fileModal} onClose={closeModal}>\n                <Modal.Header>\n                    Select an image file\n                </Modal.Header>\n                <Modal.Content>\n                    <Input \n\n                        fluid\n                        label='File types: jpg, png'\n                        name='file'\n                        type='file'\n                        onChange={this.addFile}\n                    />\n                </Modal.Content>\n                <Modal.Actions>\n       \n                    <Button.Group>\n                        <Button negative inverted onClick={closeModal}>\n                            <Icon name='remove' /> Cancel\n                        </Button>\n                        <Button.Or />\n                        <Button onClick={this.sendFile} inverted positive>\n                            <Icon name='checkmark' />Upload\n                        </Button>\n                    </Button.Group>\n                  \n                    \n                </Modal.Actions>\n            </Modal>\n       );\n    }\n}\n\nexport default FileModal"]},"metadata":{},"sourceType":"module"}