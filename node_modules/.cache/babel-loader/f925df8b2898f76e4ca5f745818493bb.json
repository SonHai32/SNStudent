{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nmodule.exports = function forEachBail(array, iterator, callback) {\n  if (array.length === 0) return callback();\n  let currentPos = array.length;\n  let currentResult;\n  let done = [];\n\n  for (let i = 0; i < array.length; i++) {\n    const itCb = createIteratorCallback(i);\n    iterator(array[i], itCb);\n    if (currentPos === 0) break;\n  }\n\n  function createIteratorCallback(i) {\n    return (...args) => {\n      // eslint-disable-line\n      if (i >= currentPos) return; // ignore\n\n      done.push(i);\n\n      if (args.length > 0) {\n        currentPos = i + 1;\n        done = done.filter(item => {\n          return item <= i;\n        });\n        currentResult = args;\n      }\n\n      if (done.length === currentPos) {\n        callback.apply(null, currentResult);\n        currentPos = 0;\n      }\n    };\n  }\n};\n\nmodule.exports.withIndex = function forEachBailWithIndex(array, iterator, callback) {\n  if (array.length === 0) return callback();\n  let currentPos = array.length;\n  let currentResult;\n  let done = [];\n\n  for (let i = 0; i < array.length; i++) {\n    const itCb = createIteratorCallback(i);\n    iterator(array[i], i, itCb);\n    if (currentPos === 0) break;\n  }\n\n  function createIteratorCallback(i) {\n    return (...args) => {\n      // eslint-disable-line\n      if (i >= currentPos) return; // ignore\n\n      done.push(i);\n\n      if (args.length > 0) {\n        currentPos = i + 1;\n        done = done.filter(item => {\n          return item <= i;\n        });\n        currentResult = args;\n      }\n\n      if (done.length === currentPos) {\n        callback.apply(null, currentResult);\n        currentPos = 0;\n      }\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"script"}