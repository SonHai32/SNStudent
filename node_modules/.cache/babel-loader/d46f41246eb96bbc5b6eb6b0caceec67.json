{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n\t*/\n\"use strict\";\n\nconst UnsupportedWebAssemblyFeatureError = require(\"./UnsupportedWebAssemblyFeatureError\");\n\nclass WasmFinalizeExportsPlugin {\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"WasmFinalizeExportsPlugin\", compilation => {\n      compilation.hooks.finishModules.tap(\"WasmFinalizeExportsPlugin\", modules => {\n        for (const module of modules) {\n          // 1. if a WebAssembly module\n          if (module.type.startsWith(\"webassembly\") === true) {\n            const jsIncompatibleExports = module.buildMeta.jsIncompatibleExports;\n\n            if (jsIncompatibleExports === undefined) {\n              continue;\n            }\n\n            for (const reason of module.reasons) {\n              // 2. is referenced by a non-WebAssembly module\n              if (reason.module.type.startsWith(\"webassembly\") === false) {\n                const ref = compilation.getDependencyReference(reason.module, reason.dependency);\n                if (!ref) continue;\n                const importedNames = ref.importedNames;\n\n                if (Array.isArray(importedNames)) {\n                  importedNames.forEach(name => {\n                    // 3. and uses a func with an incompatible JS signature\n                    if (Object.prototype.hasOwnProperty.call(jsIncompatibleExports, name)) {\n                      // 4. error\n\n                      /** @type {any} */\n                      const error = new UnsupportedWebAssemblyFeatureError(\"Export \\\"\".concat(name, \"\\\" with \").concat(jsIncompatibleExports[name], \" can only be used for direct wasm to wasm dependencies\"));\n                      error.module = module;\n                      error.origin = reason.module;\n                      error.originLoc = reason.dependency.loc;\n                      error.dependencies = [reason.dependency];\n                      compilation.errors.push(error);\n                    }\n                  });\n                }\n              }\n            }\n          }\n        }\n      });\n    });\n  }\n\n}\n\nmodule.exports = WasmFinalizeExportsPlugin;","map":null,"metadata":{},"sourceType":"script"}