{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/web-dev/React/cstudy/src/components/NewsFeeds/NewsFeeds.js\";\nimport React from 'react';\nimport { Segment, Header, Icon, Feed, Image, Divider, Form, TextArea, Button, List, Responsive, Dropdown, Container } from 'semantic-ui-react';\nimport uuid from 'uuidv4';\nimport firebase from '../../firebase';\nimport FileModal from './FileModal';\nimport ImageModal from './ImageModal';\nimport moment from 'moment';\nimport hash from 'js-hash-code';\n\nclass NewsFeeds extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      like: false,\n      user: this.props.currentUser,\n      post: '',\n      fileModal: false,\n      imageModalStatus: false,\n      imageModalURL: '',\n      uploadTask: null,\n      uploadStatus: '',\n      percentUploaded: 0,\n      imagePost: [],\n      postCreate: [],\n      postFromDatabase: [],\n      storeRef: firebase.storage().ref(),\n      databaseRef: firebase.database().ref('posts')\n    };\n\n    this.addPostListener = () => {\n      const ref = firebase.database().ref('posts');\n      const postLoaded = [];\n      ref.on('child_added', snap => {\n        ref.child(snap.key).on('child_added', snap => postLoaded.push(snap.val()));\n        this.setState({\n          postFromDatabase: postLoaded.sort((a, b) => {\n            return a - b;\n          })\n        });\n      });\n    };\n\n    this.handleLikeClicked = event => {\n      event.preventDefault();\n      this.setState({\n        like: !this.state.like\n      });\n    };\n\n    this.handlePostChange = (e, {\n      value\n    }) => {\n      e.preventDefault();\n      this.setState({\n        post: value\n      });\n    };\n\n    this.openModal = () => {\n      this.setState({\n        fileModal: true\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        fileModal: false\n      });\n    };\n\n    this.openImageModal = event => {\n      this.setState({\n        imageModalStatus: true,\n        imageModalURL: event.target.name\n      });\n    };\n\n    this.closeImageModal = () => {\n      this.setState({\n        imageModalStatus: false,\n        imageModalURL: ''\n      });\n    };\n\n    this.uploadFile = (file, metadata) => {\n      const filePath = this.state.user.uid + '/media/image/' + uuid() + '.jpg';\n      this.setState({\n        uploadStatus: 'uploading',\n        uploadTask: this.state.storeRef.child(filePath).put(file, metadata)\n      }, () => {\n        this.state.uploadTask.on('state_changed', snap => {\n          const percentUploaded = Math.round(snap.bytesTransferred / snap.totalBytes * 100);\n          this.setState({\n            percentUploaded\n          });\n          this.state.uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n            const image = {\n              downloadURL: downloadURL,\n              imagePath: this.state.uploadTask.location_.path\n            };\n            this.setState({\n              imagePost: this.state.imagePost.concat(image)\n            });\n          }).catch(err => console.log(err));\n        });\n      });\n    };\n\n    this.savePost = event => {\n      event.preventDefault();\n      const postCreate = {\n        createByUid: this.state.user.uid,\n        createByName: this.state.user.displayName,\n        avatar: this.state.user.photoURL,\n        timestamp: Date.now(),\n        postImages: Array().concat(this.state.imagePost),\n        postText: this.state.post\n      };\n      const postChild = this.state.user.uid + uuid() + '/post';\n      this.state.databaseRef.child(postChild).set(postCreate).then(() => this.setState({\n        post: '',\n        imagePost: []\n      }));\n    };\n\n    this.displayImagePost = ({\n      imagePost\n    }) => imagePost.length > 0 ? React.createElement(Segment, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(List, {\n      horizontal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, imagePost.map((val, key) => React.createElement(List.Item, {\n      key: key + uuid,\n      style: {\n        marginRight: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Image, {\n      rounded: true,\n      size: \"small\",\n      key: val.downloadURL,\n      src: val.downloadURL,\n      label: {\n        as: 'a',\n        name: key,\n        corner: 'right',\n        icon: 'remove',\n        size: 'mini',\n        color: 'red',\n        onClick: this.removeImagePost\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))), React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      style: {\n        cursor: 'pointer',\n        boder: 'solid 2px '\n      },\n      color: \"black\",\n      inverted: true,\n      name: \"add\",\n      size: \"big\",\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })))) : '';\n\n    this.deleteImageFromStorge = imagePath => {\n      if (imagePath) {\n        this.state.storeRef.child(imagePath).delete().then(() => console.log(\"deleted\")).catch(err => console.log(err));\n      }\n    };\n\n    this.removeImagePost = event => {\n      event.preventDefault();\n      let removeIndex = event.target.name;\n      this.deleteImageFromStorge(this.state.imagePost[removeIndex].imagePath);\n      const newImagePost = this.state.imagePost.filter((value, index, arr) => {\n        return index != removeIndex;\n      });\n      this.setState({\n        imagePost: newImagePost\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.addPostListener();\n  }\n\n  render() {\n    const _this$state = this.state,\n          user = _this$state.user,\n          post = _this$state.post,\n          postFromDatabase = _this$state.postFromDatabase;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(FileModal, {\n      fileModal: this.state.fileModal,\n      uploadFile: this.uploadFile,\n      closeModal: this.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Header.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Create Post \", React.createElement(Icon, {\n      name: \"edit outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))), this.displayImagePost(this.state), React.createElement(Form, {\n      style: {\n        marginTop: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Image, {\n      avatar: true,\n      src: user.photoURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      placeholder: \"What do you thing ? \",\n      value: post,\n      onChange: this.handlePostChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }))), React.createElement(Responsive, {\n      minWidth: 1800,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Button.Group, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Button, {\n      circular: true,\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"photo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), \" Photo/Video\"), React.createElement(Button, {\n      circular: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"user plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), \" Tag Friends\"), React.createElement(Button, {\n      circular: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"music\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), \" Music\"), React.createElement(Button, {\n      circular: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"smile outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), \" Feeling\"), React.createElement(Button, {\n      circular: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"location arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), \" Check in\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), \" More\"))), React.createElement(Responsive, {\n      maxWidth: 1790,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Button.Group, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Button, {\n      circular: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"photo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), \" Photo/Video\"), React.createElement(Button, {\n      circular: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"user plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), \" Tag Friends\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), \" More\"))), this.state.post.length > 0 || this.state.imagePost.length > 0 ? React.createElement(Button, {\n      onClick: this.savePost,\n      fluid: true,\n      style: {\n        marginTop: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Post\") : '', console.log(postFromDatabase.sort('timestamp'))), postFromDatabase.length > 0 ? postFromDatabase.map((val, key) => React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Feed, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Feed.Event, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(Feed.Label, {\n      image: val.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(Feed.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(Feed.Summary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(Feed.User, {\n      content: val.createByName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), React.createElement(Feed.Date, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, moment(val.timestamp).fromNow(), React.createElement(Dropdown, {\n      icon: \"setting\",\n      basic: true,\n      floating: true,\n      inline: true,\n      clearable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    })))))), React.createElement(Feed, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(Feed.Event, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(Feed.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(Container, {\n      fluid: true,\n      text: true,\n      textAlign: \"justified\",\n      content: val.postText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }), val.postImages ? val.postImages.map((value, key) => React.createElement(List, {\n      key: val.createByUid + val.timestamp + uuid() + hash(value.downloadURL),\n      horizontal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(List.Item, {\n      key: 'list' + val.createByUid + val.timestamp + uuid() + hash(value.downloadURL),\n      as: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(Image, {\n      centered: true,\n      fluid: true,\n      key: 'image' + val.createByUid + val.timestamp + uuid() + hash(value.downloadURL),\n      src: value.downloadURL,\n      name: value.downloadURL,\n      onClick: this.openImageModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }), React.createElement(ImageModal, {\n      imageModal: this.state.imageModalStatus,\n      closeModal: this.closeImageModal,\n      imageURL: this.state.imageModalURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    })))) : '')), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }), React.createElement(Button.Group, {\n      fluid: true,\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(Button, {\n      basic: true,\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"thumbs up\",\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }), \" Like\"), React.createElement(Button, {\n      basic: true,\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"comment outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }), \" Comment\"), React.createElement(Button, {\n      basic: true,\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"share\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }), \" Share\"))))) : '');\n  }\n\n}\n\nexport default NewsFeeds;","map":{"version":3,"sources":["/home/hari/Desktop/web-dev/React/cstudy/src/components/NewsFeeds/NewsFeeds.js"],"names":["React","Segment","Header","Icon","Feed","Image","Divider","Form","TextArea","Button","List","Responsive","Dropdown","Container","uuid","firebase","FileModal","ImageModal","moment","hash","NewsFeeds","Component","state","like","user","props","currentUser","post","fileModal","imageModalStatus","imageModalURL","uploadTask","uploadStatus","percentUploaded","imagePost","postCreate","postFromDatabase","storeRef","storage","ref","databaseRef","database","addPostListener","postLoaded","on","snap","child","key","push","val","setState","sort","a","b","handleLikeClicked","event","preventDefault","handlePostChange","e","value","openModal","closeModal","openImageModal","target","name","closeImageModal","uploadFile","file","metadata","filePath","uid","put","Math","round","bytesTransferred","totalBytes","snapshot","getDownloadURL","then","downloadURL","image","imagePath","location_","path","concat","catch","err","console","log","savePost","createByUid","createByName","displayName","avatar","photoURL","timestamp","Date","now","postImages","Array","postText","postChild","set","displayImagePost","length","map","marginRight","as","corner","icon","size","color","onClick","removeImagePost","cursor","boder","deleteImageFromStorge","delete","removeIndex","newImagePost","filter","index","arr","componentDidMount","render","marginTop","fromNow"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Segment,Header,Icon, Feed,Image, Divider, Form, TextArea, Button, List, Responsive, Dropdown, Container} from 'semantic-ui-react'\nimport uuid from 'uuidv4'\nimport firebase from '../../firebase'\nimport FileModal from './FileModal'\nimport ImageModal from './ImageModal'\nimport moment from 'moment'\nimport hash from 'js-hash-code'\nclass NewsFeeds extends React.Component{\n\n    state ={\n      like: false,\n      user: this.props.currentUser,\n      post: '',\n      fileModal: false,\n      imageModalStatus: false,\n      imageModalURL: '',\n      uploadTask: null,\n      uploadStatus : '',\n      percentUploaded : 0,\n      imagePost: [],\n      postCreate: [],\n      postFromDatabase: [],\n      storeRef: firebase.storage().ref(),\n      databaseRef: firebase.database().ref('posts')\n     \n    }\n\n    componentDidMount(){\n      this.addPostListener()\n    }\n\n    addPostListener = () =>{\n\n      const ref = firebase.database().ref('posts')\n      const postLoaded = []\n      ref.on('child_added',snap =>{\n        ref.child(snap.key).on('child_added',snap => postLoaded.push(snap.val()));\n        this.setState({postFromDatabase: postLoaded.sort((a,b) =>{return a-b})})\n   \n        \n      })\n   \n      \n  \n    }\n\n\n    handleLikeClicked = event =>{\n        event.preventDefault();\n        this.setState({like: !this.state.like })\n    }\n    \n    handlePostChange = (e, { value}) =>{\n      e.preventDefault();\n      this.setState({post: value})\n    }\n    \n    openModal = () =>{\n      this.setState({fileModal: true})\n    }\n\n    closeModal = () =>{\n\n      this.setState({fileModal: false})\n    }\n\n    openImageModal = event =>{\n     \n      this.setState({imageModalStatus: true, imageModalURL: event.target.name})\n    }\n\n    closeImageModal = () =>{\n      this.setState({imageModalStatus: false, imageModalURL:''})\n\n    }\n\n    uploadFile = (file, metadata) =>{\n      const filePath = this.state.user.uid+'/media/image/'+uuid()+'.jpg'\n\n      this.setState({\n        uploadStatus : 'uploading',\n        uploadTask: this.state.storeRef.child(filePath).put(file,metadata)\n      \n        },\n          () => {\n            this.state.uploadTask.on('state_changed', snap =>{\n              const percentUploaded = Math.round((snap.bytesTransferred / snap.totalBytes)*100)\n              this.setState({percentUploaded});\n            \n            \n            this.state.uploadTask.snapshot.ref\n            .getDownloadURL()\n            .then(downloadURL => {\n              const image = {downloadURL: downloadURL, imagePath: this.state.uploadTask.location_.path}\n              this.setState({imagePost: this.state.imagePost.concat(image)})\n            \n               })\n              .catch(err=>console.log(err))\n          \n            })\n          }\n        )\n      }\n\n      savePost = event =>{\n        event.preventDefault();\n        const postCreate ={\n          createByUid: this.state.user.uid,\n          createByName: this.state.user.displayName,\n          avatar: this.state.user.photoURL ,\n          timestamp: Date.now(),\n          postImages: Array().concat(this.state.imagePost),\n          postText: this.state.post\n        }\n        const postChild = this.state.user.uid+uuid()+'/post';\n        this.state.databaseRef.child(postChild).set(postCreate).then(()=>this.setState({post: '', imagePost: []}))\n        \n      }\n\n      \n      displayImagePost = ({imagePost}) =>(\n        imagePost.length > 0 ? \n        <Segment size='large' >\n          <List horizontal>\n          \n              {imagePost.map((val,key) => (\n                <List.Item key={key+uuid} style={{marginRight: '15px'}}> \n                  <Image rounded size='small' key={val.downloadURL} src={val.downloadURL} label={{as: 'a' ,name: key, corner:'right', icon:'remove',size: 'mini',color:'red',onClick: this.removeImagePost}} /> \n                </List.Item> ) )}\n                \n            <List.Item>\n              <Icon style={{cursor: 'pointer', boder: 'solid 2px '}} color='black' inverted name='add' size='big' onClick={this.openModal} />\n            </List.Item>\n          </List>\n          \n        </Segment> : ''\n      )\n      \n      deleteImageFromStorge = imagePath =>{\n          if(imagePath){\n            this.state.storeRef.child(imagePath).delete().then(() => console.log(\"deleted\")).catch(err=> console.log(err))\n          }\n          \n      }\n\n      removeImagePost = event =>{\n        event.preventDefault();\n        let removeIndex = event.target.name;\n        \n        this.deleteImageFromStorge(this.state.imagePost[removeIndex].imagePath)\n\n        const newImagePost = this.state.imagePost.filter((value,index,arr) =>{\n          return index != removeIndex\n        })\n        \n\n        this.setState({imagePost : newImagePost})\n        \n        \n      }\n      \n    \n\n    render(){\n        const {user,post,postFromDatabase} = this.state;\n        return(\n      <React.Fragment>\n        \n        <FileModal fileModal={this.state.fileModal}\n                   uploadFile = {this.uploadFile}\n                   closeModal = {this.closeModal}\n        />\n        \n    <Segment stacked>\n      \n        <Header as='h3' block>\n        \n          <Header.Content>Create Post <Icon name='edit outline' /></Header.Content>\n        \n        </Header>\n        \n          {this.displayImagePost(this.state)}\n        \n\n    \n\n        <Form style={{marginTop: '5px'}}>\n         <Form.Group >\n           <Image avatar src={user.photoURL}/>\n           <TextArea placeholder='What do you thing ? ' value={post} onChange={this.handlePostChange} >\n          \n          </TextArea>\n         </Form.Group>\n        \n        </Form>\n       \n      <Responsive minWidth={1800}>\n      <Button.Group fluid >\n        \n      <Button circular onClick={this.openModal}  >\n              <Icon name='photo' /> Photo/Video\n            </Button>\n            <Button circular>\n              <Icon name='user plus' /> Tag Friends\n            </Button>\n         \n            <Button circular>\n              <Icon name='music' /> Music\n            </Button>\n            <Button circular>\n              <Icon name='smile outline' /> Feeling\n            </Button>\n            <Button circular>\n              <Icon name='location arrow' /> Check in\n            </Button>\n            <Button>\n              <Icon name='list' /> More\n             </Button>\n      </Button.Group>\n      </Responsive>\n      <Responsive maxWidth={1790} >\n      <Button.Group fluid >\n      <Button circular  >\n              <Icon name='photo' /> Photo/Video\n            </Button>\n            <Button circular>\n              <Icon name='user plus' /> Tag Friends\n            </Button>\n         \n            \n            <Button>\n              <Icon name='list' /> More\n             </Button>\n      </Button.Group>\n      </Responsive>\n      {this.state.post.length > 0 || this.state.imagePost.length >0 ? <Button  onClick={this.savePost} fluid style={{marginTop: '20px'}}>\n        Post\n      </Button> : ''}\n         {console.log(postFromDatabase.sort('timestamp'))}\n    </Segment>\n    \n      \n    \n      {postFromDatabase.length > 0 ? (\n        postFromDatabase.map((val, key) =>(\n          \n          <Segment >\n         \n          <Feed size='large'>\n              <Feed.Event>\n              <Feed.Label image ={val.avatar} />\n              <Feed.Content>\n                <Feed.Summary> \n                <Feed.User content={val.createByName} />\n                <Feed.Date>\n                  {moment(val.timestamp).fromNow()}\n                  <Dropdown  \n                    icon='setting'\n                    basic\n                    floating\n                    inline\n                    clearable\n                  \n                    \n                  />\n                  \n                </Feed.Date>\n                </Feed.Summary>\n\n                \n                 \n           \n              </Feed.Content>\n              \n              </Feed.Event>\n            \n          </Feed>\n          \n          <Feed size='large'  >\n          \n          <Feed.Event>\n            <Feed.Content >\n              <Container fluid text textAlign='justified' content={val.postText}>\n\n              </Container>\n              {val.postImages ? (\n                val.postImages.map((value,key) =>(        \n                    <List key={val.createByUid+val.timestamp+uuid()+hash(value.downloadURL)} horizontal  >\n                      <List.Item key={'list'+val.createByUid+val.timestamp+uuid()+hash(value.downloadURL)}   as='a'  >\n                       \n                       \n                          <Image centered fluid key={'image'+val.createByUid+val.timestamp+uuid()+hash(value.downloadURL)} src={value.downloadURL} name={value.downloadURL} onClick={this.openImageModal} />\n                          {/* <img style={{padding: '10px 10px'}} src={value.downloadURL} name={value.downloadURL} onClick={this.openImageModal} />\n                     */}\n                        <ImageModal \n                         \n                          imageModal={this.state.imageModalStatus} \n                          closeModal={this.closeImageModal}\n                          imageURL={this.state.imageModalURL} />\n                      </List.Item>\n                    </List>\n                    \n                \n                ))\n              ) : ''}\n               \n             \n            </Feed.Content>\n            \n          </Feed.Event>\n          <Divider />\n          \n            <Button.Group fluid  color='blue' >\n            <Button basic size='medium' >\n                <Icon name='thumbs up' color='blue' /> Like\n              </Button>\n              <Button basic size='medium' >\n                <Icon name='comment outline' /> Comment\n              </Button>\n              <Button  basic size='medium' >\n                <Icon name='share' /> Share \n              </Button>\n            </Button.Group>\n      \n         \n        \n      </Feed>\n      </Segment>\n        ))\n      ) :  ''}\n\n     \n\n \n\n      \n  </React.Fragment>\n \n           \n            \n        )\n    }\n\n}\n\nexport default NewsFeeds"]},"metadata":{},"sourceType":"module"}