{"ast":null,"code":"'use strict';\n\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    type: 'string',\n    inline: function (it, keyword, schema) {\n      return getRegExp() + '.test(data' + (it.dataLevel || '') + ')';\n\n      function getRegExp() {\n        try {\n          if (typeof schema == 'object') return new RegExp(schema.pattern, schema.flags);\n          var rx = schema.match(/^\\/(.*)\\/([gimuy]*)$/);\n          if (rx) return new RegExp(rx[1], rx[2]);\n          throw new Error('cannot parse string into RegExp');\n        } catch (e) {\n          console.error('regular expression', schema, 'is invalid');\n          throw e;\n        }\n      }\n    },\n    metaSchema: {\n      type: ['string', 'object'],\n      properties: {\n        pattern: {\n          type: 'string'\n        },\n        flags: {\n          type: 'string'\n        }\n      },\n      required: ['pattern'],\n      additionalProperties: false\n    }\n  };\n  ajv.addKeyword('regexp', defFunc.definition);\n  return ajv;\n};","map":null,"metadata":{},"sourceType":"script"}