{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst loaderFlag = \"LOADER_EXECUTION\";\nconst webpackOptionsFlag = \"WEBPACK_OPTIONS\";\n\nexports.cutOffByFlag = (stack, flag) => {\n  stack = stack.split(\"\\n\");\n\n  for (let i = 0; i < stack.length; i++) {\n    if (stack[i].includes(flag)) {\n      stack.length = i;\n    }\n  }\n\n  return stack.join(\"\\n\");\n};\n\nexports.cutOffLoaderExecution = stack => exports.cutOffByFlag(stack, loaderFlag);\n\nexports.cutOffWebpackOptions = stack => exports.cutOffByFlag(stack, webpackOptionsFlag);\n\nexports.cutOffMultilineMessage = (stack, message) => {\n  stack = stack.split(\"\\n\");\n  message = message.split(\"\\n\");\n  return stack.reduce((acc, line, idx) => line.includes(message[idx]) ? acc : acc.concat(line), []).join(\"\\n\");\n};\n\nexports.cutOffMessage = (stack, message) => {\n  const nextLine = stack.indexOf(\"\\n\");\n\n  if (nextLine === -1) {\n    return stack === message ? \"\" : stack;\n  } else {\n    const firstLine = stack.substr(0, nextLine);\n    return firstLine === message ? stack.substr(nextLine + 1) : stack;\n  }\n};\n\nexports.cleanUp = (stack, message) => {\n  stack = exports.cutOffLoaderExecution(stack);\n  stack = exports.cutOffMessage(stack, message);\n  return stack;\n};\n\nexports.cleanUpWebpackOptions = (stack, message) => {\n  stack = exports.cutOffWebpackOptions(stack);\n  stack = exports.cutOffMultilineMessage(stack, message);\n  return stack;\n};","map":null,"metadata":{},"sourceType":"script"}