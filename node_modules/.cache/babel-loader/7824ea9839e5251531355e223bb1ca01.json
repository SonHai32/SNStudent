{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\n\"use strict\";\n\nmodule.exports = class FileExistsPlugin {\n  constructor(source, target) {\n    this.source = source;\n    this.target = target;\n  }\n\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    const fs = resolver.fileSystem;\n    resolver.getHook(this.source).tapAsync(\"FileExistsPlugin\", (request, resolveContext, callback) => {\n      const file = request.path;\n      fs.stat(file, (err, stat) => {\n        if (err || !stat) {\n          if (resolveContext.missing) resolveContext.missing.add(file);\n          if (resolveContext.log) resolveContext.log(file + \" doesn't exist\");\n          return callback();\n        }\n\n        if (!stat.isFile()) {\n          if (resolveContext.missing) resolveContext.missing.add(file);\n          if (resolveContext.log) resolveContext.log(file + \" is not a file\");\n          return callback();\n        }\n\n        resolver.doResolve(target, request, \"existing file: \" + file, resolveContext, callback);\n      });\n    });\n  }\n\n};","map":null,"metadata":{},"sourceType":"script"}