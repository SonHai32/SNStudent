{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/web-dev/React/cstudy/src/components/auth/register.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, Icon, Header, Segment, Form, Button, Message, Input, Select } from 'semantic-ui-react';\n\nclass Register extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: '',\n      genderOptions: [{\n        key: 'm',\n        value: 'male',\n        text: 'Male'\n      }, {\n        key: 'f',\n        value: 'female',\n        text: 'Female'\n      }, {\n        key: 'o',\n        value: 'other',\n        text: 'Other'\n      }],\n      gender: '',\n      errors: []\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(this.isFormValid());\n      console.log(this.state.errors);\n    };\n\n    this.isPasswordValid = ({\n      password\n    }) => {\n      if (password.length > 6) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.isPasswordConfirmValid = ({\n      password,\n      passwordConfirmation\n    }) => {\n      if (passwordConfirmation === password) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.isFormEmpty = ({\n      email,\n      password,\n      passwordConfirmation\n    }) => {\n      return !email.length || !password.length || !passwordConfirmation.length;\n    };\n\n    this.isFormValid = () => {\n      let error;\n      let errors = [];\n\n      if (this.isFormEmpty(this.state)) {\n        return false;\n      } else if (!this.isPasswordValid(this.state)) {\n        error = {\n          message: 'Password must be 6 charater'\n        };\n        this.setState({\n          errors: errors.concat(error)\n        });\n        return false;\n      } else if (!this.isPasswordConfirmValid(this.state)) {\n        error = {\n          message: 'Password Confirm Invalid'\n        };\n        this.setState({\n          errors: errors.concat(error)\n        });\n        return false;\n      } else {\n        this.setState({\n          errors: []\n        });\n        return true;\n      }\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          passwordConfirmation = _this$state.passwordConfirmation,\n          genderOptions = _this$state.genderOptions,\n          gender = _this$state.gender;\n    return React.createElement(Grid, {\n      verticalAlign: \"middle\",\n      textAlign: \"center\",\n      className: \"register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Header, {\n      color: \"green\",\n      textAlign: \"center\",\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Register for CStudy\"), React.createElement(Form, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      name: \"email\",\n      placeholder: \"Emal Address\",\n      fluid: true,\n      required: true // error={{ content: 'Please enter your first name', pointing: 'below' }}\n      ,\n      size: \"large\",\n      type: \"text\",\n      icon: \"mail\",\n      iconPosition: \"left\",\n      onChange: this.handleChange,\n      value: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      name: \"password\",\n      placeholder: \"Password\",\n      fluid: true,\n      required: true,\n      size: \"large\",\n      type: \"password\",\n      icon: \"key\",\n      iconPosition: \"left\",\n      onChange: this.handleChange,\n      value: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      name: \"passwordConfirmation\",\n      placeholder: \"Password Confirmation\",\n      fluid: true,\n      required: true,\n      size: \"large\",\n      type: \"password\",\n      icon: \"repeat\",\n      iconPosition: \"left\",\n      onChange: this.handleChange,\n      value: passwordConfirmation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      control: Select,\n      placeholder: \"Gender\",\n      options: genderOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), console.log(gender), React.createElement(Button, {\n      size: \"large\",\n      fluid: true,\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"You have an account ? \", React.createElement(Link, {\n      to: \"/Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Login\"))))));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/hari/Desktop/web-dev/React/cstudy/src/components/auth/register.js"],"names":["React","Link","Grid","Icon","Header","Segment","Form","Button","Message","Input","Select","Register","Component","state","email","password","passwordConfirmation","genderOptions","key","value","text","gender","errors","handleChange","event","setState","target","name","console","log","isFormValid","isPasswordValid","length","isPasswordConfirmValid","isFormEmpty","error","message","concat","render","maxWidth"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {Grid,Icon,Header,Segment, Form, Button,Message, Input, Select} from 'semantic-ui-react'\n\nclass Register extends React.Component{\n\n    state={\n        email: '',\n        password:'',\n        passwordConfirmation: '',\n        genderOptions:[\n            {key: 'm', value: 'male', text: 'Male' },\n            {key: 'f', value: 'female', text: 'Female'},\n            {key: 'o', value: 'other', text: 'Other'}\n        ],\n        gender: '',\n        errors: [],\n\n\n    }\n\n    handleChange = event =>{\n        this.setState({[event.target.name]: event.target.value})\n        console.log(this.isFormValid());\n        console.log(this.state.errors)\n        \n\n    }\n\n\n    isPasswordValid = ({password}) =>{\n        if(password.length > 6 ){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    isPasswordConfirmValid = ({password, passwordConfirmation}) =>{\n        if(passwordConfirmation === password){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    isFormEmpty = ({email, password,passwordConfirmation}) =>{\n        return !email.length || !password.length || !passwordConfirmation.length\n    }\n\n\n    isFormValid = () =>{\n        let error;\n        let errors= [];\n\n        if(this.isFormEmpty(this.state)){\n            return false;\n        }else if(!this.isPasswordValid(this.state)){\n            error = {message: 'Password must be 6 charater'};\n            this.setState({errors: errors.concat(error)});\n            return false;\n        }else if(!this.isPasswordConfirmValid(this.state)){\n            error = {message: 'Password Confirm Invalid'};\n            this.setState({errors: errors.concat(error)});\n            return false;\n        }else{\n            this.setState({errors: []});\n            return true;\n\n        }\n    }\n \n\n    render(){\n        const {email, password, passwordConfirmation, genderOptions, gender} = this.state;\n        return(\n        \n            <Grid verticalAlign=\"middle\" textAlign=\"center\" className='register'>\n                <Grid.Column style={{maxWidth: 450}}>\n                    <Header color='green' textAlign='center' as='h2'>\n                        Register for CStudy\n                    </Header>\n\n                    <Form size='large'>\n                        <Segment stacked>\n                            <Form.Input\n                                name='email'\n                                placeholder='Emal Address'\n                                fluid\n                                required\n                                // error={{ content: 'Please enter your first name', pointing: 'below' }}\n                                size='large'\n                                type='text'\n                                icon='mail'\n                                iconPosition='left'\n                                onChange={this.handleChange}\n                                value={email}\n                            />\n                            <Form.Input \n                                name='password'\n                                placeholder='Password'\n                                fluid\n                                required\n                                size='large'\n                                type='password'\n                                icon='key'\n                                iconPosition='left'\n                                onChange={this.handleChange}\n                                value={password}\n                            />\n                            <Form.Input \n                                name=\"passwordConfirmation\"\n                                placeholder=\"Password Confirmation\"\n                                fluid\n                                required\n                                size='large'\n                                type='password'\n                                icon='repeat'\n                                iconPosition='left'\n                                onChange={this.handleChange}\n                                value={passwordConfirmation}\n                            />\n                            <Form.Field control={Select} placeholder='Gender' options={genderOptions} />\n                            {console.log(gender)}\n                            <Button size='large' fluid color='green'>Submit</Button>\n                            <Message>\n                                You have an account ? <Link to='/Login'>Login</Link>\n                            </Message>\n                        </Segment>\n\n                        \n                    </Form>\n\n                </Grid.Column>\n            </Grid>\n        )\n    }\n\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}