{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst HarmonyCompatibilityDependency = require(\"./HarmonyCompatibilityDependency\");\n\nconst HarmonyInitDependency = require(\"./HarmonyInitDependency\");\n\nmodule.exports = class HarmonyDetectionParserPlugin {\n  apply(parser) {\n    parser.hooks.program.tap(\"HarmonyDetectionParserPlugin\", ast => {\n      const isStrictHarmony = parser.state.module.type === \"javascript/esm\";\n      const isHarmony = isStrictHarmony || ast.body.some(statement => statement.type === \"ImportDeclaration\" || statement.type === \"ExportDefaultDeclaration\" || statement.type === \"ExportNamedDeclaration\" || statement.type === \"ExportAllDeclaration\");\n\n      if (isHarmony) {\n        const module = parser.state.module;\n        const compatDep = new HarmonyCompatibilityDependency(module);\n        compatDep.loc = {\n          start: {\n            line: -1,\n            column: 0\n          },\n          end: {\n            line: -1,\n            column: 0\n          },\n          index: -3\n        };\n        module.addDependency(compatDep);\n        const initDep = new HarmonyInitDependency(module);\n        initDep.loc = {\n          start: {\n            line: -1,\n            column: 0\n          },\n          end: {\n            line: -1,\n            column: 0\n          },\n          index: -2\n        };\n        module.addDependency(initDep);\n        parser.state.harmonyParserScope = parser.state.harmonyParserScope || {};\n        parser.scope.isStrict = true;\n        module.buildMeta.exportsType = \"namespace\";\n        module.buildInfo.strict = true;\n        module.buildInfo.exportsArgument = \"__webpack_exports__\";\n\n        if (isStrictHarmony) {\n          module.buildMeta.strictHarmonyModule = true;\n          module.buildInfo.moduleArgument = \"__webpack_module__\";\n        }\n      }\n    });\n\n    const skipInHarmony = () => {\n      const module = parser.state.module;\n\n      if (module && module.buildMeta && module.buildMeta.exportsType) {\n        return true;\n      }\n    };\n\n    const nullInHarmony = () => {\n      const module = parser.state.module;\n\n      if (module && module.buildMeta && module.buildMeta.exportsType) {\n        return null;\n      }\n    };\n\n    const nonHarmonyIdentifiers = [\"define\", \"exports\"];\n\n    for (const identifer of nonHarmonyIdentifiers) {\n      parser.hooks.evaluateTypeof.for(identifer).tap(\"HarmonyDetectionParserPlugin\", nullInHarmony);\n      parser.hooks.typeof.for(identifer).tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n      parser.hooks.evaluate.for(identifer).tap(\"HarmonyDetectionParserPlugin\", nullInHarmony);\n      parser.hooks.expression.for(identifer).tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n      parser.hooks.call.for(identifer).tap(\"HarmonyDetectionParserPlugin\", skipInHarmony);\n    }\n  }\n\n};","map":null,"metadata":{},"sourceType":"script"}