{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\n\nconst ParserHelpers = require(\"./ParserHelpers\");\n\nclass CommonJsStuffPlugin {\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"CommonJsStuffPlugin\", (compilation, {\n      normalModuleFactory\n    }) => {\n      const handler = (parser, parserOptions) => {\n        parser.hooks.expression.for(\"require.main.require\").tap(\"CommonJsStuffPlugin\", ParserHelpers.expressionIsUnsupported(parser, \"require.main.require is not supported by webpack.\"));\n        parser.hooks.expression.for(\"module.parent.require\").tap(\"CommonJsStuffPlugin\", ParserHelpers.expressionIsUnsupported(parser, \"module.parent.require is not supported by webpack.\"));\n        parser.hooks.expression.for(\"require.main\").tap(\"CommonJsStuffPlugin\", ParserHelpers.toConstantDependencyWithWebpackRequire(parser, \"__webpack_require__.c[__webpack_require__.s]\"));\n        parser.hooks.expression.for(\"module.loaded\").tap(\"CommonJsStuffPlugin\", expr => {\n          parser.state.module.buildMeta.moduleConcatenationBailout = \"module.loaded\";\n          return ParserHelpers.toConstantDependency(parser, \"module.l\")(expr);\n        });\n        parser.hooks.expression.for(\"module.id\").tap(\"CommonJsStuffPlugin\", expr => {\n          parser.state.module.buildMeta.moduleConcatenationBailout = \"module.id\";\n          return ParserHelpers.toConstantDependency(parser, \"module.i\")(expr);\n        });\n        parser.hooks.expression.for(\"module.exports\").tap(\"CommonJsStuffPlugin\", () => {\n          const module = parser.state.module;\n          const isHarmony = module.buildMeta && module.buildMeta.exportsType;\n          if (!isHarmony) return true;\n        });\n        parser.hooks.evaluateIdentifier.for(\"module.hot\").tap(\"CommonJsStuffPlugin\", ParserHelpers.evaluateToIdentifier(\"module.hot\", false));\n        parser.hooks.expression.for(\"module\").tap(\"CommonJsStuffPlugin\", () => {\n          const module = parser.state.module;\n          const isHarmony = module.buildMeta && module.buildMeta.exportsType;\n          let moduleJsPath = path.join(__dirname, \"..\", \"buildin\", isHarmony ? \"harmony-module.js\" : \"module.js\");\n\n          if (module.context) {\n            moduleJsPath = path.relative(parser.state.module.context, moduleJsPath);\n\n            if (!/^[A-Z]:/i.test(moduleJsPath)) {\n              moduleJsPath = \"./\".concat(moduleJsPath.replace(/\\\\/g, \"/\"));\n            }\n          }\n\n          return ParserHelpers.addParsedVariableToModule(parser, \"module\", \"require(\".concat(JSON.stringify(moduleJsPath), \")(module)\"));\n        });\n      };\n\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"CommonJsStuffPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"CommonJsStuffPlugin\", handler);\n    });\n  }\n\n}\n\nmodule.exports = CommonJsStuffPlugin;","map":null,"metadata":{},"sourceType":"script"}