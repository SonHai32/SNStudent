{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst AsyncDependenciesBlock = require(\"../AsyncDependenciesBlock\");\n\nconst AMDRequireDependency = require(\"./AMDRequireDependency\");\n\nmodule.exports = class AMDRequireDependenciesBlock extends AsyncDependenciesBlock {\n  constructor(expr, arrayRange, functionRange, errorCallbackRange, module, loc, request) {\n    super(null, module, loc, request);\n    this.expr = expr;\n    this.outerRange = expr.range;\n    this.arrayRange = arrayRange;\n    this.functionBindThis = false;\n    this.functionRange = functionRange;\n    this.errorCallbackBindThis = false;\n    this.errorCallbackRange = errorCallbackRange;\n    this.bindThis = true;\n\n    if (arrayRange && functionRange && errorCallbackRange) {\n      this.range = [arrayRange[0], errorCallbackRange[1]];\n    } else if (arrayRange && functionRange) {\n      this.range = [arrayRange[0], functionRange[1]];\n    } else if (arrayRange) {\n      this.range = arrayRange;\n    } else if (functionRange) {\n      this.range = functionRange;\n    } else {\n      this.range = expr.range;\n    }\n\n    const dep = this.newRequireDependency();\n    dep.loc = loc;\n    this.addDependency(dep);\n  }\n\n  newRequireDependency() {\n    return new AMDRequireDependency(this);\n  }\n\n};","map":null,"metadata":{},"sourceType":"script"}