{"ast":null,"code":"\"use strict\";\n/**\n * @template T\n */\n\nclass Queue {\n  /**\n   * @param {Iterable<T>=} items The initial elements.\n   */\n  constructor(items) {\n    /** @private @type {Set<T>} */\n    this.set = new Set(items);\n    /** @private @type {Iterator<T>} */\n\n    this.iterator = this.set[Symbol.iterator]();\n  }\n  /**\n   * Returns the number of elements in this queue.\n   * @returns {number} The number of elements in this queue.\n   */\n\n\n  get length() {\n    return this.set.size;\n  }\n  /**\n   * Appends the specified element to this queue.\n   * @param {T} item The element to add.\n   * @returns {void}\n   */\n\n\n  enqueue(item) {\n    this.set.add(item);\n  }\n  /**\n   * Retrieves and removes the head of this queue.\n   * @returns {T | undefined} The head of the queue of `undefined` if this queue is empty.\n   */\n\n\n  dequeue() {\n    const result = this.iterator.next();\n    if (result.done) return undefined;\n    this.set.delete(result.value);\n    return result.value;\n  }\n\n}\n\nmodule.exports = Queue;","map":null,"metadata":{},"sourceType":"script"}