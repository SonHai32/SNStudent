{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/web-dev/React/cstudy/src/components/NewsFeeds/CreatePostModal.js\";\nimport React from 'react';\nimport { Modal, Header, Form, Image, Button, Input, TextArea } from 'semantic-ui-react';\nimport { Picker, emojiIndex } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\nimport uuid from 'uuidv4';\nimport firebase from '../../firebase';\nimport FileModal from './FileModal';\nimport pictureIcon from \"../../Images/picture.svg\";\nimport tagFriends from \"../../Images/tagfriends.svg\";\nimport locationIcon from \"../../Images/location.svg\";\nimport editIcon from \"../../Images/edit.svg\";\nimport smileIcon from \"../../Images/iconsmile.svg\";\n\nclass CreatePostModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      postText: '',\n      postImages: [],\n      emojiPicker: false,\n      selectionStart: 0,\n      fileModal: false,\n      uploadTask: null,\n      uploadPercent: 0,\n      storeRef: firebase.storage().ref(),\n      postsRef: firebase.database().ref('posts')\n    };\n\n    this.handleTogglePicker = () => {\n      this.setState({\n        emojiPicker: !this.state.emojiPicker\n      });\n    };\n\n    this.handlePostChange = event => {\n      this.setState({\n        postText: event.target.value\n      });\n    };\n\n    this.handleEmojiSelect = emoji => {\n      const oldPost = this.state.postText;\n      const newPost = this.addEmojiToInputWithSeletionStart(oldPost, this.state.selectionStart, this.colonToUnicode(emoji.colons));\n      this.setState({\n        postText: newPost\n      });\n    };\n\n    this.colonToUnicode = emojiMessage => {\n      let x = emojiMessage.replace(/:/g, \"\");\n      let emoji = emojiIndex.emojis[x];\n\n      if (emoji !== undefined) {\n        let unicode = emoji.native;\n\n        if (unicode !== undefined) {\n          return unicode;\n        } else {\n          return null;\n        }\n      }\n    };\n\n    this.addEmojiToInputWithSeletionStart = (post, selectionStart, emoji) => {\n      if (post) {\n        if (emoji) {\n          return post.substring(0, selectionStart) + emoji + post.substring(selectionStart, post.length);\n        } else {\n          return post;\n        }\n      } else {\n        if (emoji) {\n          return post + emoji;\n        }\n      }\n    };\n\n    this.inputClicked = event => {\n      this.setState({\n        selectionStart: event.target.selectionStart\n      });\n    };\n\n    this.inputKeyPressed = event => {\n      this.setState({\n        selectionStart: event.target.selectionStart\n      });\n    };\n\n    this.openFileModal = () => {\n      this.setState({\n        fileModal: true\n      });\n    };\n\n    this.closeFileModal = () => {\n      this.setState({\n        fileModal: false\n      });\n    };\n\n    this.uploadFile = (file, metadata) => {\n      const filePath = this.props.user.uid + '/media/image/' + uuid() + '.jpg';\n      const uploadTask = this.state.storeRef.child(filePath).put(file, metadata);\n      this.setState({\n        uploadTask\n      }, () => {\n        this.state.uploadTask.on('state_changed', snap => {\n          const uploadPercent = Math.round(snap.bytesTransferred / snap.totalBytes * 100);\n          this.setState({\n            uploadPercent\n          });\n        });\n      });\n\n      if (this.state.uploadPercent == 100) {\n        this.state.uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n          const image = [];\n          image.push({\n            downloadURL: downloadURL,\n            imagePath: this.state.uploadTask.location_.path\n          });\n          this.setState({\n            postImages: this.state.postImages.concat(image)\n          }, () => {});\n        });\n      }\n    };\n\n    this.savePost = event => {\n      event.preventDefault();\n      const postChild = this.props.user.uid + uuid() + '/post';\n      const postCreate = {\n        postChild: postChild,\n        createByUid: this.props.user.uid,\n        createByName: this.props.user.displayName,\n        avatar: this.props.user.photoURL,\n        timestamp: Date.now(),\n        postImages: Array().concat(this.state.postImages),\n        postText: this.state.postText,\n        liked: [{\n          username: 'null',\n          userUID: 'null'\n        }]\n      };\n      this.state.postsRef.child(postChild).set(postCreate).then(() => {\n        this.setState({\n          postText: '',\n          postImages: []\n        });\n        this.props.closeModal();\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          postText = _this$state.postText,\n          emojiPicker = _this$state.emojiPicker;\n    const _this$props = this.props,\n          user = _this$props.user,\n          modal = _this$props.modal,\n          closeModal = _this$props.closeModal;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(FileModal, {\n      fileModal: this.state.fileModal,\n      uploadFile: this.uploadFile,\n      closeModal: this.closeFileModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      centered: true,\n      size: \"small\",\n      open: modal,\n      onClose: closeModal,\n      closeIcon: true,\n      style: {\n        top: '10%',\n        transform: 'translateY(-10%)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Header.Content, {\n      style: {\n        opacity: 0.6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \" \", React.createElement(Image, {\n      spaced: \"right\",\n      style: {\n        width: '30px'\n      },\n      src: editIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), \"T\\u1EA1o B\\xE0i Vi\\u1EBFt  \"))), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Form, {\n      style: {\n        marginTop: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Image, {\n      inline: true,\n      size: \"tiny\",\n      avatar: true,\n      src: user.photoURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      rows: 1,\n      value: postText,\n      type: \"text\",\n      placeholder: \"B\\u1EA1n \\u0111ang ngh\\u0129 g\\xEC ?\",\n      transparent: true,\n      onClick: this.inputClicked,\n      onChange: this.handlePostChange,\n      style: {\n        height: '100%',\n        fontSize: 16,\n        float: 'left',\n        overflowY: 'scroll',\n        border: 'none',\n        background: 'none',\n        outline: 'none'\n      },\n      onKeyUp: this.inputKeyPressed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }))), React.createElement(Button.Group, {\n      size: \"small\",\n      widths: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.openFileModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Image, {\n      style: {\n        width: '30px'\n      },\n      spaced: \"right\",\n      centered: true,\n      src: pictureIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"\\u1EA2nh/Video\")), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Image, {\n      style: {\n        width: '30px'\n      },\n      spaced: \"right\",\n      centered: true,\n      src: tagFriends,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"G\\u1EAFn th\\u1EBB b\\u1EA1n b\\xE8\")), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Image, {\n      style: {\n        width: '30px'\n      },\n      spaced: \"right\",\n      centered: true,\n      src: locationIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Check in\")), React.createElement(Button, {\n      onClick: this.handleTogglePicker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Image, {\n      style: {\n        width: '30px'\n      },\n      spaced: \"right\",\n      centered: true,\n      src: smileIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"C\\u1EA3m x\\xFAc \")), emojiPicker ? React.createElement(\"div\", {\n      onMouseLeave: this.handleTogglePicker,\n      className: \"emoji-mart-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Picker, {\n      i18n: {\n        search: 'Tìm kiếm',\n        categories: {\n          search: 'Tìm kiếm theo mục',\n          recent: 'Đã sử dụng gần đây'\n        }\n      },\n      onSelect: this.handleEmojiSelect,\n      set: \"facebook\",\n      emoji: \"point_up\",\n      style: {\n        position: \"absolute\",\n        left: '55%',\n        top: '65%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    })) : ''), React.createElement(Form.Button, {\n      onClick: this.savePost,\n      color: \"green\",\n      fluid: true,\n      style: {\n        marginTop: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Chia s\\u1EBB\")))));\n  }\n\n}\n\nexport default CreatePostModal;","map":{"version":3,"sources":["/home/hari/Desktop/web-dev/React/cstudy/src/components/NewsFeeds/CreatePostModal.js"],"names":["React","Modal","Header","Form","Image","Button","Input","TextArea","Picker","emojiIndex","uuid","firebase","FileModal","CreatePostModal","Component","state","postText","postImages","emojiPicker","selectionStart","fileModal","uploadTask","uploadPercent","storeRef","storage","ref","postsRef","database","handleTogglePicker","setState","handlePostChange","event","target","value","handleEmojiSelect","emoji","oldPost","newPost","addEmojiToInputWithSeletionStart","colonToUnicode","colons","emojiMessage","x","replace","emojis","undefined","unicode","native","post","substring","length","inputClicked","inputKeyPressed","openFileModal","closeFileModal","uploadFile","file","metadata","filePath","props","user","uid","child","put","on","snap","Math","round","bytesTransferred","totalBytes","snapshot","getDownloadURL","then","downloadURL","image","push","imagePath","location_","path","concat","savePost","preventDefault","postChild","postCreate","createByUid","createByName","displayName","avatar","photoURL","timestamp","Date","now","Array","liked","username","userUID","set","closeModal","render","modal","top","transform","opacity","width","editIcon","marginTop","height","fontSize","float","overflowY","border","background","outline","pictureIcon","marginLeft","tagFriends","locationIcon","smileIcon","search","categories","recent","position","left"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal, Header,Form,Image, Button, Input, TextArea } from 'semantic-ui-react';\nimport {Picker,emojiIndex} from 'emoji-mart'\nimport 'emoji-mart/css/emoji-mart.css'\nimport uuid from 'uuidv4'\n\nimport firebase from '../../firebase'\nimport FileModal from './FileModal'\n\n\nimport pictureIcon from '../../Images/picture.svg'\nimport tagFriends from '../../Images/tagfriends.svg'\nimport locationIcon from '../../Images/location.svg'\nimport editIcon from '../../Images/edit.svg'\nimport smileIcon from '../../Images/iconsmile.svg'\n\nclass CreatePostModal extends React.Component{\n\n    state = {\n        postText: '',\n        postImages: [],\n        emojiPicker: false,\n        selectionStart: 0,\n        fileModal: false,        \n        uploadTask: null,\n        uploadPercent: 0,\n        storeRef: firebase.storage().ref(),\n        postsRef: firebase.database().ref('posts'),\n      \n        \n    }\n    \n\n\n    handleTogglePicker = () =>{\n        this.setState({emojiPicker: !this.state.emojiPicker})\n    }\n\n    handlePostChange = event =>{\n        this.setState({postText: event.target.value})\n    }\n\n    handleEmojiSelect = emoji =>{\n        \n        const oldPost = this.state.postText;\n        const newPost = this.addEmojiToInputWithSeletionStart(oldPost,this.state.selectionStart,this.colonToUnicode(emoji.colons));\n        this.setState({postText: newPost})\n    \n        \n    }\n    \n\n\n    colonToUnicode = emojiMessage =>{\n        let x = emojiMessage.replace(/:/g,\"\")\n        let emoji = emojiIndex.emojis[x];\n        if(emoji !== undefined){\n            let unicode = emoji.native\n            if(unicode !== undefined){\n                return unicode\n            }else{\n                return null\n            }\n        } \n        \n\n    }\n\naddEmojiToInputWithSeletionStart = (post, selectionStart,emoji) =>{\n \n    if(post){\n        if(emoji){\n            \n            return post.substring(0,selectionStart) +emoji+ post.substring(selectionStart,post.length)\n        }else{\n            return post\n        }\n    }else{\n        if(emoji){\n            return post + emoji\n        }\n    }\n}\n\ninputClicked = event =>{\n   \n    this.setState({selectionStart: event.target.selectionStart});\n    \n}\n\ninputKeyPressed = event =>{\n    this.setState({selectionStart: event.target.selectionStart});\n    \n    \n}\n\nopenFileModal = () =>{\n    this.setState({fileModal: true})\n}\n\ncloseFileModal = () =>{\n    this.setState({fileModal: false})\n}\n\nuploadFile = (file,metadata) =>{\n    const filePath = this.props.user.uid+'/media/image/'+uuid()+'.jpg';\n    const uploadTask = this.state.storeRef.child(filePath).put(file,metadata);\n    this.setState({uploadTask},()=>{\n        this.state.uploadTask.on('state_changed', snap =>{\n            const uploadPercent = Math.round((snap.bytesTransferred / snap.totalBytes)*100) \n            this.setState({uploadPercent})\n        });\n        \n    })\n    \n    if(this.state.uploadPercent == 100){\n        this.state.uploadTask.snapshot.ref.getDownloadURL().then(downloadURL =>{\n            const image = [];\n            image.push({downloadURL: downloadURL, imagePath: this.state.uploadTask.location_.path})\n            this.setState({postImages: this.state.postImages.concat(image)},()=>{\n                \n            })\n        })\n    }\n}\n\nsavePost = event =>{\n    event.preventDefault();\n    const postChild = this.props.user.uid+uuid()+'/post';\n    const postCreate ={\n      postChild: postChild,\n      createByUid: this.props.user.uid,\n      createByName: this.props.user.displayName,\n      avatar: this.props.user.photoURL ,\n      timestamp: Date.now(),\n      postImages: Array().concat(this.state.postImages),\n      postText: this.state.postText,\n      liked: [{username: 'null', userUID: 'null'}]\n    }\n    \n    this.state.postsRef.child(postChild).set(postCreate).then(()=>{\n        this.setState({postText: '', postImages: []});\n        this.props.closeModal()\n    })\n    \n  }\n\n\n    render(){\n\n        const {postText,emojiPicker} = this.state;\n        const {user,modal,closeModal} = this.props;\n        \n        return(\n            <div className=\"wrapper\">\n                <FileModal fileModal={this.state.fileModal} uploadFile={this.uploadFile} closeModal={this.closeFileModal} />\n\n                <Modal centered size='small' open={modal} onClose={closeModal} closeIcon style={{top: '10%', transform: 'translateY(-10%)'}}>\n                <Modal.Header >\n                <Header as='h3'> \n        \n                    <Header.Content style={{opacity: 0.6}}> <Image spaced='right' style={{width:'30px'} } src={editIcon} />Tạo Bài Viết  </Header.Content>\n      \n                </Header>\n                </Modal.Header>\n                <Modal.Content>\n                    <Form style={{marginTop: '5px'}}>\n                        <Form.Group >\n                            <Image inline size='tiny' avatar src={user.photoURL}/>\n\n\n                            <Form.Field  style={{width: '100%'}} >\n                                \n                            \n                                <TextArea\n                                    rows={1}\n                                    value={postText} \n                                    type='text' \n                                    placeholder=\"Bạn đang nghĩ gì ?\" \n                                    transparent \n                                    onClick={this.inputClicked}\n                                    onChange={this.handlePostChange} \n                                    style={{height: '100%',fontSize: 16,float: 'left',overflowY: 'scroll',border: 'none', background: 'none', outline: 'none'}} \n                                    onKeyUp={this.inputKeyPressed}  \n                                />\n                                \n                        \n\n                            </Form.Field>\n                            \n                        </Form.Group>\n                        \n                        <Button.Group  size='small' widths={4}>\n                            <Button  onClick={this.openFileModal}>\n                            <Image style={{width:'30px'}} spaced='right' centered  src={pictureIcon} />\n                         \n                            <span style={{marginLeft:'10px'}}>Ảnh/Video</span>\n\n                            </Button>\n                            <Button      >\n                            <Image  style={{width:'30px'}} spaced='right' centered  src={tagFriends} />\n                         \n                            <span style={{marginLeft:'10px'}}>Gắn thẻ bạn bè</span>\n\n                            </Button>\n                            <Button      >\n                            <Image  style={{width:'30px'}} spaced='right' centered  src={locationIcon} />\n                         \n                            <span style={{marginLeft:'10px'}}>Check in</span>\n\n                            </Button>\n                            <Button  onClick={this.handleTogglePicker}>\n                            <Image style={{width:'30px'}} spaced='right' centered  src={smileIcon} />\n                         \n                            <span style={{marginLeft:'10px'}}>Cảm xúc </span>{\n                              \n                            }\n                            \n                            </Button>\n                            {emojiPicker ? (\n                                (\n                                    <div onMouseLeave={this.handleTogglePicker} className=\"emoji-mart-select\">\n                                        <Picker \n\n                                            i18n={{ search: 'Tìm kiếm', categories: { search: 'Tìm kiếm theo mục', recent: 'Đã sử dụng gần đây' } }}\n                                            onSelect={this.handleEmojiSelect}\n                                            set='facebook'\n                                            emoji='point_up'\n                                            style={{position: \"absolute\",left:'55%', top:'65%'}}\n                                    \n                                        />\n                                    </div>\n                                )\n                            ) : ''}\n                          \n                           \n                        </Button.Group>\n                        \n\n\n                        <Form.Button onClick={this.savePost}  color='green' fluid style={{marginTop: '50px'}}>Chia sẻ</Form.Button>\n\n                    </Form>\n                </Modal.Content>\n            </Modal>\n            </div>\n        );\n    }\n}\n\nexport default CreatePostModal"]},"metadata":{},"sourceType":"module"}