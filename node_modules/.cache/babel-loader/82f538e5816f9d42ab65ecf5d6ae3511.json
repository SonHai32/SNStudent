{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/web-dev/React/SNStudent/src/components/NewsFeeds/FileModal.js\";\nimport React from 'react';\nimport { Modal, Input, Button, Icon, Image } from 'semantic-ui-react';\n\nclass FileModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      authorized: ['image/jpeg', 'image/png', 'image/webp'],\n      currentFiles: []\n    };\n\n    this.addFile = event => {\n      const files = event.target.files;\n\n      if (files) {\n        for (let i = 0; i < files.length; i++) {\n          const metadata = {\n            contentType: files[i].type\n          };\n          const reader = new FileReader();\n\n          if (this.isAuthorized(file[i].type)) {\n            reader.onload = event => {\n              const file = {\n                file: file[i],\n                url: event.target.result,\n                metadata: metadata\n              };\n            };\n\n            this.state.currentFiles.push(file);\n          }\n\n          reader.readAsDataURL(files[i]);\n        }\n      }\n    };\n\n    this.sendFileToProp = () => {\n      console.log(this.state.currentFiles); // const {fileStateToProp,closeModal} = this.props\n      //     fileStateToProp(this.state.currentFiles);\n      //     closeModal();\n    };\n\n    this.isAuthorized = fileType => this.state.authorized.includes(fileType);\n  }\n\n  render() {\n    const _this$props = this.props,\n          fileModal = _this$props.fileModal,\n          closeModal = _this$props.closeModal;\n    return React.createElement(Modal, {\n      basic: true,\n      open: fileModal,\n      onClose: closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Select an image file\"), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Input, {\n      multiple: true,\n      fluid: true,\n      label: \"File types: jpg, png\",\n      name: \"file\",\n      type: \"file\",\n      onChange: this.addFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Button.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Button, {\n      negative: true,\n      inverted: true,\n      onClick: closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"remove\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), \" Cancel\"), React.createElement(Button.Or, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.sendFileToProp,\n      className: \"submit\",\n      inverted: true,\n      positive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: \"submit\",\n      name: \"checkmark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), \"Upload\"))));\n  }\n\n}\n\nexport default FileModal;","map":{"version":3,"sources":["/home/hari/Desktop/web-dev/React/SNStudent/src/components/NewsFeeds/FileModal.js"],"names":["React","Modal","Input","Button","Icon","Image","FileModal","Component","state","authorized","currentFiles","addFile","event","files","target","i","length","metadata","contentType","type","reader","FileReader","isAuthorized","file","onload","url","result","push","readAsDataURL","sendFileToProp","console","log","fileType","includes","render","props","fileModal","closeModal"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal, Input, Button, Icon,Image } from 'semantic-ui-react';\n\nclass FileModal extends React.Component{\n    state = {\n        authorized: ['image/jpeg', 'image/png', 'image/webp'],\n        currentFiles: []\n\n    }\n\n   \n    addFile = event =>{\n    \n        \n        const files = event.target.files;\n        \n        \n   \n        if(files){\n            for(let i = 0 ; i < files.length ; i++){\n                const metadata = {contentType: files[i].type}\n                const reader = new FileReader();\n                if(this.isAuthorized(file[i].type)){\n                    reader.onload = event =>{\n                        const file = {file: file[i], url: event.target.result, metadata: metadata} }\n                        this.state.currentFiles.push(file)\n                    }\n                    reader.readAsDataURL(files[i])\n                }\n            }\n        }\n     \n    \n\n\n  \n\n    sendFileToProp = () =>{\n      console.log(this.state.currentFiles)\n    // const {fileStateToProp,closeModal} = this.props\n    //     fileStateToProp(this.state.currentFiles);\n    //     closeModal();\n\n    }\n\n \n\n  \n   \n    isAuthorized = fileType => this.state.authorized.includes(fileType);\n\n    render(){\n\n        const {fileModal, closeModal} = this.props;\n     \n\n       return(\n            <Modal basic open={fileModal} onClose={closeModal}>\n                <Modal.Header>\n                    Select an image file\n                </Modal.Header>\n                <Modal.Content>\n                    <Input \n                        multiple\n                        fluid\n                        label='File types: jpg, png'\n                        name='file'\n                        type='file'\n                        onChange={this.addFile}\n                    />\n                </Modal.Content>\n                <Modal.Actions>\n       \n                    <Button.Group>\n                        <Button negative inverted onClick={closeModal}>\n                            <Icon name='remove' /> Cancel\n                        </Button>\n                        <Button.Or />\n                        <Button onClick={this.sendFileToProp} className='submit' inverted positive>\n                            <Icon className='submit' name='checkmark' />Upload\n                        </Button>\n                    </Button.Group>\n                  \n                    \n                </Modal.Actions>\n            </Modal>\n       );\n    }\n}\n\nexport default FileModal"]},"metadata":{},"sourceType":"module"}