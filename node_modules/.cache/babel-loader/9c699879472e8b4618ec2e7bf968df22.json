{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst NodeWatchFileSystem = require(\"./NodeWatchFileSystem\");\n\nconst NodeOutputFileSystem = require(\"./NodeOutputFileSystem\");\n\nconst NodeJsInputFileSystem = require(\"enhanced-resolve/lib/NodeJsInputFileSystem\");\n\nconst CachedInputFileSystem = require(\"enhanced-resolve/lib/CachedInputFileSystem\");\n\nconst createConsoleLogger = require(\"../logging/createConsoleLogger\");\n\nconst nodeConsole = require(\"./nodeConsole\");\n\nclass NodeEnvironmentPlugin {\n  constructor(options) {\n    this.options = options || {};\n  }\n\n  apply(compiler) {\n    compiler.infrastructureLogger = createConsoleLogger(Object.assign({\n      level: \"info\",\n      debug: false,\n      console: nodeConsole\n    }, this.options.infrastructureLogging));\n    compiler.inputFileSystem = new CachedInputFileSystem(new NodeJsInputFileSystem(), 60000);\n    const inputFileSystem = compiler.inputFileSystem;\n    compiler.outputFileSystem = new NodeOutputFileSystem();\n    compiler.watchFileSystem = new NodeWatchFileSystem(compiler.inputFileSystem);\n    compiler.hooks.beforeRun.tap(\"NodeEnvironmentPlugin\", compiler => {\n      if (compiler.inputFileSystem === inputFileSystem) inputFileSystem.purge();\n    });\n  }\n\n}\n\nmodule.exports = NodeEnvironmentPlugin;","map":null,"metadata":{},"sourceType":"script"}