{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\n\nconst ParserHelpers = require(\"./ParserHelpers\");\n\nconst NullFactory = require(\"./NullFactory\");\n/* eslint-disable camelcase */\n\n\nconst REPLACEMENTS = {\n  __webpack_require__: \"__webpack_require__\",\n  __webpack_public_path__: \"__webpack_require__.p\",\n  __webpack_modules__: \"__webpack_require__.m\",\n  __webpack_chunk_load__: \"__webpack_require__.e\",\n  __non_webpack_require__: \"require\",\n  __webpack_nonce__: \"__webpack_require__.nc\",\n  \"require.onError\": \"__webpack_require__.oe\"\n};\nconst NO_WEBPACK_REQUIRE = {\n  __non_webpack_require__: true\n};\nconst REPLACEMENT_TYPES = {\n  __webpack_public_path__: \"string\",\n  __webpack_require__: \"function\",\n  __webpack_modules__: \"object\",\n  __webpack_chunk_load__: \"function\",\n  __webpack_nonce__: \"string\"\n};\n/* eslint-enable camelcase */\n\nclass APIPlugin {\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"APIPlugin\", (compilation, {\n      normalModuleFactory\n    }) => {\n      compilation.dependencyFactories.set(ConstDependency, new NullFactory());\n      compilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\n\n      const handler = parser => {\n        Object.keys(REPLACEMENTS).forEach(key => {\n          parser.hooks.expression.for(key).tap(\"APIPlugin\", NO_WEBPACK_REQUIRE[key] ? ParserHelpers.toConstantDependency(parser, REPLACEMENTS[key]) : ParserHelpers.toConstantDependencyWithWebpackRequire(parser, REPLACEMENTS[key]));\n          const type = REPLACEMENT_TYPES[key];\n\n          if (type) {\n            parser.hooks.evaluateTypeof.for(key).tap(\"APIPlugin\", ParserHelpers.evaluateToString(type));\n          }\n        });\n      };\n\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"APIPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"APIPlugin\", handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"APIPlugin\", handler);\n    });\n  }\n\n}\n\nmodule.exports = APIPlugin;","map":null,"metadata":{},"sourceType":"script"}