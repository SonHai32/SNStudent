{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/web-dev/React/SNStudent/src/components/NewsFeeds/FileModal.js\";\nimport React from 'react';\nimport { Modal, Input, Button, Icon } from 'semantic-ui-react';\n\nclass FileModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      file: null,\n      authorized: ['image/jpeg', 'image/png', 'image/webp']\n    };\n\n    this.addFile = event => {\n      const file = event.target.files[0];\n      const Reader = new FileReader();\n\n      Reader.onload = e => {\n        console.log(e.target.result);\n      }; // if(file){\n      //     this.setState({file})\n      // }\n\n    };\n\n    this.sendFile = () => {\n      const file = this.state.file;\n      const _this$props = this.props,\n            uploadFile = _this$props.uploadFile,\n            closeModal = _this$props.closeModal;\n\n      if (file) {\n        if (this.isAuthorized(file.type)) {\n          //send File\n          const metadata = {\n            contentType: file.type\n          };\n          uploadFile(file, metadata);\n          closeModal();\n          this.clearFile();\n        }\n      }\n    };\n\n    this.clearFile = () => {\n      this.setState({\n        file: null\n      });\n    };\n\n    this.isAuthorized = fileType => this.state.authorized.includes(fileType);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          fileModal = _this$props2.fileModal,\n          closeModal = _this$props2.closeModal;\n    return React.createElement(Modal, {\n      basic: true,\n      open: fileModal,\n      onClose: closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Select an image file \"), \" \", React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Input, {\n      fluid: true,\n      label: \"File types: jpg, png\",\n      name: \"file\",\n      type: \"file\",\n      onChange: this.addFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), \" \"), \" \", React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Button.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Button, {\n      negative: true,\n      inverted: true,\n      onClick: closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"remove\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), \" Cancel \"), \" \", React.createElement(Button.Or, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.sendFile,\n      inverted: true,\n      positive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"checkmark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), \" Upload \"), \" \")), \" \");\n  }\n\n}\n\nexport default FileModal;","map":{"version":3,"sources":["/home/hari/Desktop/web-dev/React/SNStudent/src/components/NewsFeeds/FileModal.js"],"names":["React","Modal","Input","Button","Icon","FileModal","Component","state","file","authorized","addFile","event","target","files","Reader","FileReader","onload","e","console","log","result","sendFile","props","uploadFile","closeModal","isAuthorized","type","metadata","contentType","clearFile","setState","fileType","includes","render","fileModal"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal, Input, Button, Icon } from 'semantic-ui-react';\n\nclass FileModal extends React.Component {\n    state = {\n        file: null,\n        authorized: ['image/jpeg', 'image/png', 'image/webp']\n    }\n\n    addFile = event => {\n        const file = event.target.files[0];\n        const Reader = new FileReader();\n        Reader.onload = e => {\n                console.log(e.target.result)\n            }\n            // if(file){\n            //     this.setState({file})\n            // }\n    }\n\n    sendFile = () => {\n        const { file } = this.state;\n        const { uploadFile, closeModal } = this.props\n\n        if (file) {\n            if (this.isAuthorized(file.type)) {\n                //send File\n                const metadata = { contentType: file.type }\n                uploadFile(file, metadata);\n                closeModal();\n                this.clearFile();\n            }\n        }\n\n    }\n\n    clearFile = () => {\n        this.setState({ file: null })\n    }\n\n    isAuthorized = fileType => this.state.authorized.includes(fileType);\n\n    render() {\n\n        const { fileModal, closeModal } = this.props;\n\n        return ( <\n            Modal basic open = { fileModal }\n            onClose = { closeModal } >\n            <\n            Modal.Header >\n            Select an image file <\n            /Modal.Header> <\n            Modal.Content >\n            <\n            Input fluid label = 'File types: jpg, png'\n            name = 'file'\n            type = 'file'\n            onChange = { this.addFile }\n            /> < /\n            Modal.Content > <\n            Modal.Actions >\n\n            <\n            Button.Group >\n            <\n            Button negative inverted onClick = { closeModal } >\n            <\n            Icon name = 'remove' / > Cancel <\n            /Button> <\n            Button.Or / >\n            <\n            Button onClick = { this.sendFile }\n            inverted positive >\n            <\n            Icon name = 'checkmark' / > Upload <\n            /Button> < /\n            Button.Group >\n\n            <\n            /Modal.Actions> < /\n            Modal >\n        );\n    }\n}\n\nexport default FileModal"]},"metadata":{},"sourceType":"module"}