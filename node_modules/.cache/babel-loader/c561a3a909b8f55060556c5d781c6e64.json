{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Florent Cailhol @ooflorent\n*/\n\"use strict\";\n/** @typedef {import(\"../Module\")} Module */\n\nclass DependencyReference {\n  // TODO webpack 5: module must be dynamic, you must pass a function returning a module\n  // This is needed to remove the hack in ConcatenatedModule\n  // The problem is that the `module` in Dependency could be replaced i. e. because of Scope Hoisting\n\n  /**\n   *\n   * @param {Module} module the referenced module\n   * @param {string[] | boolean} importedNames imported named from the module\n   * @param {boolean=} weak if this is a weak reference\n   * @param {number} order the order information or NaN if don't care\n   */\n  constructor(module, importedNames, weak = false, order = NaN) {\n    // TODO webpack 5: make it a getter\n    this.module = module; // true: full object\n    // false: only sideeffects/no export\n    // array of strings: the exports with this names\n\n    this.importedNames = importedNames;\n    this.weak = !!weak;\n    this.order = order;\n  }\n  /**\n   * @param {DependencyReference[]} array an array (will be modified)\n   * @returns {DependencyReference[]} the array again\n   */\n\n\n  static sort(array) {\n    /** @type {WeakMap<DependencyReference, number>} */\n    const originalOrder = new WeakMap();\n    let i = 0;\n\n    for (const ref of array) {\n      originalOrder.set(ref, i++);\n    }\n\n    return array.sort((a, b) => {\n      const aOrder = a.order;\n      const bOrder = b.order;\n\n      if (isNaN(aOrder)) {\n        if (!isNaN(bOrder)) {\n          return 1;\n        }\n      } else {\n        if (isNaN(bOrder)) {\n          return -1;\n        }\n\n        if (aOrder !== bOrder) {\n          return aOrder - bOrder;\n        }\n      }\n\n      const aOrg = originalOrder.get(a);\n      const bOrg = originalOrder.get(b);\n      return aOrg - bOrg;\n    });\n  }\n\n}\n\nmodule.exports = DependencyReference;","map":null,"metadata":{},"sourceType":"script"}