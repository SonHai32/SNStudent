{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/web-dev/React/SNStudent/src/components/NewsFeeds/CreatePostModal.js\";\nimport React from 'react';\nimport { Modal, Header, Form, Image, Button, TextArea, Segment, Grid, Icon } from 'semantic-ui-react';\nimport { Picker, emojiIndex } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\nimport uuid from 'uuidv4';\nimport firebase from '../../firebase';\nimport FileModal from './FileModal';\nimport ImageResizer from '../test'; // import ImageResize from '../ImageResize'\n\nimport pictureIcon from \"../../Images/picture.svg\";\nimport tagFriends from \"../../Images/tagfriends.svg\";\nimport editIcon from \"../../Images/edit.svg\";\nimport smileIcon from \"../../Images/smile.svg\";\nimport { async, reject } from 'q';\nimport { resolve } from 'dns';\n\nclass CreatePostModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      postText: '',\n      postImages: [],\n      emojiPicker: false,\n      selectionStart: 0,\n      fileModal: false,\n      uploadTask: null,\n      uploadPercent: 0,\n      storeRef: firebase.storage().ref(),\n      postsRef: firebase.database().ref('posts'),\n      files: [],\n      fileLoading: false,\n      imageResize: [],\n      imageDisplay: 0\n    };\n\n    this.handleTogglePicker = () => {\n      this.setState({\n        emojiPicker: !this.state.emojiPicker\n      });\n    };\n\n    this.handlePostChange = event => {\n      this.setState({\n        postText: event.target.value\n      });\n    };\n\n    this.handleEmojiSelect = emoji => {\n      let oldPost = this.state.postText;\n      const newPost = this.addEmojiToInputWithSeletionStart(oldPost, this.state.selectionStart, this.colonToUnicode(emoji.colons));\n      this.setState({\n        postText: newPost\n      });\n    };\n\n    this.colonToUnicode = emojiMessage => {\n      let x = emojiMessage.replace(/:/g, \"\");\n      let emoji = emojiIndex.emojis[x];\n\n      if (emoji !== undefined) {\n        let unicode = emoji.native;\n\n        if (unicode !== undefined) {\n          return unicode;\n        } else {\n          return null;\n        }\n      }\n    };\n\n    this.addEmojiToInputWithSeletionStart = (post, selectionStart, emoji) => {\n      if (post !== '') {\n        if (emoji) {\n          if (selectionStart === 0) {\n            return post + emoji;\n          } else {\n            let oldSelectionStart = selectionStart;\n            this.setState({\n              selectionStart: selectionStart + emoji.length\n            });\n            return post.substring(0, oldSelectionStart) + emoji + post.substring(oldSelectionStart, post.length);\n          }\n        } else {\n          return post;\n        }\n      } else {\n        if (emoji) {\n          return post + emoji;\n        }\n      }\n    };\n\n    this.inputClicked = event => {\n      this.setState({\n        selectionStart: event.target.selectionStart\n      });\n    };\n\n    this.inputKeyPressed = event => {\n      this.setState({\n        selectionStart: event.target.selectionStart\n      });\n    };\n\n    this.openFileModal = () => {\n      this.setState({\n        fileModal: true\n      });\n    };\n\n    this.closeFileModal = () => {\n      this.setState({\n        fileModal: false\n      });\n    };\n\n    this.fileStateToProp = files => {\n      this.setState({\n        files: this.state.files.concat(files)\n      }, () => {\n        this.displayImage(this.state.files);\n      });\n    };\n\n    this.uploadFile = () => {\n      if (this.state.files.length > 0) {\n        this.state.files.forEach(file => {\n          const filePath = this.props.user.uid + '/media/image/' + uuid() + '.jpg';\n          const uploadTask = this.state.storeRef.child(filePath).put(file.file, file.metadata);\n          this.setState({\n            uploadTask\n          }, () => {\n            this.state.uploadTask.on('state_changed', snap => {\n              const uploadPercent = Math.round(snap.bytesTransferred / snap.totalBytes * 100);\n              this.setState({\n                uploadPercent\n              }, () => {\n                console.log(this.state.uploadPercent);\n              });\n            });\n          });\n        });\n      } // const uploadTask = this.state.storeRef.child(filePath).put(file,metadata);\n      // this.setState({uploadTask},()=>{\n      //     this.state.uploadTask.on('state_changed', snap =>{\n      //         const uploadPercent = Math.round((snap.bytesTransferred / snap.totalBytes)*100) \n      //         this.setState({uploadPercent},()=>{\n      //             if(this.state.uploadPercent == 100){\n      //                 setTimeout(()=>{\n      //                     this.state.uploadTask.snapshot.ref.getDownloadURL().then(downloadURL =>{\n      //                         const image = [];\n      //                         image.push({downloadURL: downloadURL, imagePath: this.state.uploadTask.location_.path})\n      //                         this.setState({postImages: this.state.postImages.concat(image)},()=>{\n      //                             console.log(this.state.postImages)\n      //                         })\n      //                     })\n      //                 },800 - this.state.uploadPercent)\n      //             }\n      //         })\n      //     });\n      // })\n\n    };\n\n    this.savePost = event => {\n      event.preventDefault(); // const postChild = this.props.user.uid+uuid()+'/post';\n      // const postCreate ={\n      //   postChild: postChild,\n      //   createByUid: this.props.user.uid,\n      //   createByName: this.props.user.displayName,\n      //   avatar: this.props.user.photoURL ,\n      //   timestamp: Date.now(),\n      //   postImages: Array().concat(this.state.postImages),\n      //   postText: this.state.postText,\n      //   liked: [{username: 'null', userUID: 'null'}]\n      // }\n      // this.state.postsRef.child(postChild).set(postCreate).then(()=>{\n      //     this.setState({postText: '', postImages: []});\n      //     this.props.closeModal()\n      // })\n\n      this.uploadFile();\n    };\n\n    this.displayImage = async images => {\n      let container = document.getElementById('image-upload-limit-container');\n      let getImagesResized = new Promise((resolve, reject) => {\n        let newImages = [];\n        images.forEach(image => {\n          let resizing = new Promise((resolve, reject) => {\n            ImageResizer(image.url, 120, newImage => {\n              resolve(newImage);\n            });\n          }).then(result => {\n            let div = document.createElement('div');\n            div.setAttribute('class', 'image-uploaded-container');\n            let img = document.createElement('img');\n            img.setAttribute('class', 'image-uploaded-display');\n            img.setAttribute('src', result);\n            div.appendChild(img);\n            container.appendChild(div);\n          });\n        });\n        resolve('done');\n      });\n      let a = await getImagesResized.then(() => console.log(\"object\"));\n      container.append(React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"aa\")); // let b = await new Promise((resolve,reject)=>{\n      //     getImagesResized.then(result =>{\n      //         let a = []\n      //         a.concat(result)\n      //         console.log(a[0])\n      //         result.forEach(file=>{\n      //             console.log(file)\n      //             let div = document.createElement('div');\n      //                 div.setAttribute('class','image-uploaded-container')\n      //                 let img = document.createElement('img');\n      //                 img.setAttribute('class','image-uploaded-display');\n      //                 img.setAttribute('src',file)\n      //                 div.appendChild(img);\n      //                 container.appendChild(div)\n      //         })\n      //     })\n      // })\n    };\n\n    this.imageResize = async images => {\n      let getImagesResized = new Promise((resolve, reject) => {\n        let newImages = [];\n        images.forEach(image => {\n          let resizing = new Promise((resolve, reject) => {\n            ImageResizer(image.url, 120, newImage => {\n              resolve(newImage);\n            });\n          }).then(result => newImages.push(result));\n        });\n        resolve(newImages);\n      });\n      let result = await getImagesResized;\n    };\n\n    this.getImageCanvas = files => {\n      //   files.forEach(file =>{\n      //     ImageResizer(file.url,120,result => {\n      //         // let container = document.getElementById('img-container');\n      //         // let img = document.createElement('img');\n      //         // img.setAttribute('src',result)\n      //         // img.style.marginLeft = '10px'\n      //         // container.appendChild(img)\n      //         this.setState({imageResize: this.state.imageResize.concat(result)})\n      //       })\n      //   })\n      //\n      let imageLimit = [];\n\n      if (files.length > 4) {\n        imageLimit = [...files.splice(0, 4)];\n      } else {\n        imageLimit = [...files.splice(0, files.length)];\n      }\n\n      console.log(imageLimit); //TODO resize image for display image\n\n      let container = document.getElementById('image-upload-limit-container');\n\n      for (let i = 0; i < files.length; i++) {\n        ImageResizer(files[i].url, 120, result => {\n          container.appendChild(React.createElement(\"div\", {\n            className: \"image-uploaded-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 311\n            },\n            __self: this\n          }, React.createElement(Image, {\n            className: \"image-uploaded-display\",\n            src: result,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 312\n            },\n            __self: this\n          }), React.createElement(Icon, {\n            title: \"X\\xF3a \\u1EA3nh\",\n            name: \"remove\",\n            inverted: true,\n            className: \"icon-remove-image\",\n            onClick: () => console.log(\"object\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 313\n            },\n            __self: this\n          })));\n        });\n      }\n    };\n  }\n\n  //   displayImages = files =>{\n  //     let limitImage=[];\n  //     for (let i = 0 ; i < files.length; i++){\n  //         if(i < 4){\n  //             limitImage.push(files[i])\n  //         }\n  //     }\n  // for(let i = 0 ; i < limitImage.length; i++){\n  //     this.getImageCanvas(files[i].url)\n  // }\n  //   }\n  render() {\n    const _this$state = this.state,\n          postText = _this$state.postText,\n          emojiPicker = _this$state.emojiPicker,\n          files = _this$state.files,\n          imageResize = _this$state.imageResize;\n    const _this$props = this.props,\n          user = _this$props.user,\n          modal = _this$props.modal,\n          closeModal = _this$props.closeModal;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(FileModal, {\n      files: this.state.files,\n      fileStateToProp: this.fileStateToProp,\n      fileModal: this.state.fileModal,\n      uploadFile: this.uploadFile,\n      closeModal: this.closeFileModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      centered: true,\n      open: modal,\n      onClose: closeModal,\n      closeIcon: true,\n      style: {\n        top: '10%',\n        transform: 'translateY(-10%)',\n        maxWidth: '1000px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(Header.Content, {\n      style: {\n        opacity: 0.6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \" \", React.createElement(Image, {\n      spaced: \"right\",\n      style: {\n        width: '30px'\n      },\n      src: editIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }), \"T\\u1EA1o B\\xE0i Vi\\u1EBFt  \"))), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(Form, {\n      style: {\n        marginTop: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(Image, {\n      inline: true,\n      size: \"tiny\",\n      avatar: true,\n      src: user.photoURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      rows: 1,\n      value: postText,\n      type: \"text\",\n      placeholder: \"B\\u1EA1n mu\\u1ED1n chia s\\u1EBB \\u0111i\\u1EC1u g\\xEC ?\",\n      transparent: \"true\",\n      onClick: this.inputClicked,\n      onChange: this.handlePostChange,\n      style: {\n        height: '100%',\n        fontSize: 16,\n        float: 'left',\n        border: 'none',\n        background: 'none',\n        resize: 'none'\n      },\n      onKeyUp: this.inputKeyPressed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }))), React.createElement(Button.Group, {\n      widths: 4,\n      size: \"small\",\n      compact: true,\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.openFileModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(Image, {\n      style: {\n        width: '30px'\n      },\n      spaced: \"right\",\n      centered: true,\n      src: pictureIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, \"\\u1EA2nh/Video\")), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, React.createElement(Image, {\n      style: {\n        width: '30px'\n      },\n      spaced: \"right\",\n      centered: true,\n      src: tagFriends,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, \"G\\u1EAFn th\\u1EBB b\\u1EA1n b\\xE8\")), React.createElement(Button, {\n      onClick: this.handleTogglePicker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(Image, {\n      style: {\n        width: '30px'\n      },\n      spaced: \"right\",\n      centered: true,\n      src: smileIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        marginLeft: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, \"C\\u1EA3m x\\xFAc \")), emojiPicker ? React.createElement(\"div\", {\n      onMouseLeave: this.handleTogglePicker,\n      className: \"emoji-mart-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(Picker, {\n      i18n: {\n        search: 'Tìm kiếm',\n        categories: {\n          search: 'Tìm kiếm theo mục',\n          recent: 'Đã sử dụng gần đây'\n        }\n      },\n      onSelect: this.handleEmojiSelect,\n      set: \"facebook\",\n      emoji: \"point_up\",\n      style: {\n        position: \"absolute\",\n        left: '55%',\n        top: '65%',\n        zIndex: '1000'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    })) : ''), React.createElement(Form.Button, {\n      onClick: this.savePost,\n      color: \"green\",\n      fluid: true,\n      style: {\n        marginTop: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, \"\\u0110\\u0103ng b\\xE0i\")), files.length > 0 ? React.createElement(\"div\", {\n      style: {\n        overflowX: 'auto',\n        width: '100%',\n        height: '200px',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n      },\n      id: \"image-upload-limit-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }) : '')));\n  }\n\n}\n\nexport default CreatePostModal;","map":{"version":3,"sources":["/home/hari/Desktop/web-dev/React/SNStudent/src/components/NewsFeeds/CreatePostModal.js"],"names":["React","Modal","Header","Form","Image","Button","TextArea","Segment","Grid","Icon","Picker","emojiIndex","uuid","firebase","FileModal","ImageResizer","async","reject","resolve","CreatePostModal","Component","state","postText","postImages","emojiPicker","selectionStart","fileModal","uploadTask","uploadPercent","storeRef","storage","ref","postsRef","database","files","fileLoading","imageResize","imageDisplay","handleTogglePicker","setState","handlePostChange","event","target","value","handleEmojiSelect","emoji","oldPost","newPost","addEmojiToInputWithSeletionStart","colonToUnicode","colons","emojiMessage","x","replace","emojis","undefined","unicode","native","post","oldSelectionStart","length","substring","inputClicked","inputKeyPressed","openFileModal","closeFileModal","fileStateToProp","concat","displayImage","uploadFile","forEach","file","filePath","props","user","uid","child","put","metadata","on","snap","Math","round","bytesTransferred","totalBytes","console","log","savePost","preventDefault","images","container","document","getElementById","getImagesResized","Promise","newImages","image","resizing","url","newImage","then","result","div","createElement","setAttribute","img","appendChild","a","append","push","getImageCanvas","imageLimit","splice","i","render","modal","closeModal","top","transform","maxWidth","opacity","width","editIcon","marginTop","photoURL","height","fontSize","float","border","background","resize","pictureIcon","marginLeft","tagFriends","smileIcon","search","categories","recent","position","left","zIndex","overflowX","display","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal, Header,Form,Image, Button, TextArea, Segment, Grid, Icon } from 'semantic-ui-react';\nimport {Picker,emojiIndex} from 'emoji-mart'\nimport 'emoji-mart/css/emoji-mart.css'\nimport uuid from 'uuidv4'\n\nimport firebase from '../../firebase'\nimport FileModal from './FileModal'\nimport  ImageResizer from'../test'\n// import ImageResize from '../ImageResize'\nimport pictureIcon from '../../Images/picture.svg'\nimport tagFriends from '../../Images/tagfriends.svg'\n\nimport editIcon from '../../Images/edit.svg'\nimport smileIcon from '../../Images/smile.svg'\nimport { async, reject } from 'q';\nimport { resolve } from 'dns';\n\nclass CreatePostModal extends React.Component{\n\n    state = {\n        postText: '',\n        postImages: [],\n        emojiPicker: false,\n        selectionStart: 0,\n        fileModal: false,        \n        uploadTask: null,\n        uploadPercent: 0,\n        storeRef: firebase.storage().ref(),\n        postsRef: firebase.database().ref('posts'),\n        files:[], \n        fileLoading: false,\n        imageResize: [],\n        imageDisplay: 0,\n      \n        \n    }\n    \n\n\n    handleTogglePicker = () =>{\n        this.setState({emojiPicker: !this.state.emojiPicker})\n    }\n\n    handlePostChange = event =>{\n        this.setState({postText: event.target.value})\n    }\n\n    handleEmojiSelect = emoji =>{\n        \n        let oldPost = this.state.postText;   \n        const newPost = this.addEmojiToInputWithSeletionStart(oldPost,this.state.selectionStart,this.colonToUnicode(emoji.colons));\n        this.setState({postText: newPost})\n    \n    }\n    \n\n\n    colonToUnicode = emojiMessage =>{\n        let x = emojiMessage.replace(/:/g,\"\")\n        let emoji = emojiIndex.emojis[x];\n        if(emoji !== undefined){\n            let unicode = emoji.native\n            if(unicode !== undefined){\n                return unicode\n            }else{\n                return null\n            }\n        } \n        \n\n    }\n\naddEmojiToInputWithSeletionStart = (post, selectionStart,emoji) =>{\n \n    if(post !== ''){\n        if(emoji){\n            if(selectionStart ===0 ){\n                return  post + emoji\n            }else{\n                let oldSelectionStart = selectionStart\n                this.setState({selectionStart: selectionStart + emoji.length})\n                return post.substring(0,oldSelectionStart) +emoji + post.substring(oldSelectionStart,post.length)\n            }\n    \n          \n        }else{\n            return post\n        }\n    }else{\n        if(emoji){\n            return post  +emoji\n        }\n    }\n}\n\ninputClicked = event =>{\n   \n    this.setState({selectionStart: event.target.selectionStart});\n    \n}\n\ninputKeyPressed = event =>{\n    this.setState({selectionStart: event.target.selectionStart});\n    \n    \n}\n\nopenFileModal = () =>{\n    this.setState({fileModal: true})\n}\n\ncloseFileModal = () =>{\n    this.setState({fileModal: false})\n}\n\nfileStateToProp = files =>{\n   \n    this.setState({files: this.state.files.concat(files)},()=>{\n        this.displayImage(this.state.files)\n    })\n    \n\n}\n\nuploadFile = () =>{\n    \n    if(this.state.files.length > 0){\n        this.state.files.forEach(file =>{\n            const filePath = this.props.user.uid+'/media/image/'+uuid()+'.jpg'; \n            const uploadTask = this.state.storeRef.child(filePath).put(file.file,file.metadata)\n            this.setState({uploadTask}, () =>{\n                this.state.uploadTask.on('state_changed', snap =>{\n                    const uploadPercent = Math.round((snap.bytesTransferred / snap.totalBytes) * 100)\n                    this.setState({uploadPercent}, () =>{\n                        console.log(this.state.uploadPercent)\n                    })\n                })\n            })\n        })\n    }\n    // const uploadTask = this.state.storeRef.child(filePath).put(file,metadata);\n    // this.setState({uploadTask},()=>{\n    //     this.state.uploadTask.on('state_changed', snap =>{\n    //         const uploadPercent = Math.round((snap.bytesTransferred / snap.totalBytes)*100) \n    //         this.setState({uploadPercent},()=>{\n    //             if(this.state.uploadPercent == 100){\n    //                 setTimeout(()=>{\n    //                     this.state.uploadTask.snapshot.ref.getDownloadURL().then(downloadURL =>{\n    //                         const image = [];\n    //                         image.push({downloadURL: downloadURL, imagePath: this.state.uploadTask.location_.path})\n    //                         this.setState({postImages: this.state.postImages.concat(image)},()=>{\n    //                             console.log(this.state.postImages)\n    //                         })\n    //                     })\n    //                 },800 - this.state.uploadPercent)\n    //             }\n    //         })\n    //     });\n        \n    // })\n    \n    \n}\n\n\n\nsavePost = event =>{\n    event.preventDefault();\n    // const postChild = this.props.user.uid+uuid()+'/post';\n    // const postCreate ={\n    //   postChild: postChild,\n    //   createByUid: this.props.user.uid,\n    //   createByName: this.props.user.displayName,\n    //   avatar: this.props.user.photoURL ,\n    //   timestamp: Date.now(),\n    //   postImages: Array().concat(this.state.postImages),\n    //   postText: this.state.postText,\n    //   liked: [{username: 'null', userUID: 'null'}]\n    // }\n    \n    // this.state.postsRef.child(postChild).set(postCreate).then(()=>{\n    //     this.setState({postText: '', postImages: []});\n    //     this.props.closeModal()\n    // })\n    this.uploadFile()\n    \n  }\n\n//   test =() =>{\n//       console.log('aaa')\n//   }\n\n\n//   getLimitImage = key =>{\n     \n//       return key < 4 ? true : false;\n      \n//   }\n\n\ndisplayImage = async (images) =>{\n    let container = document.getElementById('image-upload-limit-container');\n    let getImagesResized = new Promise((resolve,reject)=>{\n        let newImages = []\n        images.forEach(image =>{\n            let resizing = new Promise((resolve,reject)=>{\n                ImageResizer(image.url, 120 , newImage => {\n                    resolve(newImage)\n                })\n            })\n            .then(result => {\n                let div = document.createElement('div');\n                div.setAttribute('class','image-uploaded-container')\n                let img = document.createElement('img');\n                img.setAttribute('class','image-uploaded-display');\n                img.setAttribute('src',result)\n                div.appendChild(img);\n                \n                container.appendChild(div)\n            })\n        })\n       resolve('done')\n    })\n    let a = await getImagesResized.then(()=>console.log(\"object\"))\n    \n         container.append(<p>aa</p>)\n  \n    \n    // let b = await new Promise((resolve,reject)=>{\n    //     getImagesResized.then(result =>{\n    //         let a = []\n    //         a.concat(result)\n    //         console.log(a[0])\n    //         result.forEach(file=>{\n    //             console.log(file)\n    //             let div = document.createElement('div');\n    //                 div.setAttribute('class','image-uploaded-container')\n    //                 let img = document.createElement('img');\n    //                 img.setAttribute('class','image-uploaded-display');\n    //                 img.setAttribute('src',file)\n    //                 div.appendChild(img);\n                    \n    //                 container.appendChild(div)\n                \n    //         })\n    //     })\n    // })\n}\n\nimageResize =  async (images) =>{\n \n  \n    let getImagesResized = new Promise((resolve,reject)=>{\n        let newImages = []\n        images.forEach(image =>{\n            let resizing = new Promise((resolve,reject)=>{\n                ImageResizer(image.url, 120 , newImage => {\n                    resolve(newImage)\n                })\n            })\n            .then(result => newImages.push(result))\n        })\n        resolve(newImages)\n    })\n    \n    let result = await getImagesResized;\n\n  \n  \n\n}\n\n\n\n\n  getImageCanvas = files =>{\n  \n//   files.forEach(file =>{\n//     ImageResizer(file.url,120,result => {\n//         // let container = document.getElementById('img-container');\n//         // let img = document.createElement('img');\n//         // img.setAttribute('src',result)\n//         // img.style.marginLeft = '10px'\n//         // container.appendChild(img)\n//         this.setState({imageResize: this.state.imageResize.concat(result)})\n       \n//       })\n//   })\n//\n\nlet imageLimit = [];\nif(files.length > 4){\n    imageLimit = [...files.splice(0,4)];\n}else{\n    imageLimit = [...files.splice(0,files.length)]\n}\nconsole.log(imageLimit)\n\n//TODO resize image for display image\n\n\nlet container = document.getElementById('image-upload-limit-container');\n\n  for(let i = 0 ; i < files.length ; i++){\n       \n            ImageResizer(files[i].url,120, result =>{\n               \n                \n                \n                container.appendChild(<div  className=\"image-uploaded-container\">\n                                            <Image className='image-uploaded-display'  src={result} />\n                                            <Icon title='Xóa ảnh'  name='remove' inverted  className=\"icon-remove-image\" onClick={()=>console.log(\"object\")} />\n                                            </div>)\n               \n                \n              })\n            \n        \n  }\n \n\n  }\n\n//   displayImages = files =>{\n    \n//     let limitImage=[];\n//     for (let i = 0 ; i < files.length; i++){\n//         if(i < 4){\n//             limitImage.push(files[i])\n//         }\n//     }\n\n// for(let i = 0 ; i < limitImage.length; i++){\n//     this.getImageCanvas(files[i].url)\n// }\n            \n//   }\n\n    render(){\n\n        const {postText,emojiPicker,files,imageResize} = this.state;\n        const {user,modal,closeModal} = this.props;\n        \n        return(\n            <div className=\"wrapper\">\n                <FileModal files={this.state.files} fileStateToProp={this.fileStateToProp} fileModal={this.state.fileModal} uploadFile={this.uploadFile} closeModal={this.closeFileModal} />\n\n                <Modal centered  open={modal} onClose={closeModal} closeIcon style={{top: '10%', transform: 'translateY(-10%)',maxWidth: '1000px'}}>\n                <Modal.Header >\n                <Header as='h3'> \n        \n                    <Header.Content style={{opacity: 0.6}}> <Image spaced='right' style={{width:'30px'} } src={editIcon} />Tạo Bài Viết  </Header.Content>\n      \n                </Header>\n                </Modal.Header>\n                <Modal.Content>\n                    <Form style={{marginTop: '5px'}}>\n                        <Form.Group >\n                            <Image inline size='tiny' avatar src={user.photoURL}/>\n\n\n                            <Form.Field  style={{width: '100%'}} >\n                                \n                            \n                                <TextArea\n                                    rows={1}\n                                    value={postText} \n                                    type='text' \n                                    placeholder=\"Bạn muốn chia sẻ điều gì ?\" \n                                    transparent='true'\n                                    onClick={this.inputClicked}\n                                    onChange={this.handlePostChange} \n                                    style={{height: '100%',fontSize: 16,float: 'left',border: 'none', background: 'none', resize: 'none'}} \n                                    onKeyUp={this.inputKeyPressed}  \n                                />\n                                \n                        \n\n                            </Form.Field>\n                            \n                        </Form.Group>\n                        \n                        <Button.Group widths={4}  size='small' compact fluid>\n                            <Button  onClick={this.openFileModal}>\n                            <Image style={{width:'30px'}} spaced='right' centered  src={pictureIcon} />\n                         \n                            <span style={{marginLeft:'10px'}}>Ảnh/Video</span>\n\n                            </Button>\n                          \n                            <Button      >\n                            <Image  style={{width:'30px'}} spaced='right' centered  src={tagFriends} />\n                         \n                            <span style={{marginLeft:'10px'}}>Gắn thẻ bạn bè</span>\n\n                            </Button>\n                            \n                            <Button  onClick={this.handleTogglePicker}>\n                            <Image style={{width:'30px'}} spaced='right' centered  src={smileIcon} />\n                         \n                            <span style={{marginLeft:'10px'}}>Cảm xúc </span>{\n                              \n                            }\n                            \n                            </Button>\n                            {emojiPicker ? (\n                                (\n                                    <div onMouseLeave={this.handleTogglePicker} className=\"emoji-mart-select\">\n                                        <Picker \n\n                                            i18n={{ search: 'Tìm kiếm', categories: { search: 'Tìm kiếm theo mục', recent: 'Đã sử dụng gần đây' } }}\n                                            onSelect={this.handleEmojiSelect}\n                                            set='facebook'\n                                            emoji='point_up'\n                                            style={{position: \"absolute\",left:'55%', top:'65%', zIndex: '1000'}}\n                                    \n                                        />\n                                    </div>\n                                )\n                            ) : ''}\n                          \n                           \n                        </Button.Group>\n                        \n\n\n                        <Form.Button onClick={this.savePost}  color='green' fluid style={{marginTop: '50px'}}>Đăng bài</Form.Button>\n                                \n                    </Form> \n                   \n                    {files.length > 0 ?  (\n                       \n                         <div style={{overflowX: 'auto', width: '100%', height: '200px', display: 'flex', flexDirection: 'row',  alignItems: 'center'}} id='image-upload-limit-container'>\n                             \n\n                             \n                         </div>\n                        \n                    ): ''}\n                </Modal.Content>\n            </Modal>\n            </div>\n        );\n    }\n}\n\nexport default CreatePostModal\n"]},"metadata":{},"sourceType":"module"}