{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/web-dev/React/cstudy/src/components/NewsFeeds/NewsFeeds.js\";\nimport React from 'react';\nimport { Segment, Header, Icon, Feed, Image, Divider, Form, TextArea, Button, List, Responsive, Dropdown, Container, Loader, Dimmer, Label, Input } from 'semantic-ui-react';\nimport uuid from 'uuidv4';\nimport firebase from '../../firebase';\nimport FileModal from './FileModal';\nimport ImageModal from './ImageModal';\nimport * as moment from 'moment';\nimport hash from 'js-hash-code';\nimport editIcon from \"../../Images/edit.svg\";\nimport CreatePostModal from './CreatePostModal';\n\nclass NewsFeeds extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      like: false,\n      user: this.props.currentUser,\n      post: '',\n      fileModal: false,\n      imageModalStatus: false,\n      imageModalURL: '',\n      postModal: false,\n      uploadTask: null,\n      uploadStatus: '',\n      percentUploaded: 0,\n      imagePost: [],\n      postCreate: [],\n      postModal: false,\n      postFromDatabase: [],\n      storeRef: firebase.storage().ref(),\n      databaseRef: firebase.database().ref('posts'),\n      imageLoading: false,\n      postLoading: false,\n      postDrowdownOptions: [{\n        key: 'savePost',\n        text: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          circular: true,\n          size: \"small\",\n          name: \"tag\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }), \"L\\u01B0u b\\xE0i vi\\u1EBFt\")\n      }, {\n        key: 'postReport',\n        text: React.createElement(\"span\", {\n          onClick: this.handleMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          circular: true,\n          size: \"small\",\n          name: \"warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }), \"B\\xE1o c\\xE1o b\\xE0i vi\\u1EBFt\")\n      }]\n    };\n\n    this.addPostListener = () => {\n      const ref = firebase.database().ref('posts');\n      const postLoaded = [];\n      ref.on('child_added', snap => {\n        ref.child(snap.key).on('child_added', snap => postLoaded.push(snap.val()));\n        this.setState({\n          postFromDatabase: postLoaded.sort((a, b) => {\n            return b.timestamp - a.timestamp;\n          })\n        });\n      });\n    };\n\n    this.openFileModal = () => {\n      this.setState({\n        fileModal: true\n      });\n    };\n\n    this.closeFileModal = () => {\n      this.setState({\n        fileModal: false\n      });\n    };\n\n    this.openImageModal = event => {\n      this.setState({\n        imageModalStatus: true,\n        imageModalURL: event.target.name\n      });\n    };\n\n    this.closeImageModal = () => {\n      this.setState({\n        imageModalStatus: false,\n        imageModalURL: ''\n      });\n    };\n\n    this.openPostModal = () => {\n      this.setState({\n        postModal: true\n      });\n    };\n\n    this.closePostModal = () => {\n      this.setState({\n        postModal: false\n      });\n    };\n\n    this.uploadFile = (file, metadata) => {\n      const filePath = this.state.user.uid + '/media/image/' + uuid() + '.jpg';\n      this.setState({\n        imageLoading: true,\n        uploadTask: this.state.storeRef.child(filePath).put(file, metadata)\n      }, () => {\n        this.state.uploadTask.on('state_changed', snap => {\n          const percentUploaded = Math.round(snap.bytesTransferred / snap.totalBytes * 100);\n          console.log(percentUploaded);\n          this.setState({\n            percentUploaded\n          });\n\n          if (percentUploaded === 100) {\n            this.setState({\n              percentUploaded: 0\n            });\n            setTimeout(() => {\n              this.state.uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n                const image = {\n                  downloadURL: downloadURL,\n                  imagePath: this.state.uploadTask.location_.path\n                };\n                this.setState({\n                  imagePost: this.state.imagePost.concat(image),\n                  imageLoading: false\n                });\n              }).catch(err => console.log(err));\n            }, 1000);\n          }\n        });\n      }, err => {\n        console.log(err);\n      });\n    };\n\n    this.savePost = event => {\n      event.preventDefault();\n      const postChild = this.state.user.uid + uuid() + '/post';\n      const postCreate = {\n        postChild: postChild,\n        createByUid: this.state.user.uid,\n        createByName: this.state.user.displayName,\n        avatar: this.state.user.photoURL,\n        timestamp: Date.now(),\n        postImages: Array().concat(this.state.imagePost),\n        postText: this.state.post,\n        liked: [{\n          username: 'null',\n          userUID: 'null'\n        }]\n      };\n      this.state.databaseRef.child(postChild).set(postCreate).then(() => this.setState({\n        post: '',\n        imagePost: []\n      }));\n    };\n\n    this.handleLikeClicked = (event, {\n      name\n    }) => {\n      event.preventDefault();\n      const post = this.state.postFromDatabase.filter((val, key, arr) => {\n        return val.postChild === name;\n      });\n      console.log(post[0].avatar);\n      let postLiked = post[0].liked;\n      const currentUserLiked = postLiked.some(val => {\n        return val.userUID === this.state.user.uid;\n      });\n      const imageNotExist = post[0].postImages === undefined;\n\n      if (currentUserLiked) {\n        postLiked = postLiked.filter((val, index, arr) => {\n          return val.userUID !== this.state.user.uid;\n        });\n      } else {\n        postLiked.push({\n          username: this.state.user.displayName,\n          userUID: this.state.user.uid\n        });\n      }\n\n      let postUpdate;\n\n      if (imageNotExist) {\n        post.forEach(val => {\n          postUpdate = {\n            postChild: val.postChild,\n            createByUid: val.createByUid,\n            createByName: val.createByName,\n            avatar: val.avatar,\n            timestamp: val.timestamp,\n            postText: val.postText,\n            liked: postLiked\n          };\n        });\n      } else {\n        post.forEach(val => {\n          postUpdate = {\n            postChild: val.postChild,\n            createByUid: val.createByUid,\n            createByName: val.createByName,\n            avatar: val.avatar,\n            timestamp: val.timestamp,\n            postImages: val.postImages,\n            postText: val.postText,\n            liked: postLiked\n          };\n        });\n      }\n\n      this.state.databaseRef.child(name).set(postUpdate).then(() => this.addPostListener()).catch(err => console.log(err));\n    };\n\n    this.displayImagePost = ({\n      imagePost\n    }) => // this.state.uploadStatus.includes('uploading')  ? \n    // <Segment size='large' loading={this.state.percentUploaded < 100} >\n    //   <List horizontal>\n    //       {imagePost.map((val,key) => (\n    //         <List.Item key={key+uuid} style={{marginRight: '15px'}}> \n    //             <Image  rounded size='small' key={val.downloadURL} src={val.downloadURL} label={{as: 'a' ,name: key, corner:'right', icon:'remove',size: 'mini',color:'red',onClick: this.removeImagePost}} /> \n    //         </List.Item> ) )}\n    //     <List.Item>\n    //       <Icon style={{cursor: 'pointer', boder: 'solid 2px '}} color='black' inverted name='add' size='big' onClick={this.openModal} />\n    //     </List.Item>\n    //   </List>\n    // </Segment> : ''\n    React.createElement(Dimmer.Dimmable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Dimmer, {\n      inverted: true,\n      active: this.state.percentUploaded > 0 && this.state.percentUploaded < 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Loading\")), React.createElement(List, {\n      horizontal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, imagePost.map((val, key) => React.createElement(List.Item, {\n      key: key + uuid,\n      style: {\n        marginRight: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Image, {\n      wrapped: true,\n      rounded: true,\n      size: \"small\",\n      key: val.downloadURL,\n      src: val.downloadURL,\n      label: {\n        as: 'a',\n        name: key,\n        corner: 'right',\n        icon: 'remove',\n        size: 'tiny',\n        color: 'red',\n        onClick: this.removeImagePost\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }))), imagePost.length > 0 ? React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      link: true,\n      color: \"black\",\n      inverted: true,\n      name: \"add\",\n      size: \"big\",\n      onClick: this.openFileModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    })) : ''));\n\n    this.deleteImageFromStorge = imagePath => {\n      if (imagePath) {\n        this.state.storeRef.child(imagePath).delete().then(() => console.log(\"deleted\")).catch(err => console.log(err));\n      }\n    };\n\n    this.removeImagePost = event => {\n      event.preventDefault();\n      let removeIndex = event.target.name;\n      this.deleteImageFromStorge(this.state.imagePost[removeIndex].imagePath);\n      const newImagePost = this.state.imagePost.filter((value, index, arr) => {\n        return index != removeIndex;\n      });\n      this.setState({\n        imagePost: newImagePost\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.addPostListener();\n  }\n\n  render() {\n    const _this$state = this.state,\n          user = _this$state.user,\n          post = _this$state.post,\n          postFromDatabase = _this$state.postFromDatabase;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(FileModal, {\n      fileModal: this.state.fileModal,\n      uploadFile: this.uploadFile,\n      closeModal: this.closeFileModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }), React.createElement(CreatePostModal, {\n      modal: this.state.postModal,\n      closeModal: this.closePostModal,\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }), React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(Header.Content, {\n      style: {\n        opacity: 0.6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(Image, {\n      style: {\n        width: '30px'\n      },\n      src: editIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }), \" T\\u1EA1o B\\xE0i Vi\\u1EBFt\")), this.displayImagePost(this.state), React.createElement(Container, {\n      fluid: true,\n      style: {\n        width: '100%',\n        height: '80px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(Header, {\n      textAlign: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(Image, {\n      size: \"large\",\n      avatar: true,\n      src: user.photoURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      onClick: this.openPostModal,\n      style: {\n        opacity: 0.5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, \"B\\u1EA1n mu\\u1ED1n chia s\\u1EBB \\u0111i\\u1EC1u g\\xEC ?  \"))), React.createElement(\"button\", {\n      onClick: this.openPostModal,\n      className: \"btn__fullwidth__createPost\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: 'white',\n        fontSize: '16',\n        fontWeight: 700\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, \"T\\u1EA1o b\\xE0i vi\\u1EBFt c\\u1EE7a b\\u1EA1n\")), this.state.post.length > 0 || this.state.imagePost.length > 0 ? React.createElement(Button, {\n      onClick: this.savePost,\n      fluid: true,\n      style: {\n        marginTop: '20px',\n        background: '#ecf7e7'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \"Post\") : ''), postFromDatabase.length > 0 ? postFromDatabase.map((val, key) => React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(Feed, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(Feed.Event, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(Feed.Label, {\n      image: val.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }), React.createElement(Feed.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(Feed.Summary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      inline: true,\n      closeOnChange: true,\n      options: this.state.postDrowdownOptions,\n      pointing: \"top right\",\n      icon: null,\n      style: {\n        float: 'right',\n        zIndex: 1000\n      },\n      trigger: React.createElement(\"i\", {\n        style: {\n          opacity: 0.5\n        },\n        className: \"fas fa-ellipsis-h\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }), React.createElement(Feed.User, {\n      content: val.createByName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }), React.createElement(Feed.Date, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, moment(val.timestamp).locale('vi').fromNow())), React.createElement(Feed.Summary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      style: {\n        opacity: 0.5,\n        fontSize: 14\n      },\n      className: \"fas fa-globe-asia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }))))), React.createElement(Feed, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(Feed.Event, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    }, React.createElement(Feed.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, React.createElement(Container, {\n      fluid: true,\n      text: true,\n      textAlign: \"justified\",\n      content: val.postText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }), val.postImages ? val.postImages.map((value, key) => React.createElement(List, {\n      key: val.createByUid + val.timestamp + uuid() + hash(value.downloadURL),\n      horizontal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, React.createElement(List.Item, {\n      key: 'list' + val.createByUid + val.timestamp + uuid() + hash(value.downloadURL),\n      as: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, React.createElement(Image, {\n      centered: true,\n      fluid: true,\n      key: 'image' + val.createByUid + val.timestamp + uuid() + hash(value.downloadURL),\n      src: value.downloadURL,\n      name: value.downloadURL,\n      onClick: this.openImageModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }), React.createElement(ImageModal, {\n      imageModal: this.state.imageModalStatus,\n      closeModal: this.closeImageModal,\n      imageURL: this.state.imageModalURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    })))) : '')), React.createElement(Container, {\n      style: {\n        marginTop: '15px'\n      },\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: val.liked.length - 1 !== 0 ? 'thumbs up' : '',\n      color: \"blue\",\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        opacity: 0.6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, val.liked.length - 1 === 0 ? '' : val.liked.length - 1 + ' Thích'), React.createElement(\"span\", {\n      style: {\n        float: 'right',\n        opacity: 0.6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \"20 comnents\")), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }), React.createElement(Button.Group, {\n      fluid: true,\n      size: \"small\",\n      compact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, React.createElement(Button, {\n      name: val.postChild,\n      onClick: this.handleLikeClicked,\n      basic: true,\n      compact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"thumbs up\",\n      color: val.liked.some(val => {\n        return val.userUID === user.uid;\n      }) ? 'blue' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }), \" Like\"), React.createElement(Button, {\n      basic: true,\n      compact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"comment outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }), \" Comment\"), React.createElement(Button, {\n      basic: true,\n      compact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"share\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }), \" Share\")), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    })))) : '');\n  }\n\n}\n\nexport default NewsFeeds;","map":{"version":3,"sources":["/home/hari/Desktop/web-dev/React/cstudy/src/components/NewsFeeds/NewsFeeds.js"],"names":["React","Segment","Header","Icon","Feed","Image","Divider","Form","TextArea","Button","List","Responsive","Dropdown","Container","Loader","Dimmer","Label","Input","uuid","firebase","FileModal","ImageModal","moment","hash","CreatePostModal","NewsFeeds","Component","state","like","user","props","currentUser","post","fileModal","imageModalStatus","imageModalURL","postModal","uploadTask","uploadStatus","percentUploaded","imagePost","postCreate","postFromDatabase","storeRef","storage","ref","databaseRef","database","imageLoading","postLoading","postDrowdownOptions","key","text","handleMessage","addPostListener","postLoaded","on","snap","child","push","val","setState","sort","a","b","timestamp","openFileModal","closeFileModal","openImageModal","event","target","name","closeImageModal","openPostModal","closePostModal","uploadFile","file","metadata","filePath","uid","put","Math","round","bytesTransferred","totalBytes","console","log","setTimeout","snapshot","getDownloadURL","then","downloadURL","image","imagePath","location_","path","concat","catch","err","savePost","preventDefault","postChild","createByUid","createByName","displayName","avatar","photoURL","Date","now","postImages","Array","postText","liked","username","userUID","set","handleLikeClicked","filter","arr","postLiked","currentUserLiked","some","imageNotExist","undefined","index","postUpdate","forEach","displayImagePost","map","marginRight","as","corner","icon","size","color","onClick","removeImagePost","length","deleteImageFromStorge","delete","removeIndex","newImagePost","value","componentDidMount","render","opacity","width","editIcon","height","fontSize","fontWeight","marginTop","background","float","zIndex","locale","fromNow"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Segment,Header,Icon, Feed,Image, Divider, Form, TextArea, Button, List, Responsive, Dropdown, Container, Loader, Dimmer, Label, Input} from 'semantic-ui-react'\nimport uuid from 'uuidv4'\nimport firebase from '../../firebase'\nimport FileModal from './FileModal'\nimport ImageModal from './ImageModal'\nimport * as moment from 'moment'\nimport hash from 'js-hash-code'\nimport editIcon from '../../Images/edit.svg'\nimport CreatePostModal from './CreatePostModal'\n\n\n\n\n\nclass NewsFeeds extends React.Component{\n\n    state ={\n      like: false,\n      user: this.props.currentUser,\n      post: '',\n      fileModal: false,\n      imageModalStatus: false,\n      imageModalURL: '',\n      postModal: false,\n      uploadTask: null,\n      uploadStatus : '',\n      percentUploaded : 0,\n      imagePost: [],\n      postCreate: [],\n      postModal: false,\n      postFromDatabase: [],\n      storeRef: firebase.storage().ref(),\n      databaseRef: firebase.database().ref('posts'),\n      imageLoading: false,\n      postLoading: false,\n      postDrowdownOptions: [\n        {\n          key: 'savePost',\n          text: <span><Icon circular size='small' name='tag' />Lưu bài viết</span>,\n\n          \n        },\n        {\n          key: 'postReport',\n          text :  <span onClick={this.handleMessage} ><Icon circular size='small' name='warning' />Báo cáo bài viết</span>,\n          \n        \n      },\n\n      ]\n   \n    }\n\n    componentDidMount(){\n      this.addPostListener()\n    }\n\n    addPostListener = () =>{\n\n      const ref = firebase.database().ref('posts')\n      const postLoaded = []\n      ref.on('child_added',snap =>{\n        ref.child(snap.key).on('child_added',snap => postLoaded.push(snap.val()));\n        this.setState({postFromDatabase: postLoaded.sort((a,b) =>{return b.timestamp-a.timestamp})})\n        \n      })\n    \n  \n    }\n\n\n\n  \n    openFileModal = () =>{\n      this.setState({fileModal: true})\n    }\n\n    closeFileModal = () =>{\n\n      this.setState({fileModal: false})\n    }\n\n    openImageModal = event =>{\n     \n      this.setState({imageModalStatus: true, imageModalURL: event.target.name})\n    }\n\n    closeImageModal = () =>{\n      this.setState({imageModalStatus: false, imageModalURL:''})\n\n    }\n\n    openPostModal = () =>{\n      this.setState({postModal: true})\n    }\n\n    closePostModal = () =>{\n      this.setState({postModal: false})\n    }\n\n    uploadFile = (file, metadata) =>{\n      const filePath = this.state.user.uid+'/media/image/'+uuid()+'.jpg'\n     \n      this.setState({\n  \n        imageLoading: true,\n        uploadTask: this.state.storeRef.child(filePath).put(file,metadata)\n      \n        },\n          () => {\n            this.state.uploadTask.on('state_changed', snap =>{\n              const percentUploaded = Math.round((snap.bytesTransferred / snap.totalBytes)*100);\n              console.log(percentUploaded)\n              this.setState({percentUploaded});\n            \n            if(percentUploaded === 100){\n              this.setState({percentUploaded: 0})\n              setTimeout(()=>{\n                this.state.uploadTask.snapshot.ref\n              .getDownloadURL()\n              .then(downloadURL => {\n                const image = {downloadURL: downloadURL, imagePath: this.state.uploadTask.location_.path}\n                this.setState({imagePost: this.state.imagePost.concat(image),imageLoading: false})\n              \n                 })\n                .catch(err=>console.log(err))\n              },1000)  \n            \n            }\n            \n            })\n          },err=>{console.log(err)}\n        )\n      }\n\n      savePost = event =>{\n        event.preventDefault();\n        const postChild = this.state.user.uid+uuid()+'/post';\n        const postCreate ={\n          postChild: postChild,\n          createByUid: this.state.user.uid,\n          createByName: this.state.user.displayName,\n          avatar: this.state.user.photoURL ,\n          timestamp: Date.now(),\n          postImages: Array().concat(this.state.imagePost),\n          postText: this.state.post,\n          liked: [{username: 'null', userUID: 'null'}]\n        }\n        \n        this.state.databaseRef.child(postChild).set(postCreate).then(()=>this.setState({post: '', imagePost: []}))\n        \n      }\n\n\n      \n\n      handleLikeClicked = (event, {name}) =>{\n     \n        event.preventDefault();\n        const post = this.state.postFromDatabase.filter((val,key,arr)=>{\n          return val.postChild === name\n        })\n\n        console.log(post[0].avatar);\n\n        \n        \n        let postLiked= post[0].liked;\n\n        const  currentUserLiked = postLiked.some(val=>{\n          \n          return val.userUID === this.state.user.uid;\n         \n        })\n\n\n        const imageNotExist = post[0].postImages === undefined;\n      \n        if(currentUserLiked){\n            postLiked = postLiked.filter((val,index,arr)=>{\n            return val.userUID !== this.state.user.uid\n          })\n        }else{\n          postLiked.push({username: this.state.user.displayName, userUID: this.state.user.uid})\n        }\n  \n        let postUpdate ;\n        if(imageNotExist){\n          post.forEach(val=>{\n            postUpdate ={\n              postChild: val.postChild,\n              createByUid: val.createByUid,\n              createByName: val.createByName,\n              avatar: val.avatar,\n              timestamp: val.timestamp,\n              postText: val.postText,\n              liked: postLiked\n            }\n            \n          \n          })\n         \n        }else{\n          post.forEach(val=>{\n            postUpdate ={\n              postChild: val.postChild,\n              createByUid: val.createByUid,\n              createByName: val.createByName,\n              avatar: val.avatar,\n              timestamp: val.timestamp,\n              postImages: val.postImages ,\n              postText: val.postText,\n              liked: postLiked\n            }\n            \n          \n          })\n        }\n       \n  \n         this.state.databaseRef.child(name).set(postUpdate).then(()=>this.addPostListener()).catch(err=>console.log(err))\n  \n      \n      }\n\n      \n\n      \n      displayImagePost = ({imagePost}) =>(\n        // this.state.uploadStatus.includes('uploading')  ? \n        // <Segment size='large' loading={this.state.percentUploaded < 100} >\n        //   <List horizontal>\n          \n        //       {imagePost.map((val,key) => (\n        //         <List.Item key={key+uuid} style={{marginRight: '15px'}}> \n\n        //             <Image  rounded size='small' key={val.downloadURL} src={val.downloadURL} label={{as: 'a' ,name: key, corner:'right', icon:'remove',size: 'mini',color:'red',onClick: this.removeImagePost}} /> \n                \n        //         </List.Item> ) )}\n                \n        //     <List.Item>\n        //       <Icon style={{cursor: 'pointer', boder: 'solid 2px '}} color='black' inverted name='add' size='big' onClick={this.openModal} />\n        //     </List.Item>\n        //   </List>\n          \n        // </Segment> : ''\n        <Dimmer.Dimmable  > \n          <Dimmer inverted active={this.state.percentUploaded > 0 && this.state.percentUploaded <100}>\n            <Loader>Loading</Loader>\n           \n          </Dimmer>\n\n          <List horizontal>\n          \n              {imagePost.map((val,key) => (\n                  <List.Item key={key+uuid} style={{marginRight: '15px'}}> \n  \n                      <Image wrapped rounded size='small' key={val.downloadURL} src={val.downloadURL} label={{as: 'a' ,name: key, corner:'right', icon:'remove',size: 'tiny',color:'red',onClick: this.removeImagePost}} /> \n                  \n                  </List.Item> ) )}\n                  \n              {imagePost.length > 0 ? \n                <List.Item>\n              <Icon link color='black' inverted name='add' size='big' onClick={this.openFileModal} />\n            </List.Item>\n            : ''  \n          }\n            </List>\n            \n    \n     \n          \n        </Dimmer.Dimmable>\n      )\n      \n      deleteImageFromStorge = imagePath =>{\n          if(imagePath){\n            this.state.storeRef.child(imagePath).delete().then(() => console.log(\"deleted\")).catch(err=> console.log(err))\n          }\n          \n      }\n\n      removeImagePost = event =>{\n        event.preventDefault();\n        let removeIndex = event.target.name;\n        \n        this.deleteImageFromStorge(this.state.imagePost[removeIndex].imagePath)\n\n        const newImagePost = this.state.imagePost.filter((value,index,arr) =>{\n          return index != removeIndex\n        })\n        \n\n        this.setState({imagePost : newImagePost})\n        \n        \n      }\n      \n    \n\n    render(){\n        const {user,post,postFromDatabase} = this.state;\n       \n\n        return(\n      <React.Fragment>\n        \n        <FileModal \n          fileModal={this.state.fileModal}\n          uploadFile = {this.uploadFile}\n          closeModal = {this.closeFileModal}\n        />\n        <CreatePostModal \n          modal={this.state.postModal} \n          closeModal={this.closePostModal}\n          user={user}\n          />\n        \n    <Segment stacked>\n    \n        <Header as='h3' block>\n        \n          <Header.Content style={{opacity: 0.6}}><Image style={{width:'30px'} } src={editIcon} /> Tạo Bài Viết</Header.Content>\n        \n        </Header>\n        \n          {this.displayImagePost(this.state)}\n        \n\n    \n\n        <Container   fluid style={{width: '100%', height: '80px'}}>\n        \n           \n            <Header  textAlign='left'>\n              <Image size='large' avatar src={user.photoURL}/> \n              <span onClick={this.openPostModal} style={{opacity: 0.5}}>Bạn muốn chia sẻ điều gì ?  </span>\n            </Header>\n         \n        \n        </Container>\n        <button onClick={this.openPostModal} className='btn__fullwidth__createPost' >\n          <span style={{color:'white', fontSize:'16',fontWeight: 700}} >Tạo bài viết của bạn</span>\n        </button>\n\n      {/* <Button.Group  compact fluid widths={4}  >\n        \n      <Button inverted style={{background: '#6FBE42'}}  onClick={this.openFileModal}  >\n              <Icon name='photo' /> Ảnh/Video\n            </Button>\n            <Button inverted style={{background: '#6FBE42'}}>\n              <Icon name='user plus' /> Tag Friends\n            </Button>\n         \n         \n            <Button inverted style={{background: '#6FBE42'}}>\n              <Icon name='smile outline' /> Cảm Xúc\n            </Button>\n          \n            <Button inverted style={{background: '#6FBE42'}}>\n              <Icon name='list' /> Khác\n             </Button>\n      </Button.Group> */}\n     \n  \n      {this.state.post.length > 0 || this.state.imagePost.length >0 ? <Button onClick={this.savePost} fluid style={{marginTop: '20px',background:'#ecf7e7'}}>\n        Post\n      </Button> : ''}\n        \n    </Segment>\n        \n      \n    \n      {postFromDatabase.length > 0 ? (\n        postFromDatabase.map((val, key) =>(\n          \n          <Segment  >\n      \n          <Feed size='large'>\n              <Feed.Event>\n              <Feed.Label image ={val.avatar} />\n              <Feed.Content>\n                <Feed.Summary> \n                <Dropdown\n                  inline\n                  closeOnChange\n                  options={this.state.postDrowdownOptions}\n                  pointing='top right'\n                  icon={null}\n                  style={{float: 'right', zIndex: 1000}}\n                  trigger={<i style={{opacity: 0.5}} className=\"fas fa-ellipsis-h\"></i>}\n                />\n                <Feed.User content={val.createByName} />\n                <Feed.Date>\n\n                {moment(val.timestamp).locale('vi').fromNow()}\n                {/* {moment(val.timestamp).fromNow()} */}\n               \n                  \n                </Feed.Date>\n                \n                </Feed.Summary>\n                <Feed.Summary>\n                  <i style={{opacity: 0.5, fontSize: 14}} className=\"fas fa-globe-asia\"></i> \n               \n                </Feed.Summary>\n\n                \n                 \n           \n              </Feed.Content>\n              \n              </Feed.Event>\n            \n          </Feed>\n          \n          <Feed size='large'  >\n          \n          <Feed.Event>\n            <Feed.Content >\n              <Container fluid text textAlign='justified' content={val.postText}>\n\n              </Container>\n              {val.postImages ? (\n                val.postImages.map((value,key) =>(        \n                    <List key={val.createByUid+val.timestamp+uuid()+hash(value.downloadURL)} horizontal  >\n                      <List.Item key={'list'+val.createByUid+val.timestamp+uuid()+hash(value.downloadURL)}   as='a'  >\n                       \n                       \n                          <Image centered fluid key={'image'+val.createByUid+val.timestamp+uuid()+hash(value.downloadURL)} src={value.downloadURL} name={value.downloadURL} onClick={this.openImageModal} />\n                          {/* <img style={{padding: '10px 10px'}} src={value.downloadURL} name={value.downloadURL} onClick={this.openImageModal} />\n                     */}\n                        <ImageModal \n                         \n                          imageModal={this.state.imageModalStatus} \n                          closeModal={this.closeImageModal}\n                          imageURL={this.state.imageModalURL} />\n                      </List.Item>\n                    </List>\n                    \n                \n                ))\n              ) : ''}\n               \n             \n            </Feed.Content>\n            \n          </Feed.Event>\n       \n\n          <Container style={{marginTop:'15px'}} fluid> \n          <Icon \n            name={val.liked.length -1 !==0 ? 'thumbs up': ''} \n            color='blue'  size='small' /> \n            <span style={{opacity: 0.6}}>{val.liked.length -1 === 0 ? '': val.liked.length -1 +' Thích' }</span>\n            <span style={{float: 'right',opacity: 0.6}} >20 comnents</span>\n          </Container>\n         \n          <Divider />\n            <Button.Group fluid size='small' compact >\n            <Button  name={val.postChild} onClick={this.handleLikeClicked} basic compact >\n            \n                <Icon name='thumbs up'  color={val.liked.some(val=>{return val.userUID === user.uid}) ? 'blue' :''} /> Like\n              </Button>\n              <Button basic compact >\n                <Icon name='comment outline' /> Comment\n              </Button>\n              <Button  basic compact>\n                <Icon name='share' /> Share \n              </Button>\n            </Button.Group>\n            <Divider />\n      \n         \n        \n      </Feed>\n      </Segment>\n        ))\n      ) :  ''}\n\n     \n\n \n\n      \n  </React.Fragment>\n \n           \n            \n        )\n    }\n\n}\n\nexport default NewsFeeds"]},"metadata":{},"sourceType":"module"}