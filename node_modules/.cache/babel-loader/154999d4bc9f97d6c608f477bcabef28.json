{"ast":null,"code":"var _jsxFileName = \"/home/hari/Desktop/web-dev/React/cstudy/src/components/NewsFeeds/NewsFeeds.js\";\nimport React from 'react';\nimport { Segment, Header, Icon, Label, Feed, Image, Divider, Grid, Form, TextArea, Menu, Button, List, Responsive, Modal } from 'semantic-ui-react';\nimport uuid from 'uuidv4';\nimport firebase from '../../firebase';\nimport FileModal from './FileModal';\nimport ImageModal from './ImageModal';\nimport moment from 'moment';\n\nclass NewsFeeds extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      like: false,\n      user: this.props.currentUser,\n      post: '',\n      fileModal: false,\n      imageModal: false,\n      uploadTask: null,\n      uploadStatus: '',\n      percentUploaded: 0,\n      imagePost: [],\n      postCreate: [],\n      postFromDatabase: [],\n      storeRef: firebase.storage().ref(),\n      databaseRef: firebase.database().ref('posts')\n    };\n\n    this.addPostListener = () => {\n      const ref = firebase.database().ref('posts');\n      const postLoaded = [];\n      ref.on('child_added', snap => {\n        ref.child(snap.key).on('child_added', snap => postLoaded.push(snap.val()));\n        this.setState({\n          postFromDatabase: this.state.postFromDatabase.concat(postLoaded)\n        });\n      });\n    };\n\n    this.handleLikeClicked = event => {\n      event.preventDefault();\n      this.setState({\n        like: !this.state.like\n      });\n    };\n\n    this.handlePostChange = (e, {\n      value\n    }) => {\n      this.setState({\n        post: value\n      });\n    };\n\n    this.openModal = () => {\n      this.setState({\n        fileModal: true\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        fileModal: false\n      });\n    };\n\n    this.openImageModal = () => {\n      this.setState({\n        imageModal: true\n      });\n    };\n\n    this.closeImageModal = () => {\n      this.setState({\n        imageModal: false\n      });\n    };\n\n    this.uploadFile = (file, metadata) => {\n      const filePath = this.state.user.uid + '/temporaryMedia/image/' + uuid() + '.jpg';\n      this.setState({\n        uploadStatus: 'uploading',\n        uploadTask: this.state.storeRef.child(filePath).put(file, metadata)\n      }, () => {\n        this.state.uploadTask.on('state_changed', snap => {\n          const percentUploaded = Math.round(snap.bytesTransferred / snap.totalBytes * 100);\n          this.setState({\n            percentUploaded\n          });\n          this.state.uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n            const image = {\n              downloadURL: downloadURL,\n              imagePath: this.state.uploadTask.location_.path\n            };\n            this.setState({\n              imagePost: this.state.imagePost.concat(image)\n            });\n          }).catch(err => console.log(err));\n          setTimeout(() => {\n            this.state.imagePost.forEach(imagePost => {\n              if (imagePost.length > 0) {\n                this.deleteImageFromStorge(imagePost.imagePath);\n              }\n            });\n            this.setState({\n              imagePost: []\n            });\n          }, 1200000); // if user doesn't post this will be delete in 20 minutesetTimeout(()=>{this.state.imagePost.forEach(imagePost => this.deleteImageFromStorge(imagePost.imagePath)) ;this.setState({imagePost: []})},5000) // if user doesn't post this will be delete in 20 minute\n        });\n      });\n    };\n\n    this.savePost = event => {\n      event.preventDefault();\n      const postCreate = {\n        createByUid: this.state.user.uid,\n        createByName: this.state.user.displayName,\n        avatar: this.state.user.photoURL,\n        timestamp: Date.now(),\n        postImages: Array().concat(this.state.imagePost),\n        postText: this.state.post\n      };\n      const postChild = this.state.user.uid + uuid() + '/post';\n      console.log(postCreate.postImages);\n      this.state.databaseRef.child(postChild).set(postCreate).then(() => this.setState({\n        post: '',\n        imagePost: []\n      }));\n    };\n\n    this.displayImagePost = ({\n      imagePost\n    }) => imagePost.length > 0 ? React.createElement(Segment, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(List, {\n      horizontal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, imagePost.map((val, key) => React.createElement(List.Item, {\n      key: key,\n      style: {\n        marginRight: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Image, {\n      rounded: true,\n      size: \"small\",\n      key: val.downloadURL,\n      src: val.downloadURL,\n      label: {\n        as: 'a',\n        name: key,\n        corner: 'right',\n        icon: 'remove',\n        size: 'mini',\n        color: 'red',\n        onClick: this.removeImagePost\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))), React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      style: {\n        cursor: 'pointer',\n        boder: 'solid 2px '\n      },\n      color: \"black\",\n      inverted: true,\n      name: \"add\",\n      size: \"big\",\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })))) : '';\n\n    this.deleteImageFromStorge = imagePath => {\n      if (imagePath) {\n        this.state.storeRef.child(imagePath).delete().then(() => console.log(\"deleted\")).catch(err => console.log(err));\n      }\n    };\n\n    this.removeImagePost = event => {\n      event.preventDefault();\n      let removeIndex = event.target.name;\n      this.deleteImageFromStorge(this.state.imagePost[removeIndex].imagePath);\n      const newImagePost = this.state.imagePost.filter((value, index, arr) => {\n        return index != removeIndex;\n      });\n      this.setState({\n        imagePost: newImagePost\n      });\n    };\n\n    this.imageModal = imageURL => React.createElement(ImageModal, {\n      imageModal: this.state.imageModal,\n      closeModal: this.closeImageModal,\n      imageURL: imageURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    });\n  }\n\n  componentDidMount() {\n    this.addPostListener();\n  }\n\n  render() {\n    const _this$state = this.state,\n          user = _this$state.user,\n          post = _this$state.post,\n          postFromDatabase = _this$state.postFromDatabase;\n    const postImages = [];\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(FileModal, {\n      fileModal: this.state.fileModal,\n      uploadFile: this.uploadFile,\n      closeModal: this.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Header.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Create Post \", React.createElement(Icon, {\n      name: \"edit outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }))), this.displayImagePost(this.state), React.createElement(Form, {\n      style: {\n        marginTop: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Image, {\n      avatar: true,\n      src: user.photoURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      placeholder: \"What do you thing ? \",\n      value: post,\n      onChange: this.handlePostChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }))), React.createElement(Responsive, {\n      minWidth: 1800,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Button.Group, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Button, {\n      circular: true,\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"photo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), \" Photo/Video\"), React.createElement(Button, {\n      circular: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"user plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), \" Tag Friends\"), React.createElement(Button, {\n      circular: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"music\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), \" Music\"), React.createElement(Button, {\n      circular: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"smile outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), \" Feeling\"), React.createElement(Button, {\n      circular: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"location arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), \" Check in\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), \" More\"))), React.createElement(Responsive, {\n      maxWidth: 1790,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Button.Group, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Button, {\n      circular: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"photo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), \" Photo/Video\"), React.createElement(Button, {\n      circular: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"user plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), \" Tag Friends\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), \" More\"))), this.state.post.length > 0 || this.state.imagePost.length > 0 ? React.createElement(Button, {\n      onClick: this.savePost,\n      fluid: true,\n      style: {\n        marginTop: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Post\") : ''), postFromDatabase.length > 0 ? postFromDatabase.map((value, key) => React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Feed, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(Feed.Event, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(Feed.Label, {\n      image: value.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), React.createElement(Feed.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Feed.Summary, {\n      user: value.createByName,\n      date: moment(value.timestamp).fromNow(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), React.createElement(Feed.Extra, {\n      text: true,\n      content: value.postText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), value.postImages.length > 0 ? value.postImages.map((value, key) => React.createElement(List, {\n      horizontal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(List.Item, {\n      as: \"a\",\n      onClick: this.imageModal(value.downloadURL) && this.openImageModal,\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: value.downloadURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    })))) : ''))))) : '');\n  }\n\n}\n\nexport default NewsFeeds;","map":{"version":3,"sources":["/home/hari/Desktop/web-dev/React/cstudy/src/components/NewsFeeds/NewsFeeds.js"],"names":["React","Segment","Header","Icon","Label","Feed","Image","Divider","Grid","Form","TextArea","Menu","Button","List","Responsive","Modal","uuid","firebase","FileModal","ImageModal","moment","NewsFeeds","Component","state","like","user","props","currentUser","post","fileModal","imageModal","uploadTask","uploadStatus","percentUploaded","imagePost","postCreate","postFromDatabase","storeRef","storage","ref","databaseRef","database","addPostListener","postLoaded","on","snap","child","key","push","val","setState","concat","handleLikeClicked","event","preventDefault","handlePostChange","e","value","openModal","closeModal","openImageModal","closeImageModal","uploadFile","file","metadata","filePath","uid","put","Math","round","bytesTransferred","totalBytes","snapshot","getDownloadURL","then","downloadURL","image","imagePath","location_","path","catch","err","console","log","setTimeout","forEach","length","deleteImageFromStorge","savePost","createByUid","createByName","displayName","avatar","photoURL","timestamp","Date","now","postImages","Array","postText","postChild","set","displayImagePost","map","marginRight","as","name","corner","icon","size","color","onClick","removeImagePost","cursor","boder","delete","removeIndex","target","newImagePost","filter","index","arr","imageURL","componentDidMount","render","marginTop","fromNow"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Segment,Header,Icon,Label, Feed,Image, Divider, Grid, Form, TextArea, Menu, Button, List, Responsive, Modal} from 'semantic-ui-react'\nimport uuid from 'uuidv4'\nimport firebase from '../../firebase'\nimport FileModal from './FileModal'\nimport ImageModal from './ImageModal'\nimport moment from 'moment'\nclass NewsFeeds extends React.Component{\n\n    state ={\n      like: false,\n      user: this.props.currentUser,\n      post: '',\n      fileModal: false,\n      imageModal: false,\n      uploadTask: null,\n      uploadStatus : '',\n      percentUploaded : 0,\n      imagePost: [],\n      postCreate: [],\n      postFromDatabase: [],\n      storeRef: firebase.storage().ref(),\n      databaseRef: firebase.database().ref('posts')\n     \n    }\n\n    componentDidMount(){\n      this.addPostListener()\n    }\n\n    addPostListener = () =>{\n\n      const ref = firebase.database().ref('posts')\n      const postLoaded = []\n      ref.on('child_added',snap =>{\n        ref.child(snap.key).on('child_added',snap => postLoaded.push(snap.val()));\n        this.setState({postFromDatabase: this.state.postFromDatabase.concat(postLoaded)})\n   \n        \n      })\n  \n    }\n\n\n    handleLikeClicked = event =>{\n        event.preventDefault();\n        this.setState({like: !this.state.like })\n    }\n    \n    handlePostChange = (e, { value}) =>{\n      this.setState({post: value})\n    }\n    \n    openModal = () =>{\n      this.setState({fileModal: true})\n    }\n\n    closeModal = () =>{\n\n      this.setState({fileModal: false})\n    }\n\n    openImageModal = () =>{\n      this.setState({imageModal: true})\n    }\n\n    closeImageModal = () =>{\n      this.setState({imageModal: false})\n    }\n\n    uploadFile = (file, metadata) =>{\n      const filePath = this.state.user.uid+'/temporaryMedia/image/'+uuid()+'.jpg'\n\n      this.setState({\n        uploadStatus : 'uploading',\n        uploadTask: this.state.storeRef.child(filePath).put(file,metadata)\n      \n        },\n          () => {\n            this.state.uploadTask.on('state_changed', snap =>{\n              const percentUploaded = Math.round((snap.bytesTransferred / snap.totalBytes)*100)\n              this.setState({percentUploaded});\n            \n            \n            this.state.uploadTask.snapshot.ref\n            .getDownloadURL()\n            .then(downloadURL => {\n              const image = {downloadURL: downloadURL, imagePath: this.state.uploadTask.location_.path}\n              this.setState({imagePost: this.state.imagePost.concat(image)})\n            \n               })\n              .catch(err=>console.log(err))\n            \n            setTimeout(()=>{this.state.imagePost.forEach(imagePost => {if(imagePost.length > 0 ) {this.deleteImageFromStorge(imagePost.imagePath)}}) ;this.setState({imagePost: []})},1200000) // if user doesn't post this will be delete in 20 minutesetTimeout(()=>{this.state.imagePost.forEach(imagePost => this.deleteImageFromStorge(imagePost.imagePath)) ;this.setState({imagePost: []})},5000) // if user doesn't post this will be delete in 20 minute\n            })\n          }\n        )\n      }\n\n      savePost = event =>{\n        event.preventDefault();\n        const postCreate ={\n          createByUid: this.state.user.uid,\n          createByName: this.state.user.displayName,\n          avatar: this.state.user.photoURL ,\n          timestamp: Date.now(),\n          postImages: Array().concat(this.state.imagePost),\n          postText: this.state.post\n        }\n        const postChild = this.state.user.uid+uuid()+'/post';\n        console.log(postCreate.postImages)\n        this.state.databaseRef.child(postChild).set(postCreate).then(()=>this.setState({post: '', imagePost: []}))\n        \n\n      }\n\n      displayImagePost = ({imagePost}) =>(\n        imagePost.length > 0 ? \n        <Segment size='large' >\n          <List  horizontal>\n          \n              {imagePost.map((val,key) => (\n                <List.Item key={key} style={{marginRight: '15px'}}> \n                  <Image rounded size='small' key={val.downloadURL} src={val.downloadURL} label={{as: 'a' ,name: key, corner:'right', icon:'remove',size: 'mini',color:'red',onClick: this.removeImagePost}} /> \n                </List.Item> ) )}\n                \n            <List.Item>\n              <Icon style={{cursor: 'pointer', boder: 'solid 2px '}} color='black' inverted name='add' size='big' onClick={this.openModal} />\n            </List.Item>\n          </List>\n          \n        </Segment> : ''\n      )\n      \n      deleteImageFromStorge = imagePath =>{\n          if(imagePath){\n            this.state.storeRef.child(imagePath).delete().then(() => console.log(\"deleted\")).catch(err=> console.log(err))\n          }\n          \n      }\n\n      removeImagePost = event =>{\n        event.preventDefault();\n        let removeIndex = event.target.name;\n        \n        this.deleteImageFromStorge(this.state.imagePost[removeIndex].imagePath)\n\n        const newImagePost = this.state.imagePost.filter((value,index,arr) =>{\n          return index != removeIndex\n        })\n        \n\n        this.setState({imagePost : newImagePost})\n        \n        \n      }\n      \n      imageModal = imageURL => (\n        <ImageModal \n          imageModal={this.state.imageModal} \n          closeModal={this.closeImageModal}\n          imageURL={imageURL} />\n      )\n\n\n    render(){\n        const {user,post,postFromDatabase} = this.state;\n        const postImages = [];\n        return(\n      <React.Fragment>\n        \n        <FileModal fileModal={this.state.fileModal}\n                   uploadFile = {this.uploadFile}\n                   closeModal = {this.closeModal}\n        />\n        \n    <Segment stacked>\n      \n        <Header as='h3' block>\n        \n          <Header.Content>Create Post <Icon name='edit outline' /></Header.Content>\n        \n        </Header>\n        \n          {this.displayImagePost(this.state)}\n        \n\n    \n\n        <Form style={{marginTop: '5px'}}>\n         <Form.Group >\n           <Image avatar src={user.photoURL}/>\n           <TextArea placeholder='What do you thing ? ' value={post} onChange={this.handlePostChange} >\n          \n          </TextArea>\n         </Form.Group>\n        \n        </Form>\n       \n      <Responsive minWidth={1800}>\n      <Button.Group fluid >\n        \n      <Button circular onClick={this.openModal}  >\n              <Icon name='photo' /> Photo/Video\n            </Button>\n            <Button circular>\n              <Icon name='user plus' /> Tag Friends\n            </Button>\n         \n            <Button circular>\n              <Icon name='music' /> Music\n            </Button>\n            <Button circular>\n              <Icon name='smile outline' /> Feeling\n            </Button>\n            <Button circular>\n              <Icon name='location arrow' /> Check in\n            </Button>\n            <Button>\n              <Icon name='list' /> More\n             </Button>\n      </Button.Group>\n      </Responsive>\n      <Responsive maxWidth={1790} >\n      <Button.Group fluid >\n      <Button circular  >\n              <Icon name='photo' /> Photo/Video\n            </Button>\n            <Button circular>\n              <Icon name='user plus' /> Tag Friends\n            </Button>\n         \n            \n            <Button>\n              <Icon name='list' /> More\n             </Button>\n      </Button.Group>\n      </Responsive>\n      {this.state.post.length > 0 || this.state.imagePost.length >0 ? <Button  onClick={this.savePost} fluid style={{marginTop: '20px'}}>\n        Post\n      </Button> : ''}\n         \n    </Segment>\n    \n      \n    \n      {postFromDatabase.length > 0 ? (\n        postFromDatabase.map((value, key) =>(\n         \n          <Segment >\n         \n        \n          <Feed size='large'  >\n          \n          <Feed.Event>\n            <Feed.Label image={value.avatar} />\n            <Feed.Content >\n              <Feed.Summary user={value.createByName} date={moment(value.timestamp).fromNow()} />\n              <Feed.Extra text content={value.postText} />\n              {value.postImages.length > 0 ? (\n                value.postImages.map((value,key) =>(\n               \n                    <List horizontal  >\n                      <List.Item as='a' onClick={this.imageModal(value.downloadURL) && this.openImageModal} key={key}>\n                        <img src={value.downloadURL} />\n                      </List.Item>\n                    </List>\n                    \n                \n                ))\n              ) : ''}\n            </Feed.Content>\n          </Feed.Event>\n      </Feed>\n      </Segment>\n        ))\n      ) :  ''}\n\n     \n\n \n\n      \n  </React.Fragment>\n \n           \n            \n        )\n    }\n\n}\n\nexport default NewsFeeds"]},"metadata":{},"sourceType":"module"}